{"version":3,"sources":["webpack:///./node_modules/devextreme-angular/ui/accordion.js","webpack:///./node_modules/devextreme-angular/ui/autocomplete.js","webpack:///./node_modules/devextreme-angular/ui/button.js","webpack:///./node_modules/devextreme-angular/ui/check-box.js","webpack:///./node_modules/devextreme-angular/ui/context-menu.js","webpack:///./node_modules/devextreme-angular/ui/date-box.js","webpack:///./node_modules/devextreme-angular/ui/form.js","webpack:///./node_modules/devextreme-angular/ui/lookup.js","webpack:///./node_modules/devextreme-angular/ui/nested/adapter.js","webpack:///./node_modules/devextreme-angular/ui/nested/base/calendar-options.js","webpack:///./node_modules/devextreme-angular/ui/nested/calendar-options.js","webpack:///./node_modules/devextreme-angular/ui/nested/delay.js","webpack:///./node_modules/devextreme-angular/ui/nested/display-format.js","webpack:///./node_modules/devextreme-angular/ui/nested/show-event.js","webpack:///./node_modules/devextreme-angular/ui/nested/show-submenu-mode.js","webpack:///./node_modules/devextreme-angular/ui/popup.js","webpack:///./node_modules/devextreme-angular/ui/progress-bar.js","webpack:///./node_modules/devextreme-angular/ui/scroll-view.js","webpack:///./node_modules/devextreme-angular/ui/select-box.js","webpack:///./node_modules/devextreme-angular/ui/tab-panel.js","webpack:///./node_modules/devextreme-angular/ui/text-area.js","webpack:///./node_modules/devextreme-angular/ui/validator.js","webpack:///./node_modules/devextreme/ui/accordion.js","webpack:///./node_modules/devextreme/ui/autocomplete.js","webpack:///./node_modules/devextreme/ui/lookup.js","webpack:///./node_modules/devextreme/ui/progress_bar.js","webpack:///./node_modules/devextreme/ui/text_area.js","webpack:///./node_modules/devextreme/ui/track_bar.js"],"names":[],"mappings":"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oB,mBAAO,CAAC,kFAAqB;AACjD,iBAAiB,mBAAO,CAAC,4EAAkB;AAC3C,sBAAsB,mBAAO,CAAC,sFAAuB;AACrD,uBAAuB,mBAAO,CAAC,wFAAwB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC;AACnD,aAAa,oDAAoD;AACjE,aAAa,8CAA8C;AAC3D,aAAa,kDAAkD;AAC/D,aAAa,sDAAsD;AACnE,aAAa,0BAA0B;AACvC,aAAa,mCAAmC;AAChD,aAAa,yBAAyB;AACtC,aAAa,4BAA4B;AACzC,aAAa,kCAAkC;AAC/C,aAAa,uBAAuB;AACpC,aAAa,qBAAqB;AAClC,aAAa,kCAAkC;AAC/C,aAAa,qBAAqB;AAClC,aAAa,2BAA2B;AACxC,aAAa,4BAA4B;AACzC,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC,aAAa,qBAAqB;AAClC,aAAa,qBAAqB;AAClC,aAAa,kCAAkC;AAC/C,aAAa,gCAAgC;AAC7C,aAAa,wBAAwB;AACrC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS,gCAAgC,mDAAmD,IAAI;AAChG,MAAM;AACN;AACA,uB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L;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AAC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BAA6B;AAC1C,aAAa,yBAAyB;AACtC,aAAa,6BAA6B;AAC1C,aAAa,gCAAgC;AAC7C,aAAa,2BAA2B;AACxC,aAAa,8BAA8B;AAC3C,aAAa,iCAAiC;AAC9C,aAAa,oCAAoC;AACjD,aAAa,iCAAiC;AAC9C,aAAa,iCAAiC;AAC9C,aAAa,sCAAsC;AACnD,aAAa,yBAAyB;AACtC,aAAa,gCAAgC;AAC7C,aAAa,wBAAwB;AACrC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,uDAAuD;AAChE,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS,gCAAgC,mDAAmD,IAAI;AAChG,MAAM;AACN;AACA,uBAAuB,qBAAqB;AAC5C,gCAAgC,qBAAqB;AACrD,6BAA6B,qBAAqB;AAClD,wCAAwC,qBAAqB;AAC7D,sBAAsB,qBAAqB;AAC3C,8BAA8B,qBAAqB;AACnD,2BAA2B,qBAAqB;AAChD,sBAAsB,qBAAqB;AAC3C,yBAAyB,qBAAqB;AAC9C,+BAA+B,qBAAqB;AACpD,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,kBAAkB,qBAAqB;AACvC,+BAA+B,qBAAqB;AACpD,mBAAmB,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,aAAa,+BAA+B;AAC5C,aAAa,4BAA4B;AACzC,aAAa,yBAAyB;AACtC,aAAa,qBAAqB;AAClC,aAAa,sBAAsB;AACnC,aAAa,8BAA8B;AAC3C,aAAa,mCAAmC;AAChD,aAAa,2BAA2B;AACxC,aAAa,gCAAgC;AAC7C,aAAa,sCAAsC;AACnD,aAAa,sBAAsB;AACnC,aAAa,iCAAiC;AAC9C,aAAa,0BAA0B;AACvC,aAAa,wBAAwB;AACrC,aAAa,sBAAsB;AACnC,aAAa;AACbuDAAuD;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,kBAAkB;AACpF,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,uDAAuD;AAChE,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS,gCAAgC,mDAAmD,IAAI;AAChG,MAAM;AACN;AACA,uBAAuB,uEAAuE;AAC9F,uBAAuB,qBAAqB;AAC5C,gCAAgC,qBAAqB;AACrD,uBAAuB,qBAAqB;AAC5C,6BAA6B,qBAAqB;AAClD,4BAA4B,qBAAqB;AACjD,8BAA8B,qBAAqB;AACnD,kCAAkC,qBAAqB;AACvD,6BAA6B,qBAAqB;AAClD,iCAAiC,qBAAqB;AACtD,wBAAwB,qBAAqB;AAC7C,4BAA4B,qBA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ACxC,sBAAsB,qBAAqB;AAC3C,mBAAmB,qBAAqB;AACxC,yCAAyC,qBAAqB;AAC9D;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;;;;;;AC9Ia;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,4FAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,4C;;;;;;;;;;;;ACjWa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,yBAAyB,mBAAO,CAAC,qGAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,yBAAyB,sBAAsB;AAC/C,6BAA6B,sBAAsB;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,4C;;;;;;;;;;;;ACpHa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,kBAAkB,qBAAqB;AACvC,kBAAkB,qBAAqB;AACvC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;;;;;;AClGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,eAAe,mBAAO,CAAC,iFAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACjFa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,mBAAmB,qBAAqB;AACxC,kBAAkB,qBAAqB;AACvC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;AClGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,mBAAmB,qBAAqB;AACxC,kBAAkB,qBAAqB;AACvC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,6C;;;;;;;;;;;;AClGa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,qGAA2B;AAC5D,yBAAyB,mBAAO,CAAC,qGAA2B;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,kEAAqB;AAC3C,kBAAkB,mBAAO,CAAC,8EAAmB;AAC7C,sBAAsB,mBAAO,CAAC,sFAAuB;AACrD,oBAAoB,mBAAO,CAAC,kF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ACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,kBAAkB;AACzF,wEAAwE,mBAAmB;AAC3F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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ACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,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,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,0DAA0D;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,S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CA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,kBAAkB;AACtF,qEAAqE,mBAAmB;AACxF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS,gCAAgC,mDAAmD,IAAI;AAChG,MAAM;AACN;AACA,uBAAuB,uEAAuE;AAC9F,uBAAuB,qBAAqB;AAC5C,gCAAgC,qBAAqB;AACrD,+BAA+B,qBAAqB;AACpD,sBAAsB,qBAAqB;AAC3C,yBAAyB,qBA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,qBAAqB;AAClC,aAAa,gCAAgC;AAC7C,aAAa,gCAAgC;AAC7C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,uDAAuD;AAChE,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS,gCAAgC,mDAAmD,IAAI;AAChG,MAAM;AACN;AACA,qBAAqB,qBAAqB;AAC1C,yBAAyB,qBAAqB;AAC9C,oBAAoB,qBAAqB;AACzC,kBAAkB,qBAAqB;AACvC,6BAA6B,qBAAqB;AAClD,6BAA6B,qBAAqB;AAClD,mBAAmB,qBAAqB;AACxC,yBAAyB,sBAAsB;AAC/C,2BAA2B,sBAAsB;AACjD,6BAA6B,sBAAsB;AACnD,yBAAyB,sBAAsB;AAC/C,2BAA2B,sBAAsB;AACjD,+BAA+B,sBAAsB;AACrD,0BAA0B,sBAAsB;AAChD,wBAAwB,sBAAsB;AAC9C,mCAAmC,sBAAsB;AACzD,mCAAmC,sBAAsB;AACzD,yBAAyB,sBAAsB;AAC/C,qCAAqC,0FAA0F;AAC/H;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,mBAAmB,mBAAO,CAAC,4FAA8B;AACzD,SAAS,mBAAO,CAAC,kEAAiB;AAClC,iBAAiB,mBAAO,CAAC,kEAAiB;AAC1C,cAAc,mBAAO,CAAC,kEAAiB;AACvC,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,uBAAuB,mBAAO,CAAC,sEAAmB;AAClD,oBAAoB,mBAAO,CAAC,gFAAwB;AACpD,oBAAoB,mBAAO,CAAC,wEAAoB;AAChD,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,iBAAiB,mBAAO,CAAC,kEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,kIAA+C;AAC9E,oBAAoB,mBAAO,CAAC,gFAAwB;AACpD;AACA;AACA,uBAAuB,mBAAO,CAAC,4FAA4B;AAC3D,gBAAgB,mBAAO,CAAC,wEAAoB;AAC5C,gBAAgB,mBAAO,CAAC,wEAAoB;AAC5C,aAAa,mBAAO,CAAC,wDAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;ACnUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,WAAW,mBAAO,CAAC,4EAAsB;AACzC,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,mBAAmB,mBAAO,CAAC,gHAAsC;AACjE,aAAa,mBAAO,CAAC,wDAAU;AAC/B,eAAe,mBAAO,CAAC,gFAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,mBAAmB,mBAAO,CAAC,4FAA8B;AACzD,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,cAAc,mBAAO,CAAC,8EAAuB;AAC7C,kBAAkB,mBAAO,CAAC,4EAAsB;AAChD,eAAe,mBAAO,CAAC,sEAAmB;AAC1C,WAAW,mBAAO,CAAC,gFAAwB;AAC3C,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,gBAAgB,mBAAO,CAAC,0FAA2B;AACnD,0BAA0B,mBAAO,CAAC,kFAAyB;AAC3D,cAAc,mBAAO,CAAC,kEAAiB;AACvC,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,iBAAiB,mBAAO,CAAC,kEAAiB;AAC1C,mBAAmB,mBAAO,CAAC,gHAAsC;AACjE,aAAa,mBAAO,CAAC,wDAAU;AAC/B,iBAAiB,mBAAO,CAAC,kEAAiB;AAC1C,cAAc,mBAAO,CAAC,0DAAW;AACjC,cAAc,mBAAO,CAAC,4DAAY;AAClC,2BAA2B,mBAAO,CAAC,sGAAiC;AACpE,iBAAiB,mBAAO,CAAC,kFAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;ACvtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,eAAe,mBAAO,CAAC,8DAAa;AACpC,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,iBAAiB,mBAAO,CAAC,wEAAoB;AAC7C,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,mBAAmB,mBAAO,CAAC,4FAA8B;AACzD,WAAW,mBAAO,CAAC,4EAAsB;AACzC,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,iBAAiB,mBAAO,CAAC,kEAAiB;AAC1C,oBAAoB,mBAAO,CAAC,sEAAmB;AAC/C,cAAc,mBAAO,CAAC,4DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,oEAAkB;AAClC,aAAa,mBAAO,CAAC,sEAAiB;AACtC,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,kBAAkB,mBAAO,CAAC,4EAAsB;AAChD,SAAS,mBAAO,CAAC,kEAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA","file":"default~views-administration-administration-module-ngfactory~views-asset-asset-module-ngfactory~view~3758f1a8.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar accordion_1 = require(\"devextreme/ui/accordion\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\n/**\r\n * The Accordion widget contains several panels displayed one under another. These panels can be collapsed or expanded by an end user, which makes this widget very useful for presenting information in a limited amount of space.\r\n */\r\nvar DxAccordionComponent = (function (_super) {\r\n    __extends(DxAccordionComponent, _super);\r\n    function DxAccordionComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemContextMenu', emit: 'onItemContextMenu' },\r\n            { subscribe: 'itemHold', emit: 'onItemHold' },\r\n            { subscribe: 'itemRendered', emit: 'onItemRendered' },\r\n            { subscribe: 'itemTitleClick', emit: 'onItemTitleClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationDurationChange' },\r\n            { emit: 'collapsibleChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemHoldTimeoutChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'itemTitleTemplateChange' },\r\n            { emit: 'keyExprChange' },\r\n            { emit: 'multipleChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'repaintChangesOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'selectedIndexChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'selectedItemKeysChange' },\r\n            { emit: 'selectedItemsChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"animationDuration\", {\r\n        get: /**\r\n             * A number specifying the time in milliseconds spent on the animation of the expanding or collapsing of a panel.\r\n             */\r\n        function () {\r\n            return this._getOption('animationDuration');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animationDuration', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"collapsible\", {\r\n        get: /**\r\n             * Specifies whether all items can be collapsed or whether at least one item must always be expanded.\r\n             */\r\n        function () {\r\n            return this._getOption('collapsible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('collapsible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data to be displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the panel's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"itemHoldTimeout\", {\r\n        get: /**\r\n             * The time period in milliseconds before the onItemHold event is raised.\r\n             */\r\n        function () {\r\n            return this._getOption('itemHoldTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemHoldTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"items\", {\r\n        get: /**\r\n             * An array of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"itemTitleTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for item titles.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTitleTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTitleTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"keyExpr\", {\r\n        get: /**\r\n             * Specifies which data field provides keys for widget items.\r\n             */\r\n        function () {\r\n            return this._getOption('keyExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('keyExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"multiple\", {\r\n        get: /**\r\n             * Specifies whether the widget can expand several items or only a single item at once.\r\n             */\r\n        function () {\r\n            return this._getOption('multiple');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('multiple', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"noDataText\", {\r\n        get: /**\r\n             * The text or HTML markup displayed by the widget if the item collection is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('noDataText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('noDataText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"repaintChangesOnly\", {\r\n        get: /**\r\n             * Specifies whether to repaint only those elements whose data changed.\r\n             */\r\n        function () {\r\n            return this._getOption('repaintChangesOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('repaintChangesOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"selectedIndex\", {\r\n        get: /**\r\n             * The index number of the currently selected item.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * The selected item object.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"selectedItemKeys\", {\r\n        get: /**\r\n             * Specifies an array of currently selected item keys.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItemKeys');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItemKeys', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"selectedItems\", {\r\n        get: /**\r\n             * An array of currently selected item objects.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItems');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItems', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAccordionComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxAccordionComponent.prototype._createInstance = function (element, options) {\r\n        return new accordion_1.default(element, options);\r\n    };\r\n    DxAccordionComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxAccordionComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('selectedItemKeys', changes);\r\n        this.setupChanges('selectedItems', changes);\r\n    };\r\n    DxAccordionComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxAccordionComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('selectedItemKeys');\r\n        this._idh.doCheck('selectedItems');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxAccordionComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxAccordionComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-accordion',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxAccordionComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxAccordionComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"animationDuration\": [{ type: core_1.Input },],\r\n        \"collapsible\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"itemHoldTimeout\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"itemTitleTemplate\": [{ type: core_1.Input },],\r\n        \"keyExpr\": [{ type: core_1.Input },],\r\n        \"multiple\": [{ type: core_1.Input },],\r\n        \"noDataText\": [{ type: core_1.Input },],\r\n        \"repaintChangesOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"selectedIndex\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"selectedItemKeys\": [{ type: core_1.Input },],\r\n        \"selectedItems\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onItemContextMenu\": [{ type: core_1.Output },],\r\n        \"onItemHold\": [{ type: core_1.Output },],\r\n        \"onItemRendered\": [{ type: core_1.Output },],\r\n        \"onItemTitleClick\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"animationDurationChange\": [{ type: core_1.Output },],\r\n        \"collapsibleChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"itemHoldTimeoutChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"itemTitleTemplateChange\": [{ type: core_1.Output },],\r\n        \"keyExprChange\": [{ type: core_1.Output },],\r\n        \"multipleChange\": [{ type: core_1.Output },],\r\n        \"noDataTextChange\": [{ type: core_1.Output },],\r\n        \"repaintChangesOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"selectedIndexChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"selectedItemKeysChange\": [{ type: core_1.Output },],\r\n        \"selectedItemsChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxAccordionComponent;\r\n}(component_1.DxComponent));\r\nexports.DxAccordionComponent = DxAccordionComponent;\r\nvar DxAccordionModule = (function () {\r\n    function DxAccordionModule() {\r\n    }\r\n    DxAccordionModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        item_dxi_1.DxiItemModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxAccordionComponent\r\n                    ],\r\n                    exports: [\r\n                        DxAccordionComponent,\r\n                        item_dxi_1.DxiItemModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxAccordionModule;\r\n}());\r\nexports.DxAccordionModule = DxAccordionModule;\r\n//# sourceMappingURL=accordion.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar autocomplete_1 = require(\"devextreme/ui/autocomplete\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxAutocompleteComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The Autocomplete widget is a textbox that provides suggestions while a user types into it.\r\n */\r\nvar DxAutocompleteComponent = (function (_super) {\r\n    __extends(DxAutocompleteComponent, _super);\r\n    function DxAutocompleteComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyPress', emit: 'onKeyPress' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'displayValueChange' },\r\n            { emit: 'dropDownButtonTemplateChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'groupedChange' },\r\n            { emit: 'groupTemplateChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'maxItemCountChange' },\r\n            { emit: 'maxLengthChange' },\r\n            { emit: 'minSearchLengthChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'openOnFieldClickChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'searchExprChange' },\r\n            { emit: 'searchModeChange' },\r\n            { emit: 'searchTimeoutChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDropDownButtonChange' },\r\n            { emit: 'spellcheckChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'valueExprChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data the widget should display.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the drop-down field's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"displayValue\", {\r\n        get: /**\r\n             * Returns the value currently displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"dropDownButtonTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the drop-down button.\r\n             */\r\n        function () {\r\n            return this._getOption('dropDownButtonTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dropDownButtonTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"grouped\", {\r\n        get: /**\r\n             * Specifies whether data items should be grouped.\r\n             */\r\n        function () {\r\n            return this._getOption('grouped');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('grouped', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"groupTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for group captions.\r\n             */\r\n        function () {\r\n            return this._getOption('groupTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('groupTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"inputAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be passed on to the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"items\", {\r\n        get: /**\r\n             * An array of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"maxItemCount\", {\r\n        get: /**\r\n             * Specifies the maximum count of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('maxItemCount');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxItemCount', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"maxLength\", {\r\n        get: /**\r\n             * Specifies the maximum number of characters you can enter into the textbox.\r\n             */\r\n        function () {\r\n            return this._getOption('maxLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"minSearchLength\", {\r\n        get: /**\r\n             * The minimum number of characters that must be entered into the text box to begin a search.\r\n             */\r\n        function () {\r\n            return this._getOption('minSearchLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minSearchLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"opened\", {\r\n        get: /**\r\n             * Specifies whether or not the drop-down editor is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('opened');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('opened', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"openOnFieldClick\", {\r\n        get: /**\r\n             * Specifies whether a user can open the drop-down list by clicking a text field.\r\n             */\r\n        function () {\r\n            return this._getOption('openOnFieldClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('openOnFieldClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"placeholder\", {\r\n        get: /**\r\n             * The text displayed by the widget when the widget value is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"searchExpr\", {\r\n        get: /**\r\n             * Specifies the name of a data source item field or an expression whose value is compared to the search criterion.\r\n             */\r\n        function () {\r\n            return this._getOption('searchExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"searchMode\", {\r\n        get: /**\r\n             * Specifies a comparison operation used to search widget items.\r\n             */\r\n        function () {\r\n            return this._getOption('searchMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"searchTimeout\", {\r\n        get: /**\r\n             * Specifies the time delay, in milliseconds, after the last character has been typed in, before a search is executed.\r\n             */\r\n        function () {\r\n            return this._getOption('searchTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * Gets the currently selected item.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"showClearButton\", {\r\n        get: /**\r\n             * Specifies whether to display the Clear button in the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('showClearButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showClearButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"showDropDownButton\", {\r\n        get: /**\r\n             * Specifies whether the drop-down button is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('showDropDownButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDropDownButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"spellcheck\", {\r\n        get: /**\r\n             * Specifies whether or not the widget checks the inner text for spelling mistakes.\r\n             */\r\n        function () {\r\n            return this._getOption('spellcheck');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('spellcheck', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the widget's text field is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The read-only option that holds the text displayed by the widget input element.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"value\", {\r\n        get: /**\r\n             * Specifies the current value displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"valueChangeEvent\", {\r\n        get: /**\r\n             * Specifies the DOM events after which the widget's value should be updated.\r\n             */\r\n        function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"valueExpr\", {\r\n        get: /**\r\n             * Specifies which data field provides the widget's value. When this option is not set, the value is the entire data object.\r\n             */\r\n        function () {\r\n            return this._getOption('valueExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxAutocompleteComponent.prototype.change = function (_) { };\r\n    Object.defineProperty(DxAutocompleteComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxAutocompleteComponent.prototype._createInstance = function (element, options) {\r\n        return new autocomplete_1.default(element, options);\r\n    };\r\n    DxAutocompleteComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxAutocompleteComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxAutocompleteComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxAutocompleteComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxAutocompleteComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxAutocompleteComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxAutocompleteComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('searchExpr', changes);\r\n    };\r\n    DxAutocompleteComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxAutocompleteComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('searchExpr');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxAutocompleteComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxAutocompleteComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxAutocompleteComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxAutocompleteComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-autocomplete',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxAutocompleteComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxAutocompleteComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"displayValue\": [{ type: core_1.Input },],\r\n        \"dropDownButtonTemplate\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"grouped\": [{ type: core_1.Input },],\r\n        \"groupTemplate\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"inputAttr\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"maxItemCount\": [{ type: core_1.Input },],\r\n        \"maxLength\": [{ type: core_1.Input },],\r\n        \"minSearchLength\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"opened\": [{ type: core_1.Input },],\r\n        \"openOnFieldClick\": [{ type: core_1.Input },],\r\n        \"placeholder\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"searchExpr\": [{ type: core_1.Input },],\r\n        \"searchMode\": [{ type: core_1.Input },],\r\n        \"searchTimeout\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"showClearButton\": [{ type: core_1.Input },],\r\n        \"showDropDownButton\": [{ type: core_1.Input },],\r\n        \"spellcheck\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"valueChangeEvent\": [{ type: core_1.Input },],\r\n        \"valueExpr\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onChange\": [{ type: core_1.Output },],\r\n        \"onClosed\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onCopy\": [{ type: core_1.Output },],\r\n        \"onCut\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onEnterKey\": [{ type: core_1.Output },],\r\n        \"onFocusIn\": [{ type: core_1.Output },],\r\n        \"onFocusOut\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onInput\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onKeyDown\": [{ type: core_1.Output },],\r\n        \"onKeyPress\": [{ type: core_1.Output },],\r\n        \"onKeyUp\": [{ type: core_1.Output },],\r\n        \"onOpened\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPaste\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"displayValueChange\": [{ type: core_1.Output },],\r\n        \"dropDownButtonTemplateChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"groupedChange\": [{ type: core_1.Output },],\r\n        \"groupTemplateChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"inputAttrChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"maxItemCountChange\": [{ type: core_1.Output },],\r\n        \"maxLengthChange\": [{ type: core_1.Output },],\r\n        \"minSearchLengthChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"openedChange\": [{ type: core_1.Output },],\r\n        \"openOnFieldClickChange\": [{ type: core_1.Output },],\r\n        \"placeholderChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"searchExprChange\": [{ type: core_1.Output },],\r\n        \"searchModeChange\": [{ type: core_1.Output },],\r\n        \"searchTimeoutChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"showClearButtonChange\": [{ type: core_1.Output },],\r\n        \"showDropDownButtonChange\": [{ type: core_1.Output },],\r\n        \"spellcheckChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"valueChangeEventChange\": [{ type: core_1.Output },],\r\n        \"valueExprChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxAutocompleteComponent;\r\n}(component_1.DxComponent));\r\nexports.DxAutocompleteComponent = DxAutocompleteComponent;\r\nvar DxAutocompleteModule = (function () {\r\n    function DxAutocompleteModule() {\r\n    }\r\n    DxAutocompleteModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        item_dxi_1.DxiItemModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxAutocompleteComponent\r\n                    ],\r\n                    exports: [\r\n                        DxAutocompleteComponent,\r\n                        item_dxi_1.DxiItemModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxAutocompleteModule;\r\n}());\r\nexports.DxAutocompleteModule = DxAutocompleteModule;\r\n//# sourceMappingURL=autocomplete.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar button_1 = require(\"devextreme/ui/button\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\n/**\r\n * The Button widget is a simple button that performs specified commands when a user clicks it.\r\n */\r\nvar DxButtonComponent = (function (_super) {\r\n    __extends(DxButtonComponent, _super);\r\n    function DxButtonComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'click', emit: 'onClick' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'iconChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'templateChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'useSubmitBehaviorChange' },\r\n            { emit: 'validationGroupChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxButtonComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"icon\", {\r\n        get: /**\r\n             * Specifies the icon to be displayed on the button.\r\n             */\r\n        function () {\r\n            return this._getOption('icon');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('icon', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the button is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"template\", {\r\n        get: /**\r\n             * Specifies a custom template for the Button widget.\r\n             */\r\n        function () {\r\n            return this._getOption('template');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('template', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The text displayed on the button.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"type\", {\r\n        get: /**\r\n             * Specifies the button type.\r\n             */\r\n        function () {\r\n            return this._getOption('type');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('type', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"useSubmitBehavior\", {\r\n        get: /**\r\n             * Specifies whether or not the button must submit an HTML form.\r\n             */\r\n        function () {\r\n            return this._getOption('useSubmitBehavior');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('useSubmitBehavior', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"validationGroup\", {\r\n        get: /**\r\n             * Specifies the name of the validation group to be accessed in the click event handler.\r\n             */\r\n        function () {\r\n            return this._getOption('validationGroup');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationGroup', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxButtonComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxButtonComponent.prototype._createInstance = function (element, options) {\r\n        return new button_1.default(element, options);\r\n    };\r\n    DxButtonComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxButtonComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-button',\r\n                    template: '<ng-content></ng-content>',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxButtonComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxButtonComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"icon\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"template\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"type\": [{ type: core_1.Input },],\r\n        \"useSubmitBehavior\": [{ type: core_1.Input },],\r\n        \"validationGroup\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onClick\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"iconChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"templateChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"typeChange\": [{ type: core_1.Output },],\r\n        \"useSubmitBehaviorChange\": [{ type: core_1.Output },],\r\n        \"validationGroupChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n    };\r\n    return DxButtonComponent;\r\n}(component_1.DxComponent));\r\nexports.DxButtonComponent = DxButtonComponent;\r\nvar DxButtonModule = (function () {\r\n    function DxButtonModule() {\r\n    }\r\n    DxButtonModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxButtonComponent\r\n                    ],\r\n                    exports: [\r\n                        DxButtonComponent,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxButtonModule;\r\n}());\r\nexports.DxButtonModule = DxButtonModule;\r\n//# sourceMappingURL=button.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar check_box_1 = require(\"devextreme/ui/check_box\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxCheckBoxComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The CheckBox is a small box, which when selected by the end user, shows that a particular feature has been enabled or a specific option has been chosen.\r\n */\r\nvar DxCheckBoxComponent = (function (_super) {\r\n    __extends(DxCheckBoxComponent, _super);\r\n    function DxCheckBoxComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"text\", {\r\n        get: /**\r\n             * Specifies the text displayed by the check box.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"value\", {\r\n        get: /**\r\n             * Specifies the widget state.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxCheckBoxComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxCheckBoxComponent.prototype.change = function (_) { };\r\n    DxCheckBoxComponent.prototype._createInstance = function (element, options) {\r\n        return new check_box_1.default(element, options);\r\n    };\r\n    DxCheckBoxComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxCheckBoxComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxCheckBoxComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxCheckBoxComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxCheckBoxComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxCheckBoxComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxCheckBoxComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxCheckBoxComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxCheckBoxComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-check-box',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxCheckBoxComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxCheckBoxComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n    };\r\n    return DxCheckBoxComponent;\r\n}(component_1.DxComponent));\r\nexports.DxCheckBoxComponent = DxCheckBoxComponent;\r\nvar DxCheckBoxModule = (function () {\r\n    function DxCheckBoxModule() {\r\n    }\r\n    DxCheckBoxModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxCheckBoxComponent\r\n                    ],\r\n                    exports: [\r\n                        DxCheckBoxComponent,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxCheckBoxModule;\r\n}());\r\nexports.DxCheckBoxModule = DxCheckBoxModule;\r\n//# sourceMappingURL=check-box.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\n\r\nvar context_menu_1 = require(\"devextreme/ui/context_menu\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar animation_1 = require(\"./nested/animation\");\r\nvar hide_1 = require(\"./nested/hide\");\r\nvar show_1 = require(\"./nested/show\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar position_1 = require(\"./nested/position\");\r\nvar at_1 = require(\"./nested/at\");\r\nvar boundary_offset_1 = require(\"./nested/boundary-offset\");\r\nvar collision_1 = require(\"./nested/collision\");\r\nvar my_1 = require(\"./nested/my\");\r\nvar offset_1 = require(\"./nested/offset\");\r\nvar show_event_1 = require(\"./nested/show-event\");\r\nvar show_submenu_mode_1 = require(\"./nested/show-submenu-mode\");\r\nvar delay_1 = require(\"./nested/delay\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\n/**\r\n * The ContextMenu widget displays a single- or multi-level context menu. An end user invokes this menu by a right click or a long press.\r\n */\r\nvar DxContextMenuComponent = (function (_super) {\r\n    __extends(DxContextMenuComponent, _super);\r\n    function DxContextMenuComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'hidden', emit: 'onHidden' },\r\n            { subscribe: 'hiding', emit: 'onHiding' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemContextMenu', emit: 'onItemContextMenu' },\r\n            { subscribe: 'itemRendered', emit: 'onItemRendered' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'positioning', emit: 'onPositioning' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'showing', emit: 'onShowing' },\r\n            { subscribe: 'shown', emit: 'onShown' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'cssClassChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'disabledExprChange' },\r\n            { emit: 'displayExprChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemsExprChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'selectByClickChange' },\r\n            { emit: 'selectedExprChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'selectionModeChange' },\r\n            { emit: 'showEventChange' },\r\n            { emit: 'showSubmenuModeChange' },\r\n            { emit: 'submenuDirectionChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'targetChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"animation\", {\r\n        get: /**\r\n             * Configures widget visibility animations. This object contains two fields: show and hide.\r\n             */\r\n        function () {\r\n            return this._getOption('animation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"closeOnOutsideClick\", {\r\n        get: /**\r\n             * Specifies whether to close the ContextMenu if a user clicks outside it.\r\n             */\r\n        function () {\r\n            return this._getOption('closeOnOutsideClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('closeOnOutsideClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"cssClass\", {\r\n        get: /**\r\n             * Specifies the name of the CSS class to be applied to the root menu level and all submenus.\r\n             */\r\n        function () {\r\n            return this._getOption('cssClass');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cssClass', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data to be displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"disabledExpr\", {\r\n        get: /**\r\n             * Specifies the name of the data source item field whose value defines whether or not the corresponding widget item is disabled.\r\n             */\r\n        function () {\r\n            return this._getOption('disabledExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabledExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"displayExpr\", {\r\n        get: /**\r\n             * Specifies the name of the data source item field whose value is displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"items\", {\r\n        get: /**\r\n             * Holds an array of menu items.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"itemsExpr\", {\r\n        get: /**\r\n             * Specifies which data field contains nested items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemsExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemsExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"position\", {\r\n        get: /**\r\n             * An object defining widget positioning options.\r\n             */\r\n        function () {\r\n            return this._getOption('position');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('position', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"selectByClick\", {\r\n        get: /**\r\n             * Specifies whether or not an item becomes selected if a user clicks it.\r\n             */\r\n        function () {\r\n            return this._getOption('selectByClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectByClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"selectedExpr\", {\r\n        get: /**\r\n             * Specifies the name of the data source item field whose value defines whether or not the corresponding widget items is selected.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * The selected item object.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"selectionMode\", {\r\n        get: /**\r\n             * Specifies the selection mode supported by the menu.\r\n             */\r\n        function () {\r\n            return this._getOption('selectionMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectionMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"showEvent\", {\r\n        get: /**\r\n             * Specifies options for displaying the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('showEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"showSubmenuMode\", {\r\n        get: /**\r\n             * Specifies options of submenu showing and hiding.\r\n             */\r\n        function () {\r\n            return this._getOption('showSubmenuMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showSubmenuMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"submenuDirection\", {\r\n        get: /**\r\n             * Specifies the direction at which submenus are displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('submenuDirection');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('submenuDirection', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"target\", {\r\n        get: /**\r\n             * The target element associated with the context menu.\r\n             */\r\n        function () {\r\n            return this._getOption('target');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('target', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxContextMenuComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxContextMenuComponent.prototype._createInstance = function (element, options) {\r\n        return new context_menu_1.default(element, options);\r\n    };\r\n    DxContextMenuComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxContextMenuComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n    };\r\n    DxContextMenuComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxContextMenuComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxContextMenuComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxContextMenuComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-context-menu',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxContextMenuComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxContextMenuComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"animation\": [{ type: core_1.Input },],\r\n        \"closeOnOutsideClick\": [{ type: core_1.Input },],\r\n        \"cssClass\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"disabledExpr\": [{ type: core_1.Input },],\r\n        \"displayExpr\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemsExpr\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"position\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"selectByClick\": [{ type: core_1.Input },],\r\n        \"selectedExpr\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"selectionMode\": [{ type: core_1.Input },],\r\n        \"showEvent\": [{ type: core_1.Input },],\r\n        \"showSubmenuMode\": [{ type: core_1.Input },],\r\n        \"submenuDirection\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"target\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onHidden\": [{ type: core_1.Output },],\r\n        \"onHiding\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onItemContextMenu\": [{ type: core_1.Output },],\r\n        \"onItemRendered\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPositioning\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onShowing\": [{ type: core_1.Output },],\r\n        \"onShown\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"animationChange\": [{ type: core_1.Output },],\r\n        \"closeOnOutsideClickChange\": [{ type: core_1.Output },],\r\n        \"cssClassChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"disabledExprChange\": [{ type: core_1.Output },],\r\n        \"displayExprChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemsExprChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"positionChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"selectByClickChange\": [{ type: core_1.Output },],\r\n        \"selectedExprChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"selectionModeChange\": [{ type: core_1.Output },],\r\n        \"showEventChange\": [{ type: core_1.Output },],\r\n        \"showSubmenuModeChange\": [{ type: core_1.Output },],\r\n        \"submenuDirectionChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"targetChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxContextMenuComponent;\r\n}(component_1.DxComponent));\r\nexports.DxContextMenuComponent = DxContextMenuComponent;\r\nvar DxContextMenuModule = (function () {\r\n    function DxContextMenuModule() {\r\n    }\r\n    DxContextMenuModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        show_event_1.DxoShowEventModule,\r\n                        show_submenu_mode_1.DxoShowSubmenuModeModule,\r\n                        delay_1.DxoDelayModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxContextMenuComponent\r\n                    ],\r\n                    exports: [\r\n                        DxContextMenuComponent,\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        show_event_1.DxoShowEventModule,\r\n                        show_submenu_mode_1.DxoShowSubmenuModeModule,\r\n                        delay_1.DxoDelayModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxContextMenuModule;\r\n}());\r\nexports.DxContextMenuModule = DxContextMenuModule;\r\n//# sourceMappingURL=context-menu.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\n\r\nvar date_box_1 = require(\"devextreme/ui/date_box\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar calendar_options_1 = require(\"./nested/calendar-options\");\r\nvar display_format_1 = require(\"./nested/display-format\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxDateBoxComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The DateBox is a widget that displays date and time in a specified format, and enables a user to pick or type in the required date/time value.\r\n */\r\nvar DxDateBoxComponent = (function (_super) {\r\n    __extends(DxDateBoxComponent, _super);\r\n    function DxDateBoxComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyPress', emit: 'onKeyPress' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'acceptCustomValueChange' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'adaptivityEnabledChange' },\r\n            { emit: 'applyButtonTextChange' },\r\n            { emit: 'applyValueModeChange' },\r\n            { emit: 'calendarOptionsChange' },\r\n            { emit: 'cancelButtonTextChange' },\r\n            { emit: 'dateOutOfRangeMessageChange' },\r\n            { emit: 'dateSerializationFormatChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'disabledDatesChange' },\r\n            { emit: 'displayFormatChange' },\r\n            { emit: 'dropDownButtonTemplateChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'intervalChange' },\r\n            { emit: 'invalidDateMessageChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maxChange' },\r\n            { emit: 'maxLengthChange' },\r\n            { emit: 'maxZoomLevelChange' },\r\n            { emit: 'minChange' },\r\n            { emit: 'minZoomLevelChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'openOnFieldClickChange' },\r\n            { emit: 'pickerTypeChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showAnalogClockChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDropDownButtonChange' },\r\n            { emit: 'spellcheckChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'useMaskBehaviorChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"acceptCustomValue\", {\r\n        get: /**\r\n             * Specifies whether or not the widget allows an end-user to enter a custom value.\r\n             */\r\n        function () {\r\n            return this._getOption('acceptCustomValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('acceptCustomValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"adaptivityEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not adaptive widget rendering is enabled on a small screen.\r\n             */\r\n        function () {\r\n            return this._getOption('adaptivityEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('adaptivityEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"applyButtonText\", {\r\n        get: /**\r\n             * The text displayed on the Apply button.\r\n             */\r\n        function () {\r\n            return this._getOption('applyButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"applyValueMode\", {\r\n        get: /**\r\n             * Specifies the way an end-user applies the selected value.\r\n             */\r\n        function () {\r\n            return this._getOption('applyValueMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyValueMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"calendarOptions\", {\r\n        get: /**\r\n             * Configures the calendar's value picker. Applies only if the pickerType is \"calendar\".\r\n             */\r\n        function () {\r\n            return this._getOption('calendarOptions');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('calendarOptions', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"cancelButtonText\", {\r\n        get: /**\r\n             * The text displayed on the Cancel button.\r\n             */\r\n        function () {\r\n            return this._getOption('cancelButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cancelButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"dateOutOfRangeMessage\", {\r\n        get: /**\r\n             * Specifies the message displayed if the specified date is later than the max value or earlier than the min value.\r\n             */\r\n        function () {\r\n            return this._getOption('dateOutOfRangeMessage');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dateOutOfRangeMessage', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"dateSerializationFormat\", {\r\n        get: /**\r\n             * Specifies the date-time value serialization format. Use it only if you do not specify the value at design time.\r\n             */\r\n        function () {\r\n            return this._getOption('dateSerializationFormat');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dateSerializationFormat', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the drop-down field's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"disabledDates\", {\r\n        get: /**\r\n             * Specifies dates to be disabled. Applies only if pickerType is \"calendar\".\r\n             */\r\n        function () {\r\n            return this._getOption('disabledDates');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabledDates', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"displayFormat\", {\r\n        get: /**\r\n             * Specifies the date display format. Ignored if the pickerType option is \"native\"\r\n             */\r\n        function () {\r\n            return this._getOption('displayFormat');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayFormat', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"dropDownButtonTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the drop-down button.\r\n             */\r\n        function () {\r\n            return this._getOption('dropDownButtonTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dropDownButtonTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"inputAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be passed on to the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"interval\", {\r\n        get: /**\r\n             * Specifies the interval between neighboring values in the popup list in minutes.\r\n             */\r\n        function () {\r\n            return this._getOption('interval');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('interval', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"invalidDateMessage\", {\r\n        get: /**\r\n             * Specifies the message displayed if the typed value is not a valid date or time.\r\n             */\r\n        function () {\r\n            return this._getOption('invalidDateMessage');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('invalidDateMessage', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"max\", {\r\n        get: /**\r\n             * The last date that can be selected within the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('max');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('max', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"maxLength\", {\r\n        get: /**\r\n             * Specifies the maximum number of characters you can enter into the textbox.\r\n             */\r\n        function () {\r\n            return this._getOption('maxLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"maxZoomLevel\", {\r\n        get: /**\r\n             * Use the calendarOptions option instead.\r\n             */\r\n        function () {\r\n            return this._getOption('maxZoomLevel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxZoomLevel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"min\", {\r\n        get: /**\r\n             * The minimum date that can be selected within the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('min');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('min', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"minZoomLevel\", {\r\n        get: /**\r\n             * Use the calendarOptions option instead.\r\n             */\r\n        function () {\r\n            return this._getOption('minZoomLevel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minZoomLevel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"opened\", {\r\n        get: /**\r\n             * Specifies whether or not the drop-down editor is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('opened');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('opened', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"openOnFieldClick\", {\r\n        get: /**\r\n             * Specifies whether a user can open the drop-down list by clicking a text field.\r\n             */\r\n        function () {\r\n            return this._getOption('openOnFieldClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('openOnFieldClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"pickerType\", {\r\n        get: /**\r\n             * Specifies the type of the date/time picker.\r\n             */\r\n        function () {\r\n            return this._getOption('pickerType');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pickerType', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"placeholder\", {\r\n        get: /**\r\n             * Specifies a placeholder for the input field.\r\n             */\r\n        function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"showAnalogClock\", {\r\n        get: /**\r\n             * Specifies whether to show the analog clock in the value picker. Applies only if type is \"datetime\" and pickerType is \"calendar\".\r\n             */\r\n        function () {\r\n            return this._getOption('showAnalogClock');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showAnalogClock', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"showClearButton\", {\r\n        get: /**\r\n             * Specifies whether to display the Clear button in the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('showClearButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showClearButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"showDropDownButton\", {\r\n        get: /**\r\n             * Specifies whether the drop-down button is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('showDropDownButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDropDownButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"spellcheck\", {\r\n        get: /**\r\n             * Specifies whether or not the widget checks the inner text for spelling mistakes.\r\n             */\r\n        function () {\r\n            return this._getOption('spellcheck');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('spellcheck', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the widget's text field is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The read-only option that holds the text displayed by the widget input element.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"type\", {\r\n        get: /**\r\n             * A format used to display date/time information.\r\n             */\r\n        function () {\r\n            return this._getOption('type');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('type', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"useMaskBehavior\", {\r\n        get: /**\r\n             * Specifies whether to control user input using a mask created based on the displayFormat.\r\n             */\r\n        function () {\r\n            return this._getOption('useMaskBehavior');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('useMaskBehavior', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"value\", {\r\n        get: /**\r\n             * An object or a value specifying the date and time currently selected using the date box.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"valueChangeEvent\", {\r\n        get: /**\r\n             * Specifies the DOM events after which the widget's value should be updated.\r\n             */\r\n        function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxDateBoxComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxDateBoxComponent.prototype.change = function (_) { };\r\n    DxDateBoxComponent.prototype._createInstance = function (element, options) {\r\n        return new date_box_1.default(element, options);\r\n    };\r\n    DxDateBoxComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxDateBoxComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxDateBoxComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxDateBoxComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxDateBoxComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxDateBoxComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxDateBoxComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('disabledDates', changes);\r\n    };\r\n    DxDateBoxComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxDateBoxComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('disabledDates');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxDateBoxComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxDateBoxComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxDateBoxComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxDateBoxComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-date-box',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxDateBoxComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxDateBoxComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"acceptCustomValue\": [{ type: core_1.Input },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"adaptivityEnabled\": [{ type: core_1.Input },],\r\n        \"applyButtonText\": [{ type: core_1.Input },],\r\n        \"applyValueMode\": [{ type: core_1.Input },],\r\n        \"calendarOptions\": [{ type: core_1.Input },],\r\n        \"cancelButtonText\": [{ type: core_1.Input },],\r\n        \"dateOutOfRangeMessage\": [{ type: core_1.Input },],\r\n        \"dateSerializationFormat\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"disabledDates\": [{ type: core_1.Input },],\r\n        \"displayFormat\": [{ type: core_1.Input },],\r\n        \"dropDownButtonTemplate\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"inputAttr\": [{ type: core_1.Input },],\r\n        \"interval\": [{ type: core_1.Input },],\r\n        \"invalidDateMessage\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"max\": [{ type: core_1.Input },],\r\n        \"maxLength\": [{ type: core_1.Input },],\r\n        \"maxZoomLevel\": [{ type: core_1.Input },],\r\n        \"min\": [{ type: core_1.Input },],\r\n        \"minZoomLevel\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"opened\": [{ type: core_1.Input },],\r\n        \"openOnFieldClick\": [{ type: core_1.Input },],\r\n        \"pickerType\": [{ type: core_1.Input },],\r\n        \"placeholder\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"showAnalogClock\": [{ type: core_1.Input },],\r\n        \"showClearButton\": [{ type: core_1.Input },],\r\n        \"showDropDownButton\": [{ type: core_1.Input },],\r\n        \"spellcheck\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"type\": [{ type: core_1.Input },],\r\n        \"useMaskBehavior\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"valueChangeEvent\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onChange\": [{ type: core_1.Output },],\r\n        \"onClosed\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onCopy\": [{ type: core_1.Output },],\r\n        \"onCut\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onEnterKey\": [{ type: core_1.Output },],\r\n        \"onFocusIn\": [{ type: core_1.Output },],\r\n        \"onFocusOut\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onInput\": [{ type: core_1.Output },],\r\n        \"onKeyDown\": [{ type: core_1.Output },],\r\n        \"onKeyPress\": [{ type: core_1.Output },],\r\n        \"onKeyUp\": [{ type: core_1.Output },],\r\n        \"onOpened\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPaste\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"acceptCustomValueChange\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"adaptivityEnabledChange\": [{ type: core_1.Output },],\r\n        \"applyButtonTextChange\": [{ type: core_1.Output },],\r\n        \"applyValueModeChange\": [{ type: core_1.Output },],\r\n        \"calendarOptionsChange\": [{ type: core_1.Output },],\r\n        \"cancelButtonTextChange\": [{ type: core_1.Output },],\r\n        \"dateOutOfRangeMessageChange\": [{ type: core_1.Output },],\r\n        \"dateSerializationFormatChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"disabledDatesChange\": [{ type: core_1.Output },],\r\n        \"displayFormatChange\": [{ type: core_1.Output },],\r\n        \"dropDownButtonTemplateChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"inputAttrChange\": [{ type: core_1.Output },],\r\n        \"intervalChange\": [{ type: core_1.Output },],\r\n        \"invalidDateMessageChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"maxChange\": [{ type: core_1.Output },],\r\n        \"maxLengthChange\": [{ type: core_1.Output },],\r\n        \"maxZoomLevelChange\": [{ type: core_1.Output },],\r\n        \"minChange\": [{ type: core_1.Output },],\r\n        \"minZoomLevelChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"openedChange\": [{ type: core_1.Output },],\r\n        \"openOnFieldClickChange\": [{ type: core_1.Output },],\r\n        \"pickerTypeChange\": [{ type: core_1.Output },],\r\n        \"placeholderChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"showAnalogClockChange\": [{ type: core_1.Output },],\r\n        \"showClearButtonChange\": [{ type: core_1.Output },],\r\n        \"showDropDownButtonChange\": [{ type: core_1.Output },],\r\n        \"spellcheckChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"typeChange\": [{ type: core_1.Output },],\r\n        \"useMaskBehaviorChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"valueChangeEventChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n    };\r\n    return DxDateBoxComponent;\r\n}(component_1.DxComponent));\r\nexports.DxDateBoxComponent = DxDateBoxComponent;\r\nvar DxDateBoxModule = (function () {\r\n    function DxDateBoxModule() {\r\n    }\r\n    DxDateBoxModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        calendar_options_1.DxoCalendarOptionsModule,\r\n                        display_format_1.DxoDisplayFormatModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxDateBoxComponent\r\n                    ],\r\n                    exports: [\r\n                        DxDateBoxComponent,\r\n                        calendar_options_1.DxoCalendarOptionsModule,\r\n                        display_format_1.DxoDisplayFormatModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxDateBoxModule;\r\n}());\r\nexports.DxDateBoxModule = DxDateBoxModule;\r\n//# sourceMappingURL=date-box.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar form_1 = require(\"devextreme/ui/form\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar col_count_by_screen_1 = require(\"./nested/col-count-by-screen\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar label_1 = require(\"./nested/label\");\r\nvar validation_rule_dxi_1 = require(\"./nested/validation-rule-dxi\");\r\nvar tab_panel_options_1 = require(\"./nested/tab-panel-options\");\r\nvar tab_dxi_1 = require(\"./nested/tab-dxi\");\r\nvar button_options_1 = require(\"./nested/button-options\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\n/**\r\n * The Form widget represents fields of a data object as a collection of label-editor pairs. These pairs can be arranged in several groups, tabs and columns.\r\n */\r\nvar DxFormComponent = (function (_super) {\r\n    __extends(DxFormComponent, _super);\r\n    function DxFormComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'editorEnterKey', emit: 'onEditorEnterKey' },\r\n            { subscribe: 'fieldDataChanged', emit: 'onFieldDataChanged' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'alignItemLabelsChange' },\r\n            { emit: 'alignItemLabelsInAllGroupsChange' },\r\n            { emit: 'colCountChange' },\r\n            { emit: 'colCountByScreenChange' },\r\n            { emit: 'customizeItemChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'formDataChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'labelLocationChange' },\r\n            { emit: 'minColWidthChange' },\r\n            { emit: 'optionalMarkChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'requiredMarkChange' },\r\n            { emit: 'requiredMessageChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'screenByWidthChange' },\r\n            { emit: 'scrollingEnabledChange' },\r\n            { emit: 'showColonAfterLabelChange' },\r\n            { emit: 'showOptionalMarkChange' },\r\n            { emit: 'showRequiredMarkChange' },\r\n            { emit: 'showValidationSummaryChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'validationGroupChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxFormComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"alignItemLabels\", {\r\n        get: /**\r\n             * Specifies whether or not all root item labels are aligned.\r\n             */\r\n        function () {\r\n            return this._getOption('alignItemLabels');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('alignItemLabels', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"alignItemLabelsInAllGroups\", {\r\n        get: /**\r\n             * Specifies whether or not item labels in all groups are aligned.\r\n             */\r\n        function () {\r\n            return this._getOption('alignItemLabelsInAllGroups');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('alignItemLabelsInAllGroups', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"colCount\", {\r\n        get: /**\r\n             * The count of columns in the form layout.\r\n             */\r\n        function () {\r\n            return this._getOption('colCount');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('colCount', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"colCountByScreen\", {\r\n        get: /**\r\n             * Specifies dependency between the screen factor and the count of columns in the form layout.\r\n             */\r\n        function () {\r\n            return this._getOption('colCountByScreen');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('colCountByScreen', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"customizeItem\", {\r\n        get: /**\r\n             * Specifies a function that customizes a form item after it has been created.\r\n             */\r\n        function () {\r\n            return this._getOption('customizeItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('customizeItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"formData\", {\r\n        get: /**\r\n             * Provides the Form's data. Gets updated every time form fields change.\r\n             */\r\n        function () {\r\n            return this._getOption('formData');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('formData', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"items\", {\r\n        get: /**\r\n             * Holds an array of form items.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"labelLocation\", {\r\n        get: /**\r\n             * Specifies the location of a label against the editor.\r\n             */\r\n        function () {\r\n            return this._getOption('labelLocation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('labelLocation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"minColWidth\", {\r\n        get: /**\r\n             * The minimum column width used for calculating column count in the form layout.\r\n             */\r\n        function () {\r\n            return this._getOption('minColWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minColWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"optionalMark\", {\r\n        get: /**\r\n             * The text displayed for optional fields.\r\n             */\r\n        function () {\r\n            return this._getOption('optionalMark');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('optionalMark', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * Specifies whether all editors on the form are read-only. Applies only to non-templated items.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"requiredMark\", {\r\n        get: /**\r\n             * The text displayed for required fields.\r\n             */\r\n        function () {\r\n            return this._getOption('requiredMark');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('requiredMark', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"requiredMessage\", {\r\n        get: /**\r\n             * Specifies the message that is shown for end-users if a required field value is not specified.\r\n             */\r\n        function () {\r\n            return this._getOption('requiredMessage');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('requiredMessage', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"screenByWidth\", {\r\n        get: /**\r\n             * Specifies the function returning the screen factor depending on the screen width.\r\n             */\r\n        function () {\r\n            return this._getOption('screenByWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('screenByWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"scrollingEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether to enable or disable form scrolling.\r\n             */\r\n        function () {\r\n            return this._getOption('scrollingEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollingEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"showColonAfterLabel\", {\r\n        get: /**\r\n             * Specifies whether or not a colon is displayed at the end of form labels.\r\n             */\r\n        function () {\r\n            return this._getOption('showColonAfterLabel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showColonAfterLabel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"showOptionalMark\", {\r\n        get: /**\r\n             * Specifies whether or not the optional mark is displayed for optional fields.\r\n             */\r\n        function () {\r\n            return this._getOption('showOptionalMark');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showOptionalMark', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"showRequiredMark\", {\r\n        get: /**\r\n             * Specifies whether or not the required mark is displayed for required fields.\r\n             */\r\n        function () {\r\n            return this._getOption('showRequiredMark');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showRequiredMark', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"showValidationSummary\", {\r\n        get: /**\r\n             * Specifies whether or not the total validation summary is displayed on the form.\r\n             */\r\n        function () {\r\n            return this._getOption('showValidationSummary');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showValidationSummary', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"validationGroup\", {\r\n        get: /**\r\n             * Gives a name to the internal validation group.\r\n             */\r\n        function () {\r\n            return this._getOption('validationGroup');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationGroup', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxFormComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxFormComponent.prototype._createInstance = function (element, options) {\r\n        return new form_1.default(element, options);\r\n    };\r\n    DxFormComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxFormComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('items', changes);\r\n    };\r\n    DxFormComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxFormComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxFormComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxFormComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-form',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxFormComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxFormComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"alignItemLabels\": [{ type: core_1.Input },],\r\n        \"alignItemLabelsInAllGroups\": [{ type: core_1.Input },],\r\n        \"colCount\": [{ type: core_1.Input },],\r\n        \"colCountByScreen\": [{ type: core_1.Input },],\r\n        \"customizeItem\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"formData\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"labelLocation\": [{ type: core_1.Input },],\r\n        \"minColWidth\": [{ type: core_1.Input },],\r\n        \"optionalMark\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"requiredMark\": [{ type: core_1.Input },],\r\n        \"requiredMessage\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"screenByWidth\": [{ type: core_1.Input },],\r\n        \"scrollingEnabled\": [{ type: core_1.Input },],\r\n        \"showColonAfterLabel\": [{ type: core_1.Input },],\r\n        \"showOptionalMark\": [{ type: core_1.Input },],\r\n        \"showRequiredMark\": [{ type: core_1.Input },],\r\n        \"showValidationSummary\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"validationGroup\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onEditorEnterKey\": [{ type: core_1.Output },],\r\n        \"onFieldDataChanged\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"alignItemLabelsChange\": [{ type: core_1.Output },],\r\n        \"alignItemLabelsInAllGroupsChange\": [{ type: core_1.Output },],\r\n        \"colCountChange\": [{ type: core_1.Output },],\r\n        \"colCountByScreenChange\": [{ type: core_1.Output },],\r\n        \"customizeItemChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"formDataChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"labelLocationChange\": [{ type: core_1.Output },],\r\n        \"minColWidthChange\": [{ type: core_1.Output },],\r\n        \"optionalMarkChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"requiredMarkChange\": [{ type: core_1.Output },],\r\n        \"requiredMessageChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"screenByWidthChange\": [{ type: core_1.Output },],\r\n        \"scrollingEnabledChange\": [{ type: core_1.Output },],\r\n        \"showColonAfterLabelChange\": [{ type: core_1.Output },],\r\n        \"showOptionalMarkChange\": [{ type: core_1.Output },],\r\n        \"showRequiredMarkChange\": [{ type: core_1.Output },],\r\n        \"showValidationSummaryChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"validationGroupChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxFormComponent;\r\n}(component_1.DxComponent));\r\nexports.DxFormComponent = DxFormComponent;\r\nvar DxFormModule = (function () {\r\n    function DxFormModule() {\r\n    }\r\n    DxFormModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        col_count_by_screen_1.DxoColCountByScreenModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        label_1.DxoLabelModule,\r\n                        validation_rule_dxi_1.DxiValidationRuleModule,\r\n                        tab_panel_options_1.DxoTabPanelOptionsModule,\r\n                        tab_dxi_1.DxiTabModule,\r\n                        button_options_1.DxoButtonOptionsModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxFormComponent\r\n                    ],\r\n                    exports: [\r\n                        DxFormComponent,\r\n                        col_count_by_screen_1.DxoColCountByScreenModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        label_1.DxoLabelModule,\r\n                        validation_rule_dxi_1.DxiValidationRuleModule,\r\n                        tab_panel_options_1.DxoTabPanelOptionsModule,\r\n                        tab_dxi_1.DxiTabModule,\r\n                        button_options_1.DxoButtonOptionsModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxFormModule;\r\n}());\r\nexports.DxFormModule = DxFormModule;\r\n//# sourceMappingURL=form.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\n\r\nvar lookup_1 = require(\"devextreme/ui/lookup\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar animation_1 = require(\"./nested/animation\");\r\nvar hide_1 = require(\"./nested/hide\");\r\nvar show_1 = require(\"./nested/show\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar position_1 = require(\"./nested/position\");\r\nvar at_1 = require(\"./nested/at\");\r\nvar boundary_offset_1 = require(\"./nested/boundary-offset\");\r\nvar collision_1 = require(\"./nested/collision\");\r\nvar my_1 = require(\"./nested/my\");\r\nvar offset_1 = require(\"./nested/offset\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxLookupComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The Lookup is a widget that allows an end user to search for an item in a collection shown in a drop-down menu.\r\n */\r\nvar DxLookupComponent = (function (_super) {\r\n    __extends(DxLookupComponent, _super);\r\n    function DxLookupComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pageLoading', emit: 'onPageLoading' },\r\n            { subscribe: 'pullRefresh', emit: 'onPullRefresh' },\r\n            { subscribe: 'scroll', emit: 'onScroll' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'titleRendered', emit: 'onTitleRendered' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'applyButtonTextChange' },\r\n            { emit: 'applyValueModeChange' },\r\n            { emit: 'cancelButtonTextChange' },\r\n            { emit: 'cleanSearchOnOpeningChange' },\r\n            { emit: 'clearButtonTextChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'displayExprChange' },\r\n            { emit: 'displayValueChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fieldTemplateChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'groupedChange' },\r\n            { emit: 'groupTemplateChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'minSearchLengthChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'nextButtonTextChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'pageLoadingTextChange' },\r\n            { emit: 'pageLoadModeChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'popupHeightChange' },\r\n            { emit: 'popupWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'pulledDownTextChange' },\r\n            { emit: 'pullingDownTextChange' },\r\n            { emit: 'pullRefreshEnabledChange' },\r\n            { emit: 'refreshingTextChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'searchEnabledChange' },\r\n            { emit: 'searchExprChange' },\r\n            { emit: 'searchModeChange' },\r\n            { emit: 'searchPlaceholderChange' },\r\n            { emit: 'searchTimeoutChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'showCancelButtonChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDataBeforeSearchChange' },\r\n            { emit: 'showPopupTitleChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'titleTemplateChange' },\r\n            { emit: 'useNativeScrollingChange' },\r\n            { emit: 'usePopoverChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'valueExprChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxLookupComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"animation\", {\r\n        get: /**\r\n             * Configures widget visibility animations. This object contains two fields: show and hide.\r\n             */\r\n        function () {\r\n            return this._getOption('animation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"applyButtonText\", {\r\n        get: /**\r\n             * The text displayed on the Apply button.\r\n             */\r\n        function () {\r\n            return this._getOption('applyButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"applyValueMode\", {\r\n        get: /**\r\n             * Specifies the way an end-user applies the selected value.\r\n             */\r\n        function () {\r\n            return this._getOption('applyValueMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyValueMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"cancelButtonText\", {\r\n        get: /**\r\n             * The text displayed on the Cancel button.\r\n             */\r\n        function () {\r\n            return this._getOption('cancelButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cancelButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"cleanSearchOnOpening\", {\r\n        get: /**\r\n             * Specifies whether or not the widget cleans the search box when the popup window is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('cleanSearchOnOpening');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cleanSearchOnOpening', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"clearButtonText\", {\r\n        get: /**\r\n             * The text displayed on the Clear button.\r\n             */\r\n        function () {\r\n            return this._getOption('clearButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('clearButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"closeOnOutsideClick\", {\r\n        get: /**\r\n             * Specifies whether to close the drop-down menu if a user clicks outside it.\r\n             */\r\n        function () {\r\n            return this._getOption('closeOnOutsideClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('closeOnOutsideClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data the widget should display.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the drop-down field's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"displayExpr\", {\r\n        get: /**\r\n             * Specifies the name of the data source item field whose value is displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"displayValue\", {\r\n        get: /**\r\n             * Returns the value currently displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"fieldTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the input field.\r\n             */\r\n        function () {\r\n            return this._getOption('fieldTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fieldTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"fullScreen\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to display the lookup in full-screen mode.\r\n             */\r\n        function () {\r\n            return this._getOption('fullScreen');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fullScreen', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"grouped\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to group widget items.\r\n             */\r\n        function () {\r\n            return this._getOption('grouped');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('grouped', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"groupTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for group captions.\r\n             */\r\n        function () {\r\n            return this._getOption('groupTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('groupTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"inputAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be passed on to the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"items\", {\r\n        get: /**\r\n             * An array of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"minSearchLength\", {\r\n        get: /**\r\n             * The minimum number of characters that must be entered into the text box to begin a search. Applies only if searchEnabled is true.\r\n             */\r\n        function () {\r\n            return this._getOption('minSearchLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minSearchLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"nextButtonText\", {\r\n        get: /**\r\n             * The text displayed on the button used to load the next page from the data source.\r\n             */\r\n        function () {\r\n            return this._getOption('nextButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('nextButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"noDataText\", {\r\n        get: /**\r\n             * The text or HTML markup displayed by the widget if the item collection is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('noDataText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('noDataText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"opened\", {\r\n        get: /**\r\n             * Specifies whether or not the drop-down editor is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('opened');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('opened', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pageLoadingText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel, which is displayed when the widget is scrolled to the bottom.\r\n             */\r\n        function () {\r\n            return this._getOption('pageLoadingText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pageLoadingText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pageLoadMode\", {\r\n        get: /**\r\n             * Specifies whether the next page is loaded when a user scrolls the widget to the bottom or when the \"next\" button is clicked.\r\n             */\r\n        function () {\r\n            return this._getOption('pageLoadMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pageLoadMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"placeholder\", {\r\n        get: /**\r\n             * The text displayed by the widget when nothing is selected.\r\n             */\r\n        function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"popupHeight\", {\r\n        get: /**\r\n             * Specifies the popup element's height. Applies only if fullScreen is false.\r\n             */\r\n        function () {\r\n            return this._getOption('popupHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('popupHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"popupWidth\", {\r\n        get: /**\r\n             * Specifies the popup element's width. Applies only if fullScreen is false.\r\n             */\r\n        function () {\r\n            return this._getOption('popupWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('popupWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"position\", {\r\n        get: /**\r\n             * An object defining widget positioning options.\r\n             */\r\n        function () {\r\n            return this._getOption('position');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('position', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pulledDownText\", {\r\n        get: /**\r\n             * Specifies the text displayed in the pullDown panel when the widget is pulled below the refresh threshold.\r\n             */\r\n        function () {\r\n            return this._getOption('pulledDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pulledDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pullingDownText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel while the list is being pulled down to the refresh threshold.\r\n             */\r\n        function () {\r\n            return this._getOption('pullingDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pullingDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pullRefreshEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget supports the \"pull down to refresh\" gesture.\r\n             */\r\n        function () {\r\n            return this._getOption('pullRefreshEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pullRefreshEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"refreshingText\", {\r\n        get: /**\r\n             * Specifies the text displayed in the pullDown panel while the widget is being refreshed.\r\n             */\r\n        function () {\r\n            return this._getOption('refreshingText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('refreshingText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchEnabled\", {\r\n        get: /**\r\n             * Specifies whether the search box is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('searchEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchExpr\", {\r\n        get: /**\r\n             * Specifies the name of a data source item field or an expression whose value is compared to the search criterion.\r\n             */\r\n        function () {\r\n            return this._getOption('searchExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchMode\", {\r\n        get: /**\r\n             * Specifies a comparison operation used to search widget items.\r\n             */\r\n        function () {\r\n            return this._getOption('searchMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchPlaceholder\", {\r\n        get: /**\r\n             * The text that is provided as a hint in the lookup's search bar.\r\n             */\r\n        function () {\r\n            return this._getOption('searchPlaceholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchPlaceholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchTimeout\", {\r\n        get: /**\r\n             * Specifies the time delay, in milliseconds, after the last character has been typed in, before a search is executed.\r\n             */\r\n        function () {\r\n            return this._getOption('searchTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * Gets the currently selected item.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"shading\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the main screen is inactive while the lookup is active.\r\n             */\r\n        function () {\r\n            return this._getOption('shading');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('shading', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showCancelButton\", {\r\n        get: /**\r\n             * Specifies whether to display the Cancel button in the lookup window.\r\n             */\r\n        function () {\r\n            return this._getOption('showCancelButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showCancelButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showClearButton\", {\r\n        get: /**\r\n             * Specifies whether or not to display the Clear button in the lookup window.\r\n             */\r\n        function () {\r\n            return this._getOption('showClearButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showClearButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showDataBeforeSearch\", {\r\n        get: /**\r\n             * Specifies whether or not the widget displays unfiltered values until a user types a number of characters exceeding the minSearchLength option value.\r\n             */\r\n        function () {\r\n            return this._getOption('showDataBeforeSearch');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDataBeforeSearch', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showPopupTitle\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to display the title in the popup window.\r\n             */\r\n        function () {\r\n            return this._getOption('showPopupTitle');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showPopupTitle', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the widget's text field is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The read-only option that holds the text displayed by the widget input element.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"title\", {\r\n        get: /**\r\n             * The title of the lookup window.\r\n             */\r\n        function () {\r\n            return this._getOption('title');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('title', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"titleTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the title.\r\n             */\r\n        function () {\r\n            return this._getOption('titleTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('titleTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"useNativeScrolling\", {\r\n        get: /**\r\n             * Specifies whether or not the widget uses native scrolling.\r\n             */\r\n        function () {\r\n            return this._getOption('useNativeScrolling');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('useNativeScrolling', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"usePopover\", {\r\n        get: /**\r\n             * Specifies whether or not to show lookup contents in a Popover widget.\r\n             */\r\n        function () {\r\n            return this._getOption('usePopover');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('usePopover', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"value\", {\r\n        get: /**\r\n             * Specifies the currently selected value. May be an object if dataSource contains objects and valueExpr is not set.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"valueChangeEvent\", {\r\n        get: /**\r\n             * Specifies the DOM events after which the widget's value should be updated.\r\n             */\r\n        function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"valueExpr\", {\r\n        get: /**\r\n             * Specifies which data field provides the widget's value. When this option is not set, the value is the entire data object.\r\n             */\r\n        function () {\r\n            return this._getOption('valueExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxLookupComponent.prototype.change = function (_) { };\r\n    Object.defineProperty(DxLookupComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxLookupComponent.prototype._createInstance = function (element, options) {\r\n        return new lookup_1.default(element, options);\r\n    };\r\n    DxLookupComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxLookupComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxLookupComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxLookupComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxLookupComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxLookupComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxLookupComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('searchExpr', changes);\r\n    };\r\n    DxLookupComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxLookupComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('searchExpr');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxLookupComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxLookupComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxLookupComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxLookupComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-lookup',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxLookupComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxLookupComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"animation\": [{ type: core_1.Input },],\r\n        \"applyButtonText\": [{ type: core_1.Input },],\r\n        \"applyValueMode\": [{ type: core_1.Input },],\r\n        \"cancelButtonText\": [{ type: core_1.Input },],\r\n        \"cleanSearchOnOpening\": [{ type: core_1.Input },],\r\n        \"clearButtonText\": [{ type: core_1.Input },],\r\n        \"closeOnOutsideClick\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"displayExpr\": [{ type: core_1.Input },],\r\n        \"displayValue\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"fieldTemplate\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"fullScreen\": [{ type: core_1.Input },],\r\n        \"grouped\": [{ type: core_1.Input },],\r\n        \"groupTemplate\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"inputAttr\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"minSearchLength\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"nextButtonText\": [{ type: core_1.Input },],\r\n        \"noDataText\": [{ type: core_1.Input },],\r\n        \"opened\": [{ type: core_1.Input },],\r\n        \"pageLoadingText\": [{ type: core_1.Input },],\r\n        \"pageLoadMode\": [{ type: core_1.Input },],\r\n        \"placeholder\": [{ type: core_1.Input },],\r\n        \"popupHeight\": [{ type: core_1.Input },],\r\n        \"popupWidth\": [{ type: core_1.Input },],\r\n        \"position\": [{ type: core_1.Input },],\r\n        \"pulledDownText\": [{ type: core_1.Input },],\r\n        \"pullingDownText\": [{ type: core_1.Input },],\r\n        \"pullRefreshEnabled\": [{ type: core_1.Input },],\r\n        \"refreshingText\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"searchEnabled\": [{ type: core_1.Input },],\r\n        \"searchExpr\": [{ type: core_1.Input },],\r\n        \"searchMode\": [{ type: core_1.Input },],\r\n        \"searchPlaceholder\": [{ type: core_1.Input },],\r\n        \"searchTimeout\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"shading\": [{ type: core_1.Input },],\r\n        \"showCancelButton\": [{ type: core_1.Input },],\r\n        \"showClearButton\": [{ type: core_1.Input },],\r\n        \"showDataBeforeSearch\": [{ type: core_1.Input },],\r\n        \"showPopupTitle\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"title\": [{ type: core_1.Input },],\r\n        \"titleTemplate\": [{ type: core_1.Input },],\r\n        \"useNativeScrolling\": [{ type: core_1.Input },],\r\n        \"usePopover\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"valueChangeEvent\": [{ type: core_1.Input },],\r\n        \"valueExpr\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onClosed\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onOpened\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPageLoading\": [{ type: core_1.Output },],\r\n        \"onPullRefresh\": [{ type: core_1.Output },],\r\n        \"onScroll\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onTitleRendered\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"animationChange\": [{ type: core_1.Output },],\r\n        \"applyButtonTextChange\": [{ type: core_1.Output },],\r\n        \"applyValueModeChange\": [{ type: core_1.Output },],\r\n        \"cancelButtonTextChange\": [{ type: core_1.Output },],\r\n        \"cleanSearchOnOpeningChange\": [{ type: core_1.Output },],\r\n        \"clearButtonTextChange\": [{ type: core_1.Output },],\r\n        \"closeOnOutsideClickChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"displayExprChange\": [{ type: core_1.Output },],\r\n        \"displayValueChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"fieldTemplateChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"fullScreenChange\": [{ type: core_1.Output },],\r\n        \"groupedChange\": [{ type: core_1.Output },],\r\n        \"groupTemplateChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"inputAttrChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"minSearchLengthChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"nextButtonTextChange\": [{ type: core_1.Output },],\r\n        \"noDataTextChange\": [{ type: core_1.Output },],\r\n        \"openedChange\": [{ type: core_1.Output },],\r\n        \"pageLoadingTextChange\": [{ type: core_1.Output },],\r\n        \"pageLoadModeChange\": [{ type: core_1.Output },],\r\n        \"placeholderChange\": [{ type: core_1.Output },],\r\n        \"popupHeightChange\": [{ type: core_1.Output },],\r\n        \"popupWidthChange\": [{ type: core_1.Output },],\r\n        \"positionChange\": [{ type: core_1.Output },],\r\n        \"pulledDownTextChange\": [{ type: core_1.Output },],\r\n        \"pullingDownTextChange\": [{ type: core_1.Output },],\r\n        \"pullRefreshEnabledChange\": [{ type: core_1.Output },],\r\n        \"refreshingTextChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"searchEnabledChange\": [{ type: core_1.Output },],\r\n        \"searchExprChange\": [{ type: core_1.Output },],\r\n        \"searchModeChange\": [{ type: core_1.Output },],\r\n        \"searchPlaceholderChange\": [{ type: core_1.Output },],\r\n        \"searchTimeoutChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"shadingChange\": [{ type: core_1.Output },],\r\n        \"showCancelButtonChange\": [{ type: core_1.Output },],\r\n        \"showClearButtonChange\": [{ type: core_1.Output },],\r\n        \"showDataBeforeSearchChange\": [{ type: core_1.Output },],\r\n        \"showPopupTitleChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"titleChange\": [{ type: core_1.Output },],\r\n        \"titleTemplateChange\": [{ type: core_1.Output },],\r\n        \"useNativeScrollingChange\": [{ type: core_1.Output },],\r\n        \"usePopoverChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"valueChangeEventChange\": [{ type: core_1.Output },],\r\n        \"valueExprChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxLookupComponent;\r\n}(component_1.DxComponent));\r\nexports.DxLookupComponent = DxLookupComponent;\r\nvar DxLookupModule = (function () {\r\n    function DxLookupModule() {\r\n    }\r\n    DxLookupModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxLookupComponent\r\n                    ],\r\n                    exports: [\r\n                        DxLookupComponent,\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        item_dxi_1.DxiItemModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxLookupModule;\r\n}());\r\nexports.DxLookupModule = DxLookupModule;\r\n//# sourceMappingURL=lookup.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar nested_option_2 = require(\"../../core/nested-option\");\r\nvar DxoAdapterComponent = (function (_super) {\r\n    __extends(DxoAdapterComponent, _super);\r\n    function DxoAdapterComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"applyValidationResults\", {\r\n        get: function () {\r\n            return this._getOption('applyValidationResults');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyValidationResults', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"bypass\", {\r\n        get: function () {\r\n            return this._getOption('bypass');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('bypass', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"focus\", {\r\n        get: function () {\r\n            return this._getOption('focus');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focus', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"getValue\", {\r\n        get: function () {\r\n            return this._getOption('getValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('getValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"reset\", {\r\n        get: function () {\r\n            return this._getOption('reset');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('reset', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"validationRequestsCallbacks\", {\r\n        get: function () {\r\n            return this._getOption('validationRequestsCallbacks');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationRequestsCallbacks', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoAdapterComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'adapter';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoAdapterComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-adapter',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoAdapterComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoAdapterComponent.propDecorators = {\r\n        \"applyValidationResults\": [{ type: core_1.Input },],\r\n        \"bypass\": [{ type: core_1.Input },],\r\n        \"focus\": [{ type: core_1.Input },],\r\n        \"getValue\": [{ type: core_1.Input },],\r\n        \"reset\": [{ type: core_1.Input },],\r\n        \"validationRequestsCallbacks\": [{ type: core_1.Input },],\r\n    };\r\n    return DxoAdapterComponent;\r\n}(nested_option_2.NestedOption));\r\nexports.DxoAdapterComponent = DxoAdapterComponent;\r\nvar DxoAdapterModule = (function () {\r\n    function DxoAdapterModule() {\r\n    }\r\n    DxoAdapterModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoAdapterComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoAdapterComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoAdapterModule;\r\n}());\r\nexports.DxoAdapterModule = DxoAdapterModule;\r\n//# sourceMappingURL=adapter.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar nested_option_1 = require(\"../../../core/nested-option\");\r\nvar DxoCalendarOptions = (function (_super) {\r\n    __extends(DxoCalendarOptions, _super);\r\n    function DxoCalendarOptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"accessKey\", {\r\n        get: function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"activeStateEnabled\", {\r\n        get: function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"cellTemplate\", {\r\n        get: function () {\r\n            return this._getOption('cellTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cellTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"dateSerializationFormat\", {\r\n        get: function () {\r\n            return this._getOption('dateSerializationFormat');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dateSerializationFormat', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"disabled\", {\r\n        get: function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"disabledDates\", {\r\n        get: function () {\r\n            return this._getOption('disabledDates');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabledDates', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"elementAttr\", {\r\n        get: function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"firstDayOfWeek\", {\r\n        get: function () {\r\n            return this._getOption('firstDayOfWeek');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('firstDayOfWeek', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"focusStateEnabled\", {\r\n        get: function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"height\", {\r\n        get: function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"hint\", {\r\n        get: function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"hoverStateEnabled\", {\r\n        get: function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"max\", {\r\n        get: function () {\r\n            return this._getOption('max');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('max', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"maxZoomLevel\", {\r\n        get: function () {\r\n            return this._getOption('maxZoomLevel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxZoomLevel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"min\", {\r\n        get: function () {\r\n            return this._getOption('min');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('min', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"minZoomLevel\", {\r\n        get: function () {\r\n            return this._getOption('minZoomLevel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minZoomLevel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"name\", {\r\n        get: function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"onDisposing\", {\r\n        get: function () {\r\n            return this._getOption('onDisposing');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('onDisposing', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"onInitialized\", {\r\n        get: function () {\r\n            return this._getOption('onInitialized');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('onInitialized', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"onOptionChanged\", {\r\n        get: function () {\r\n            return this._getOption('onOptionChanged');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('onOptionChanged', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"onValueChanged\", {\r\n        get: function () {\r\n            return this._getOption('onValueChanged');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('onValueChanged', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"readOnly\", {\r\n        get: function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"rtlEnabled\", {\r\n        get: function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"showTodayButton\", {\r\n        get: function () {\r\n            return this._getOption('showTodayButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showTodayButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"tabIndex\", {\r\n        get: function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"validationError\", {\r\n        get: function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"validationMessageMode\", {\r\n        get: function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"value\", {\r\n        get: function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"visible\", {\r\n        get: function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"width\", {\r\n        get: function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoCalendarOptions.prototype, \"zoomLevel\", {\r\n        get: function () {\r\n            return this._getOption('zoomLevel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('zoomLevel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DxoCalendarOptions;\r\n}(nested_option_1.NestedOption));\r\nexports.DxoCalendarOptions = DxoCalendarOptions;\r\n//# sourceMappingURL=calendar-options.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar calendar_options_1 = require(\"./base/calendar-options\");\r\nvar DxoCalendarOptionsComponent = (function (_super) {\r\n    __extends(DxoCalendarOptionsComponent, _super);\r\n    function DxoCalendarOptionsComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        _this._createEventEmitters([\r\n            { emit: 'valueChange' },\r\n            { emit: 'zoomLevelChange' }\r\n        ]);\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoCalendarOptionsComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'calendarOptions';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoCalendarOptionsComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-calendar-options',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost],\r\n                    inputs: [\r\n                        'accessKey',\r\n                        'activeStateEnabled',\r\n                        'cellTemplate',\r\n                        'dateSerializationFormat',\r\n                        'disabled',\r\n                        'disabledDates',\r\n                        'elementAttr',\r\n                        'firstDayOfWeek',\r\n                        'focusStateEnabled',\r\n                        'height',\r\n                        'hint',\r\n                        'hoverStateEnabled',\r\n                        'isValid',\r\n                        'max',\r\n                        'maxZoomLevel',\r\n                        'min',\r\n                        'minZoomLevel',\r\n                        'name',\r\n                        'onDisposing',\r\n                        'onInitialized',\r\n                        'onOptionChanged',\r\n                        'onValueChanged',\r\n                        'readOnly',\r\n                        'rtlEnabled',\r\n                        'showTodayButton',\r\n                        'tabIndex',\r\n                        'validationError',\r\n                        'validationMessageMode',\r\n                        'value',\r\n                        'visible',\r\n                        'width',\r\n                        'zoomLevel'\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoCalendarOptionsComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoCalendarOptionsComponent.propDecorators = {\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"zoomLevelChange\": [{ type: core_1.Output },],\r\n    };\r\n    return DxoCalendarOptionsComponent;\r\n}(calendar_options_1.DxoCalendarOptions));\r\nexports.DxoCalendarOptionsComponent = DxoCalendarOptionsComponent;\r\nvar DxoCalendarOptionsModule = (function () {\r\n    function DxoCalendarOptionsModule() {\r\n    }\r\n    DxoCalendarOptionsModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoCalendarOptionsComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoCalendarOptionsComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoCalendarOptionsModule;\r\n}());\r\nexports.DxoCalendarOptionsModule = DxoCalendarOptionsModule;\r\n//# sourceMappingURL=calendar-options.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar nested_option_2 = require(\"../../core/nested-option\");\r\nvar DxoDelayComponent = (function (_super) {\r\n    __extends(DxoDelayComponent, _super);\r\n    function DxoDelayComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoDelayComponent.prototype, \"hide\", {\r\n        get: function () {\r\n            return this._getOption('hide');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hide', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoDelayComponent.prototype, \"show\", {\r\n        get: function () {\r\n            return this._getOption('show');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('show', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoDelayComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'delay';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoDelayComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-delay',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoDelayComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoDelayComponent.propDecorators = {\r\n        \"hide\": [{ type: core_1.Input },],\r\n        \"show\": [{ type: core_1.Input },],\r\n    };\r\n    return DxoDelayComponent;\r\n}(nested_option_2.NestedOption));\r\nexports.DxoDelayComponent = DxoDelayComponent;\r\nvar DxoDelayModule = (function () {\r\n    function DxoDelayModule() {\r\n    }\r\n    DxoDelayModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoDelayComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoDelayComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoDelayModule;\r\n}());\r\nexports.DxoDelayModule = DxoDelayModule;\r\n//# sourceMappingURL=delay.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar format_1 = require(\"./base/format\");\r\nvar DxoDisplayFormatComponent = (function (_super) {\r\n    __extends(DxoDisplayFormatComponent, _super);\r\n    function DxoDisplayFormatComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoDisplayFormatComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'displayFormat';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoDisplayFormatComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-display-format',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost],\r\n                    inputs: [\r\n                        'currency',\r\n                        'formatter',\r\n                        'parser',\r\n                        'precision',\r\n                        'type'\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoDisplayFormatComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    return DxoDisplayFormatComponent;\r\n}(format_1.DxoFormat));\r\nexports.DxoDisplayFormatComponent = DxoDisplayFormatComponent;\r\nvar DxoDisplayFormatModule = (function () {\r\n    function DxoDisplayFormatModule() {\r\n    }\r\n    DxoDisplayFormatModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoDisplayFormatComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoDisplayFormatComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoDisplayFormatModule;\r\n}());\r\nexports.DxoDisplayFormatModule = DxoDisplayFormatModule;\r\n//# sourceMappingURL=display-format.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar nested_option_2 = require(\"../../core/nested-option\");\r\nvar DxoShowEventComponent = (function (_super) {\r\n    __extends(DxoShowEventComponent, _super);\r\n    function DxoShowEventComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoShowEventComponent.prototype, \"delay\", {\r\n        get: function () {\r\n            return this._getOption('delay');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('delay', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoShowEventComponent.prototype, \"name\", {\r\n        get: function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoShowEventComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'showEvent';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoShowEventComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-show-event',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoShowEventComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoShowEventComponent.propDecorators = {\r\n        \"delay\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n    };\r\n    return DxoShowEventComponent;\r\n}(nested_option_2.NestedOption));\r\nexports.DxoShowEventComponent = DxoShowEventComponent;\r\nvar DxoShowEventModule = (function () {\r\n    function DxoShowEventModule() {\r\n    }\r\n    DxoShowEventModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoShowEventComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoShowEventComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoShowEventModule;\r\n}());\r\nexports.DxoShowEventModule = DxoShowEventModule;\r\n//# sourceMappingURL=show-event.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar nested_option_2 = require(\"../../core/nested-option\");\r\nvar DxoShowSubmenuModeComponent = (function (_super) {\r\n    __extends(DxoShowSubmenuModeComponent, _super);\r\n    function DxoShowSubmenuModeComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, \"delay\", {\r\n        get: function () {\r\n            return this._getOption('delay');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('delay', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, \"name\", {\r\n        get: function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoShowSubmenuModeComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'showSubmenuMode';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoShowSubmenuModeComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-show-submenu-mode',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoShowSubmenuModeComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoShowSubmenuModeComponent.propDecorators = {\r\n        \"delay\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n    };\r\n    return DxoShowSubmenuModeComponent;\r\n}(nested_option_2.NestedOption));\r\nexports.DxoShowSubmenuModeComponent = DxoShowSubmenuModeComponent;\r\nvar DxoShowSubmenuModeModule = (function () {\r\n    function DxoShowSubmenuModeModule() {\r\n    }\r\n    DxoShowSubmenuModeModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoShowSubmenuModeComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoShowSubmenuModeComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoShowSubmenuModeModule;\r\n}());\r\nexports.DxoShowSubmenuModeModule = DxoShowSubmenuModeModule;\r\n//# sourceMappingURL=show-submenu-mode.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar popup_1 = require(\"devextreme/ui/popup\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar animation_1 = require(\"./nested/animation\");\r\nvar hide_1 = require(\"./nested/hide\");\r\nvar show_1 = require(\"./nested/show\");\r\nvar position_1 = require(\"./nested/position\");\r\nvar at_1 = require(\"./nested/at\");\r\nvar boundary_offset_1 = require(\"./nested/boundary-offset\");\r\nvar collision_1 = require(\"./nested/collision\");\r\nvar my_1 = require(\"./nested/my\");\r\nvar offset_1 = require(\"./nested/offset\");\r\nvar toolbar_item_dxi_1 = require(\"./nested/toolbar-item-dxi\");\r\nvar toolbar_item_dxi_2 = require(\"./nested/toolbar-item-dxi\");\r\n/**\r\n * The Popup widget is a pop-up window overlaying the current view.\r\n */\r\nvar DxPopupComponent = (function (_super) {\r\n    __extends(DxPopupComponent, _super);\r\n    function DxPopupComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'hidden', emit: 'onHidden' },\r\n            { subscribe: 'hiding', emit: 'onHiding' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'resize', emit: 'onResize' },\r\n            { subscribe: 'resizeEnd', emit: 'onResizeEnd' },\r\n            { subscribe: 'resizeStart', emit: 'onResizeStart' },\r\n            { subscribe: 'showing', emit: 'onShowing' },\r\n            { subscribe: 'shown', emit: 'onShown' },\r\n            { subscribe: 'titleRendered', emit: 'onTitleRendered' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'closeOnBackButtonChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'containerChange' },\r\n            { emit: 'contentTemplateChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'dragEnabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'resizeEnabledChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'shadingColorChange' },\r\n            { emit: 'showCloseButtonChange' },\r\n            { emit: 'showTitleChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'titleTemplateChange' },\r\n            { emit: 'toolbarItemsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxPopupComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"animation\", {\r\n        get: /**\r\n             * Configures widget visibility animations. This object contains two fields: show and hide.\r\n             */\r\n        function () {\r\n            return this._getOption('animation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"closeOnBackButton\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is closed if a user presses the Back hardware button.\r\n             */\r\n        function () {\r\n            return this._getOption('closeOnBackButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('closeOnBackButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"closeOnOutsideClick\", {\r\n        get: /**\r\n             * Specifies whether to close the widget if a user clicks outside it.\r\n             */\r\n        function () {\r\n            return this._getOption('closeOnOutsideClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('closeOnOutsideClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"container\", {\r\n        get: /**\r\n             * Specifies the container in which to place the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('container');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('container', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"contentTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the widget content.\r\n             */\r\n        function () {\r\n            return this._getOption('contentTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('contentTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the widget's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"dragEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not to allow a user to drag the popup window.\r\n             */\r\n        function () {\r\n            return this._getOption('dragEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dragEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"fullScreen\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to display the widget in full-screen mode.\r\n             */\r\n        function () {\r\n            return this._getOption('fullScreen');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fullScreen', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height in pixels.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"maxHeight\", {\r\n        get: /**\r\n             * Specifies the maximum height the widget can reach while resizing.\r\n             */\r\n        function () {\r\n            return this._getOption('maxHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"maxWidth\", {\r\n        get: /**\r\n             * Specifies the maximum width the widget can reach while resizing.\r\n             */\r\n        function () {\r\n            return this._getOption('maxWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"minHeight\", {\r\n        get: /**\r\n             * Specifies the minimum height the widget can reach while resizing.\r\n             */\r\n        function () {\r\n            return this._getOption('minHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"minWidth\", {\r\n        get: /**\r\n             * Specifies the minimum width the widget can reach while resizing.\r\n             */\r\n        function () {\r\n            return this._getOption('minWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"position\", {\r\n        get: /**\r\n             * Positions the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('position');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('position', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"resizeEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not an end user can resize the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('resizeEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('resizeEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"shading\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the main screen is inactive while the widget is active.\r\n             */\r\n        function () {\r\n            return this._getOption('shading');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('shading', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"shadingColor\", {\r\n        get: /**\r\n             * Specifies the shading color.\r\n             */\r\n        function () {\r\n            return this._getOption('shadingColor');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('shadingColor', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"showCloseButton\", {\r\n        get: /**\r\n             * Specifies whether or not the widget displays the Close button.\r\n             */\r\n        function () {\r\n            return this._getOption('showCloseButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showCloseButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"showTitle\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to display the title in the popup window.\r\n             */\r\n        function () {\r\n            return this._getOption('showTitle');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showTitle', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"title\", {\r\n        get: /**\r\n             * The title in the overlay window.\r\n             */\r\n        function () {\r\n            return this._getOption('title');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('title', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"titleTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the widget title. Does not apply if the title is defined.\r\n             */\r\n        function () {\r\n            return this._getOption('titleTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('titleTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"toolbarItems\", {\r\n        get: /**\r\n             * Specifies items displayed on the top or bottom toolbar of the popup window.\r\n             */\r\n        function () {\r\n            return this._getOption('toolbarItems');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('toolbarItems', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width in pixels.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPopupComponent.prototype, \"toolbarItemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('toolbarItems');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('toolbarItems', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxPopupComponent.prototype._createInstance = function (element, options) {\r\n        return new popup_1.default(element, options);\r\n    };\r\n    DxPopupComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxPopupComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('toolbarItems', changes);\r\n    };\r\n    DxPopupComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxPopupComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('toolbarItems');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxPopupComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxPopupComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-popup',\r\n                    template: '<ng-content></ng-content>',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxPopupComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxPopupComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"animation\": [{ type: core_1.Input },],\r\n        \"closeOnBackButton\": [{ type: core_1.Input },],\r\n        \"closeOnOutsideClick\": [{ type: core_1.Input },],\r\n        \"container\": [{ type: core_1.Input },],\r\n        \"contentTemplate\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"dragEnabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"fullScreen\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"maxHeight\": [{ type: core_1.Input },],\r\n        \"maxWidth\": [{ type: core_1.Input },],\r\n        \"minHeight\": [{ type: core_1.Input },],\r\n        \"minWidth\": [{ type: core_1.Input },],\r\n        \"position\": [{ type: core_1.Input },],\r\n        \"resizeEnabled\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"shading\": [{ type: core_1.Input },],\r\n        \"shadingColor\": [{ type: core_1.Input },],\r\n        \"showCloseButton\": [{ type: core_1.Input },],\r\n        \"showTitle\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"title\": [{ type: core_1.Input },],\r\n        \"titleTemplate\": [{ type: core_1.Input },],\r\n        \"toolbarItems\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onHidden\": [{ type: core_1.Output },],\r\n        \"onHiding\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onResize\": [{ type: core_1.Output },],\r\n        \"onResizeEnd\": [{ type: core_1.Output },],\r\n        \"onResizeStart\": [{ type: core_1.Output },],\r\n        \"onShowing\": [{ type: core_1.Output },],\r\n        \"onShown\": [{ type: core_1.Output },],\r\n        \"onTitleRendered\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"animationChange\": [{ type: core_1.Output },],\r\n        \"closeOnBackButtonChange\": [{ type: core_1.Output },],\r\n        \"closeOnOutsideClickChange\": [{ type: core_1.Output },],\r\n        \"containerChange\": [{ type: core_1.Output },],\r\n        \"contentTemplateChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"dragEnabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"fullScreenChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"maxHeightChange\": [{ type: core_1.Output },],\r\n        \"maxWidthChange\": [{ type: core_1.Output },],\r\n        \"minHeightChange\": [{ type: core_1.Output },],\r\n        \"minWidthChange\": [{ type: core_1.Output },],\r\n        \"positionChange\": [{ type: core_1.Output },],\r\n        \"resizeEnabledChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"shadingChange\": [{ type: core_1.Output },],\r\n        \"shadingColorChange\": [{ type: core_1.Output },],\r\n        \"showCloseButtonChange\": [{ type: core_1.Output },],\r\n        \"showTitleChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"titleChange\": [{ type: core_1.Output },],\r\n        \"titleTemplateChange\": [{ type: core_1.Output },],\r\n        \"toolbarItemsChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"toolbarItemsChildren\": [{ type: core_1.ContentChildren, args: [toolbar_item_dxi_2.DxiToolbarItemComponent,] },],\r\n    };\r\n    return DxPopupComponent;\r\n}(component_1.DxComponent));\r\nexports.DxPopupComponent = DxPopupComponent;\r\nvar DxPopupModule = (function () {\r\n    function DxPopupModule() {\r\n    }\r\n    DxPopupModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        toolbar_item_dxi_1.DxiToolbarItemModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxPopupComponent\r\n                    ],\r\n                    exports: [\r\n                        DxPopupComponent,\r\n                        animation_1.DxoAnimationModule,\r\n                        hide_1.DxoHideModule,\r\n                        show_1.DxoShowModule,\r\n                        position_1.DxoPositionModule,\r\n                        at_1.DxoAtModule,\r\n                        boundary_offset_1.DxoBoundaryOffsetModule,\r\n                        collision_1.DxoCollisionModule,\r\n                        my_1.DxoMyModule,\r\n                        offset_1.DxoOffsetModule,\r\n                        toolbar_item_dxi_1.DxiToolbarItemModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxPopupModule;\r\n}());\r\nexports.DxPopupModule = DxPopupModule;\r\n//# sourceMappingURL=popup.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar progress_bar_1 = require(\"devextreme/ui/progress_bar\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxProgressBarComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The ProgressBar is a widget that shows current progress.\r\n */\r\nvar DxProgressBarComponent = (function (_super) {\r\n    __extends(DxProgressBarComponent, _super);\r\n    function DxProgressBarComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'complete', emit: 'onComplete' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maxChange' },\r\n            { emit: 'minChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showStatusChange' },\r\n            { emit: 'statusFormatChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"max\", {\r\n        get: /**\r\n             * The maximum value the widget can accept.\r\n             */\r\n        function () {\r\n            return this._getOption('max');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('max', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"min\", {\r\n        get: /**\r\n             * The minimum value the widget can accept.\r\n             */\r\n        function () {\r\n            return this._getOption('min');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('min', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"showStatus\", {\r\n        get: /**\r\n             * Specifies whether or not the widget displays a progress status.\r\n             */\r\n        function () {\r\n            return this._getOption('showStatus');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showStatus', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"statusFormat\", {\r\n        get: /**\r\n             * Specifies a format for the progress status.\r\n             */\r\n        function () {\r\n            return this._getOption('statusFormat');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('statusFormat', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"value\", {\r\n        get: /**\r\n             * The current widget value.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxProgressBarComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxProgressBarComponent.prototype.change = function (_) { };\r\n    DxProgressBarComponent.prototype._createInstance = function (element, options) {\r\n        return new progress_bar_1.default(element, options);\r\n    };\r\n    DxProgressBarComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxProgressBarComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxProgressBarComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxProgressBarComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxProgressBarComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxProgressBarComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxProgressBarComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxProgressBarComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxProgressBarComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-progress-bar',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxProgressBarComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxProgressBarComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"max\": [{ type: core_1.Input },],\r\n        \"min\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"showStatus\": [{ type: core_1.Input },],\r\n        \"statusFormat\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onComplete\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"maxChange\": [{ type: core_1.Output },],\r\n        \"minChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"showStatusChange\": [{ type: core_1.Output },],\r\n        \"statusFormatChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n    };\r\n    return DxProgressBarComponent;\r\n}(component_1.DxComponent));\r\nexports.DxProgressBarComponent = DxProgressBarComponent;\r\nvar DxProgressBarModule = (function () {\r\n    function DxProgressBarModule() {\r\n    }\r\n    DxProgressBarModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxProgressBarComponent\r\n                    ],\r\n                    exports: [\r\n                        DxProgressBarComponent,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxProgressBarModule;\r\n}());\r\nexports.DxProgressBarModule = DxProgressBarModule;\r\n//# sourceMappingURL=progress-bar.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar scroll_view_1 = require(\"devextreme/ui/scroll_view\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\n/**\r\n * The ScrollView is a widget that enables a user to scroll its content.\r\n */\r\nvar DxScrollViewComponent = (function (_super) {\r\n    __extends(DxScrollViewComponent, _super);\r\n    function DxScrollViewComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pullDown', emit: 'onPullDown' },\r\n            { subscribe: 'reachBottom', emit: 'onReachBottom' },\r\n            { subscribe: 'scroll', emit: 'onScroll' },\r\n            { subscribe: 'updated', emit: 'onUpdated' },\r\n            { emit: 'bounceEnabledChange' },\r\n            { emit: 'directionChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'pulledDownTextChange' },\r\n            { emit: 'pullingDownTextChange' },\r\n            { emit: 'reachBottomTextChange' },\r\n            { emit: 'refreshingTextChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollByContentChange' },\r\n            { emit: 'scrollByThumbChange' },\r\n            { emit: 'showScrollbarChange' },\r\n            { emit: 'useNativeChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"bounceEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether to enable or disable the bounce-back effect.\r\n             */\r\n        function () {\r\n            return this._getOption('bounceEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('bounceEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"direction\", {\r\n        get: /**\r\n             * A string value specifying the available scrolling directions.\r\n             */\r\n        function () {\r\n            return this._getOption('direction');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('direction', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget can respond to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"pulledDownText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel when pulling the content down lowers the refresh threshold.\r\n             */\r\n        function () {\r\n            return this._getOption('pulledDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pulledDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"pullingDownText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel while pulling the content down to the refresh threshold.\r\n             */\r\n        function () {\r\n            return this._getOption('pullingDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pullingDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"reachBottomText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel displayed when content is scrolled to the bottom.\r\n             */\r\n        function () {\r\n            return this._getOption('reachBottomText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('reachBottomText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"refreshingText\", {\r\n        get: /**\r\n             * Specifies the text shown in the pullDown panel displayed when the content is being refreshed.\r\n             */\r\n        function () {\r\n            return this._getOption('refreshingText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('refreshingText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"scrollByContent\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not an end-user can scroll the widget content swiping it up or down. Applies only if useNative is false\r\n             */\r\n        function () {\r\n            return this._getOption('scrollByContent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollByContent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"scrollByThumb\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not an end-user can scroll the widget content using the scrollbar.\r\n             */\r\n        function () {\r\n            return this._getOption('scrollByThumb');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollByThumb', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"showScrollbar\", {\r\n        get: /**\r\n             * Specifies when the widget shows the scrollbar.\r\n             */\r\n        function () {\r\n            return this._getOption('showScrollbar');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showScrollbar', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"useNative\", {\r\n        get: /**\r\n             * Indicates whether to use native or simulated scrolling.\r\n             */\r\n        function () {\r\n            return this._getOption('useNative');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('useNative', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxScrollViewComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxScrollViewComponent.prototype._createInstance = function (element, options) {\r\n        return new scroll_view_1.default(element, options);\r\n    };\r\n    DxScrollViewComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxScrollViewComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-scroll-view',\r\n                    template: '<ng-content></ng-content>',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxScrollViewComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxScrollViewComponent.propDecorators = {\r\n        \"bounceEnabled\": [{ type: core_1.Input },],\r\n        \"direction\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"pulledDownText\": [{ type: core_1.Input },],\r\n        \"pullingDownText\": [{ type: core_1.Input },],\r\n        \"reachBottomText\": [{ type: core_1.Input },],\r\n        \"refreshingText\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"scrollByContent\": [{ type: core_1.Input },],\r\n        \"scrollByThumb\": [{ type: core_1.Input },],\r\n        \"showScrollbar\": [{ type: core_1.Input },],\r\n        \"useNative\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPullDown\": [{ type: core_1.Output },],\r\n        \"onReachBottom\": [{ type: core_1.Output },],\r\n        \"onScroll\": [{ type: core_1.Output },],\r\n        \"onUpdated\": [{ type: core_1.Output },],\r\n        \"bounceEnabledChange\": [{ type: core_1.Output },],\r\n        \"directionChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"pulledDownTextChange\": [{ type: core_1.Output },],\r\n        \"pullingDownTextChange\": [{ type: core_1.Output },],\r\n        \"reachBottomTextChange\": [{ type: core_1.Output },],\r\n        \"refreshingTextChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"scrollByContentChange\": [{ type: core_1.Output },],\r\n        \"scrollByThumbChange\": [{ type: core_1.Output },],\r\n        \"showScrollbarChange\": [{ type: core_1.Output },],\r\n        \"useNativeChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n    };\r\n    return DxScrollViewComponent;\r\n}(component_1.DxComponent));\r\nexports.DxScrollViewComponent = DxScrollViewComponent;\r\nvar DxScrollViewModule = (function () {\r\n    function DxScrollViewModule() {\r\n    }\r\n    DxScrollViewModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxScrollViewComponent\r\n                    ],\r\n                    exports: [\r\n                        DxScrollViewComponent,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxScrollViewModule;\r\n}());\r\nexports.DxScrollViewModule = DxScrollViewModule;\r\n//# sourceMappingURL=scroll-view.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar select_box_1 = require(\"devextreme/ui/select_box\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxSelectBoxComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The SelectBox widget is an editor that allows an end user to select an item from a drop-down list.\r\n */\r\nvar DxSelectBoxComponent = (function (_super) {\r\n    __extends(DxSelectBoxComponent, _super);\r\n    function DxSelectBoxComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'customItemCreating', emit: 'onCustomItemCreating' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyPress', emit: 'onKeyPress' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'acceptCustomValueChange' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'displayExprChange' },\r\n            { emit: 'displayValueChange' },\r\n            { emit: 'dropDownButtonTemplateChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fieldTemplateChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'groupedChange' },\r\n            { emit: 'groupTemplateChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'maxLengthChange' },\r\n            { emit: 'minSearchLengthChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'openOnFieldClickChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'searchEnabledChange' },\r\n            { emit: 'searchExprChange' },\r\n            { emit: 'searchModeChange' },\r\n            { emit: 'searchTimeoutChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDataBeforeSearchChange' },\r\n            { emit: 'showDropDownButtonChange' },\r\n            { emit: 'showSelectionControlsChange' },\r\n            { emit: 'spellcheckChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'valueExprChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"acceptCustomValue\", {\r\n        get: /**\r\n             * Specifies whether the widget allows a user to enter a custom value. Requires the onCustomItemCreating handler implementation.\r\n             */\r\n        function () {\r\n            return this._getOption('acceptCustomValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('acceptCustomValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data the widget should display.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the drop-down field's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"displayExpr\", {\r\n        get: /**\r\n             * Specifies the name of the data source item field whose value is displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"displayValue\", {\r\n        get: /**\r\n             * Returns the value currently displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('displayValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"dropDownButtonTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the drop-down button.\r\n             */\r\n        function () {\r\n            return this._getOption('dropDownButtonTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dropDownButtonTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"fieldTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for the text field. Must contain the TextBox widget.\r\n             */\r\n        function () {\r\n            return this._getOption('fieldTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fieldTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"grouped\", {\r\n        get: /**\r\n             * Specifies whether data items should be grouped.\r\n             */\r\n        function () {\r\n            return this._getOption('grouped');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('grouped', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"groupTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for group captions.\r\n             */\r\n        function () {\r\n            return this._getOption('groupTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('groupTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"inputAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be passed on to the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"items\", {\r\n        get: /**\r\n             * An array of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"maxLength\", {\r\n        get: /**\r\n             * Specifies the maximum number of characters you can enter into the textbox.\r\n             */\r\n        function () {\r\n            return this._getOption('maxLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"minSearchLength\", {\r\n        get: /**\r\n             * The minimum number of characters that must be entered into the text box to begin a search. Applies only if searchEnabled is true.\r\n             */\r\n        function () {\r\n            return this._getOption('minSearchLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minSearchLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"noDataText\", {\r\n        get: /**\r\n             * The text or HTML markup displayed by the widget if the item collection is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('noDataText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('noDataText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"opened\", {\r\n        get: /**\r\n             * Specifies whether or not the drop-down editor is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('opened');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('opened', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"openOnFieldClick\", {\r\n        get: /**\r\n             * Specifies whether a user can open the drop-down list by clicking a text field.\r\n             */\r\n        function () {\r\n            return this._getOption('openOnFieldClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('openOnFieldClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"placeholder\", {\r\n        get: /**\r\n             * The text that is provided as a hint in the select box editor.\r\n             */\r\n        function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"searchEnabled\", {\r\n        get: /**\r\n             * Specifies whether to allow searching.\r\n             */\r\n        function () {\r\n            return this._getOption('searchEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"searchExpr\", {\r\n        get: /**\r\n             * Specifies the name of a data source item field or an expression whose value is compared to the search criterion.\r\n             */\r\n        function () {\r\n            return this._getOption('searchExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"searchMode\", {\r\n        get: /**\r\n             * Specifies a comparison operation used to search widget items.\r\n             */\r\n        function () {\r\n            return this._getOption('searchMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"searchTimeout\", {\r\n        get: /**\r\n             * Specifies the time delay, in milliseconds, after the last character has been typed in, before a search is executed.\r\n             */\r\n        function () {\r\n            return this._getOption('searchTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * Gets the currently selected item.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"showClearButton\", {\r\n        get: /**\r\n             * Specifies whether to display the Clear button in the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('showClearButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showClearButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"showDataBeforeSearch\", {\r\n        get: /**\r\n             * Specifies whether or not the widget displays unfiltered values until a user types a number of characters exceeding the minSearchLength option value.\r\n             */\r\n        function () {\r\n            return this._getOption('showDataBeforeSearch');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDataBeforeSearch', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"showDropDownButton\", {\r\n        get: /**\r\n             * Specifies whether the drop-down button is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('showDropDownButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDropDownButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"showSelectionControls\", {\r\n        get: /**\r\n             * Specifies whether or not to display selection controls.\r\n             */\r\n        function () {\r\n            return this._getOption('showSelectionControls');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showSelectionControls', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"spellcheck\", {\r\n        get: /**\r\n             * Specifies whether or not the widget checks the inner text for spelling mistakes.\r\n             */\r\n        function () {\r\n            return this._getOption('spellcheck');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('spellcheck', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the widget's text field is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The read-only option that holds the text displayed by the widget input element.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"value\", {\r\n        get: /**\r\n             * Specifies the currently selected value. May be an object if dataSource contains objects and valueExpr is not set.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"valueChangeEvent\", {\r\n        get: /**\r\n             * Specifies the DOM events after which the widget's value should be updated. Applies only if acceptCustomValue is set to true.\r\n             */\r\n        function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"valueExpr\", {\r\n        get: /**\r\n             * Specifies which data field provides the widget's value. When this option is not set, the value is the entire data object.\r\n             */\r\n        function () {\r\n            return this._getOption('valueExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxSelectBoxComponent.prototype.change = function (_) { };\r\n    Object.defineProperty(DxSelectBoxComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxSelectBoxComponent.prototype._createInstance = function (element, options) {\r\n        return new select_box_1.default(element, options);\r\n    };\r\n    DxSelectBoxComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxSelectBoxComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxSelectBoxComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxSelectBoxComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxSelectBoxComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxSelectBoxComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxSelectBoxComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('searchExpr', changes);\r\n    };\r\n    DxSelectBoxComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxSelectBoxComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('searchExpr');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxSelectBoxComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxSelectBoxComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxSelectBoxComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxSelectBoxComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-select-box',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxSelectBoxComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxSelectBoxComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"acceptCustomValue\": [{ type: core_1.Input },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"displayExpr\": [{ type: core_1.Input },],\r\n        \"displayValue\": [{ type: core_1.Input },],\r\n        \"dropDownButtonTemplate\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"fieldTemplate\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"grouped\": [{ type: core_1.Input },],\r\n        \"groupTemplate\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"inputAttr\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"maxLength\": [{ type: core_1.Input },],\r\n        \"minSearchLength\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"noDataText\": [{ type: core_1.Input },],\r\n        \"opened\": [{ type: core_1.Input },],\r\n        \"openOnFieldClick\": [{ type: core_1.Input },],\r\n        \"placeholder\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"searchEnabled\": [{ type: core_1.Input },],\r\n        \"searchExpr\": [{ type: core_1.Input },],\r\n        \"searchMode\": [{ type: core_1.Input },],\r\n        \"searchTimeout\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"showClearButton\": [{ type: core_1.Input },],\r\n        \"showDataBeforeSearch\": [{ type: core_1.Input },],\r\n        \"showDropDownButton\": [{ type: core_1.Input },],\r\n        \"showSelectionControls\": [{ type: core_1.Input },],\r\n        \"spellcheck\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"valueChangeEvent\": [{ type: core_1.Input },],\r\n        \"valueExpr\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onChange\": [{ type: core_1.Output },],\r\n        \"onClosed\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onCopy\": [{ type: core_1.Output },],\r\n        \"onCustomItemCreating\": [{ type: core_1.Output },],\r\n        \"onCut\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onEnterKey\": [{ type: core_1.Output },],\r\n        \"onFocusIn\": [{ type: core_1.Output },],\r\n        \"onFocusOut\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onInput\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onKeyDown\": [{ type: core_1.Output },],\r\n        \"onKeyPress\": [{ type: core_1.Output },],\r\n        \"onKeyUp\": [{ type: core_1.Output },],\r\n        \"onOpened\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPaste\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"acceptCustomValueChange\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"displayExprChange\": [{ type: core_1.Output },],\r\n        \"displayValueChange\": [{ type: core_1.Output },],\r\n        \"dropDownButtonTemplateChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"fieldTemplateChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"groupedChange\": [{ type: core_1.Output },],\r\n        \"groupTemplateChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"inputAttrChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"maxLengthChange\": [{ type: core_1.Output },],\r\n        \"minSearchLengthChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"noDataTextChange\": [{ type: core_1.Output },],\r\n        \"openedChange\": [{ type: core_1.Output },],\r\n        \"openOnFieldClickChange\": [{ type: core_1.Output },],\r\n        \"placeholderChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"searchEnabledChange\": [{ type: core_1.Output },],\r\n        \"searchExprChange\": [{ type: core_1.Output },],\r\n        \"searchModeChange\": [{ type: core_1.Output },],\r\n        \"searchTimeoutChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"showClearButtonChange\": [{ type: core_1.Output },],\r\n        \"showDataBeforeSearchChange\": [{ type: core_1.Output },],\r\n        \"showDropDownButtonChange\": [{ type: core_1.Output },],\r\n        \"showSelectionControlsChange\": [{ type: core_1.Output },],\r\n        \"spellcheckChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"valueChangeEventChange\": [{ type: core_1.Output },],\r\n        \"valueExprChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxSelectBoxComponent;\r\n}(component_1.DxComponent));\r\nexports.DxSelectBoxComponent = DxSelectBoxComponent;\r\nvar DxSelectBoxModule = (function () {\r\n    function DxSelectBoxModule() {\r\n    }\r\n    DxSelectBoxModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        item_dxi_1.DxiItemModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxSelectBoxComponent\r\n                    ],\r\n                    exports: [\r\n                        DxSelectBoxComponent,\r\n                        item_dxi_1.DxiItemModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxSelectBoxModule;\r\n}());\r\nexports.DxSelectBoxModule = DxSelectBoxModule;\r\n//# sourceMappingURL=select-box.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar tab_panel_1 = require(\"devextreme/ui/tab_panel\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar item_dxi_1 = require(\"./nested/item-dxi\");\r\nvar item_dxi_2 = require(\"./nested/item-dxi\");\r\n/**\r\n * The TabPanel is a widget consisting of the Tabs and MultiView widgets. It automatically synchronizes the selected tab with the currently displayed view and vice versa.\r\n */\r\nvar DxTabPanelComponent = (function (_super) {\r\n    __extends(DxTabPanelComponent, _super);\r\n    function DxTabPanelComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemContextMenu', emit: 'onItemContextMenu' },\r\n            { subscribe: 'itemHold', emit: 'onItemHold' },\r\n            { subscribe: 'itemRendered', emit: 'onItemRendered' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'titleClick', emit: 'onTitleClick' },\r\n            { subscribe: 'titleHold', emit: 'onTitleHold' },\r\n            { subscribe: 'titleRendered', emit: 'onTitleRendered' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationEnabledChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemHoldTimeoutChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'itemTitleTemplateChange' },\r\n            { emit: 'loopChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'repaintChangesOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollByContentChange' },\r\n            { emit: 'scrollingEnabledChange' },\r\n            { emit: 'selectedIndexChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'showNavButtonsChange' },\r\n            { emit: 'swipeEnabledChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"animationEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not to animate the displayed item change.\r\n             */\r\n        function () {\r\n            return this._getOption('animationEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animationEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * A data source used to fetch data to be displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"deferRendering\", {\r\n        get: /**\r\n             * Specifies whether to render the view's content when it is displayed. If false, the content is rendered immediately.\r\n             */\r\n        function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"itemHoldTimeout\", {\r\n        get: /**\r\n             * The time period in milliseconds before the onItemHold event is raised.\r\n             */\r\n        function () {\r\n            return this._getOption('itemHoldTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemHoldTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"items\", {\r\n        get: /**\r\n             * An array of items displayed by the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"itemTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for items.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"itemTitleTemplate\", {\r\n        get: /**\r\n             * Specifies a custom template for item titles.\r\n             */\r\n        function () {\r\n            return this._getOption('itemTitleTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTitleTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"loop\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to scroll back to the first item after the last item is swiped.\r\n             */\r\n        function () {\r\n            return this._getOption('loop');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('loop', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"noDataText\", {\r\n        get: /**\r\n             * The text or HTML markup displayed by the widget if the item collection is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('noDataText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('noDataText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"repaintChangesOnly\", {\r\n        get: /**\r\n             * Specifies whether to repaint only those elements whose data changed.\r\n             */\r\n        function () {\r\n            return this._getOption('repaintChangesOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('repaintChangesOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"scrollByContent\", {\r\n        get: /**\r\n             * A Boolean value specifying if tabs in the title are scrolled by content.\r\n             */\r\n        function () {\r\n            return this._getOption('scrollByContent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollByContent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"scrollingEnabled\", {\r\n        get: /**\r\n             * A Boolean indicating whether or not to add scrolling support for tabs in the title.\r\n             */\r\n        function () {\r\n            return this._getOption('scrollingEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollingEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"selectedIndex\", {\r\n        get: /**\r\n             * The index of the currently displayed item.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"selectedItem\", {\r\n        get: /**\r\n             * The selected item object.\r\n             */\r\n        function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"showNavButtons\", {\r\n        get: /**\r\n             * A Boolean value that specifies the availability of navigation buttons.\r\n             */\r\n        function () {\r\n            return this._getOption('showNavButtons');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showNavButtons', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"swipeEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not to allow users to change the selected index by swiping.\r\n             */\r\n        function () {\r\n            return this._getOption('swipeEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('swipeEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTabPanelComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxTabPanelComponent.prototype._createInstance = function (element, options) {\r\n        return new tab_panel_1.default(element, options);\r\n    };\r\n    DxTabPanelComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxTabPanelComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n    };\r\n    DxTabPanelComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxTabPanelComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxTabPanelComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxTabPanelComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-tab-panel',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxTabPanelComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxTabPanelComponent.propDecorators = {\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"animationEnabled\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"deferRendering\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"itemHoldTimeout\": [{ type: core_1.Input },],\r\n        \"items\": [{ type: core_1.Input },],\r\n        \"itemTemplate\": [{ type: core_1.Input },],\r\n        \"itemTitleTemplate\": [{ type: core_1.Input },],\r\n        \"loop\": [{ type: core_1.Input },],\r\n        \"noDataText\": [{ type: core_1.Input },],\r\n        \"repaintChangesOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"scrollByContent\": [{ type: core_1.Input },],\r\n        \"scrollingEnabled\": [{ type: core_1.Input },],\r\n        \"selectedIndex\": [{ type: core_1.Input },],\r\n        \"selectedItem\": [{ type: core_1.Input },],\r\n        \"showNavButtons\": [{ type: core_1.Input },],\r\n        \"swipeEnabled\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onItemClick\": [{ type: core_1.Output },],\r\n        \"onItemContextMenu\": [{ type: core_1.Output },],\r\n        \"onItemHold\": [{ type: core_1.Output },],\r\n        \"onItemRendered\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onTitleClick\": [{ type: core_1.Output },],\r\n        \"onTitleHold\": [{ type: core_1.Output },],\r\n        \"onTitleRendered\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"animationEnabledChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"deferRenderingChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"itemHoldTimeoutChange\": [{ type: core_1.Output },],\r\n        \"itemsChange\": [{ type: core_1.Output },],\r\n        \"itemTemplateChange\": [{ type: core_1.Output },],\r\n        \"itemTitleTemplateChange\": [{ type: core_1.Output },],\r\n        \"loopChange\": [{ type: core_1.Output },],\r\n        \"noDataTextChange\": [{ type: core_1.Output },],\r\n        \"repaintChangesOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"scrollByContentChange\": [{ type: core_1.Output },],\r\n        \"scrollingEnabledChange\": [{ type: core_1.Output },],\r\n        \"selectedIndexChange\": [{ type: core_1.Output },],\r\n        \"selectedItemChange\": [{ type: core_1.Output },],\r\n        \"showNavButtonsChange\": [{ type: core_1.Output },],\r\n        \"swipeEnabledChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"itemsChildren\": [{ type: core_1.ContentChildren, args: [item_dxi_2.DxiItemComponent,] },],\r\n    };\r\n    return DxTabPanelComponent;\r\n}(component_1.DxComponent));\r\nexports.DxTabPanelComponent = DxTabPanelComponent;\r\nvar DxTabPanelModule = (function () {\r\n    function DxTabPanelModule() {\r\n    }\r\n    DxTabPanelModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        item_dxi_1.DxiItemModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxTabPanelComponent\r\n                    ],\r\n                    exports: [\r\n                        DxTabPanelComponent,\r\n                        item_dxi_1.DxiItemModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxTabPanelModule;\r\n}());\r\nexports.DxTabPanelModule = DxTabPanelModule;\r\n//# sourceMappingURL=tab-panel.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar text_area_1 = require(\"devextreme/ui/text_area\");\r\nvar validator_1 = require(\"./validator\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return DxTextAreaComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The TextArea is a widget that enables a user to enter and edit a multi-line text.\r\n */\r\nvar DxTextAreaComponent = (function (_super) {\r\n    __extends(DxTextAreaComponent, _super);\r\n    function DxTextAreaComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyPress', emit: 'onKeyPress' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'autoResizeEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxLengthChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'spellcheckChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"accessKey\", {\r\n        get: /**\r\n             * Specifies the shortcut key that sets focus on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"activeStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether or not the widget changes its state when interacting with a user.\r\n             */\r\n        function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"autoResizeEnabled\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the auto resizing mode is enabled.\r\n             */\r\n        function () {\r\n            return this._getOption('autoResizeEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('autoResizeEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"focusStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget can be focused using keyboard navigation.\r\n             */\r\n        function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"hint\", {\r\n        get: /**\r\n             * Specifies text for a hint that appears when a user pauses on the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"hoverStateEnabled\", {\r\n        get: /**\r\n             * Specifies whether the widget changes its state when a user pauses on it.\r\n             */\r\n        function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"inputAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be passed on to the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"isValid\", {\r\n        get: /**\r\n             * Specifies whether the editor's value is valid.\r\n             */\r\n        function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"maxHeight\", {\r\n        get: /**\r\n             * Specifies the maximum height of the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('maxHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"maxLength\", {\r\n        get: /**\r\n             * Specifies the maximum number of characters you can enter into the textbox.\r\n             */\r\n        function () {\r\n            return this._getOption('maxLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"minHeight\", {\r\n        get: /**\r\n             * Specifies the minimum height of the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('minHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"name\", {\r\n        get: /**\r\n             * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"placeholder\", {\r\n        get: /**\r\n             * The text displayed by the widget when the widget value is empty.\r\n             */\r\n        function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"readOnly\", {\r\n        get: /**\r\n             * A Boolean value specifying whether or not the widget is read-only.\r\n             */\r\n        function () {\r\n            return this._getOption('readOnly');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('readOnly', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"spellcheck\", {\r\n        get: /**\r\n             * Specifies whether or not the widget checks the inner text for spelling mistakes.\r\n             */\r\n        function () {\r\n            return this._getOption('spellcheck');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('spellcheck', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"stylingMode\", {\r\n        get: /**\r\n             * Specifies how the widget's text field is styled.\r\n             */\r\n        function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"tabIndex\", {\r\n        get: /**\r\n             * Specifies the number of the element when the Tab key is used for navigating.\r\n             */\r\n        function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"text\", {\r\n        get: /**\r\n             * The read-only option that holds the text displayed by the widget input element.\r\n             */\r\n        function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"validationError\", {\r\n        get: /**\r\n             * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n             */\r\n        function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"validationMessageMode\", {\r\n        get: /**\r\n             * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n             */\r\n        function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"value\", {\r\n        get: /**\r\n             * Specifies a value the widget displays.\r\n             */\r\n        function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"valueChangeEvent\", {\r\n        get: /**\r\n             * Specifies the DOM events after which the widget's value should be updated.\r\n             */\r\n        function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"visible\", {\r\n        get: /**\r\n             * Specifies whether the widget is visible.\r\n             */\r\n        function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxTextAreaComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxTextAreaComponent.prototype.change = function (_) { };\r\n    DxTextAreaComponent.prototype._createInstance = function (element, options) {\r\n        return new text_area_1.default(element, options);\r\n    };\r\n    DxTextAreaComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxTextAreaComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxTextAreaComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxTextAreaComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxTextAreaComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxTextAreaComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxTextAreaComponent.prototype.ngOnInit = function () {\r\n        _super.prototype.ngOnInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    };\r\n    DxTextAreaComponent.prototype.ngAfterViewInit = function () {\r\n        _super.prototype.ngAfterViewInit.call(this);\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    };\r\n    DxTextAreaComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-text-area',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                        nested_option_1.NestedOptionHost\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxTextAreaComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxTextAreaComponent.propDecorators = {\r\n        \"validator\": [{ type: core_1.ContentChild, args: [validator_1.DxValidatorComponent,] },],\r\n        \"accessKey\": [{ type: core_1.Input },],\r\n        \"activeStateEnabled\": [{ type: core_1.Input },],\r\n        \"autoResizeEnabled\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"focusStateEnabled\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"hint\": [{ type: core_1.Input },],\r\n        \"hoverStateEnabled\": [{ type: core_1.Input },],\r\n        \"inputAttr\": [{ type: core_1.Input },],\r\n        \"isValid\": [{ type: core_1.Input },],\r\n        \"maxHeight\": [{ type: core_1.Input },],\r\n        \"maxLength\": [{ type: core_1.Input },],\r\n        \"minHeight\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"placeholder\": [{ type: core_1.Input },],\r\n        \"readOnly\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"spellcheck\": [{ type: core_1.Input },],\r\n        \"stylingMode\": [{ type: core_1.Input },],\r\n        \"tabIndex\": [{ type: core_1.Input },],\r\n        \"text\": [{ type: core_1.Input },],\r\n        \"validationError\": [{ type: core_1.Input },],\r\n        \"validationMessageMode\": [{ type: core_1.Input },],\r\n        \"value\": [{ type: core_1.Input },],\r\n        \"valueChangeEvent\": [{ type: core_1.Input },],\r\n        \"visible\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onChange\": [{ type: core_1.Output },],\r\n        \"onContentReady\": [{ type: core_1.Output },],\r\n        \"onCopy\": [{ type: core_1.Output },],\r\n        \"onCut\": [{ type: core_1.Output },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onEnterKey\": [{ type: core_1.Output },],\r\n        \"onFocusIn\": [{ type: core_1.Output },],\r\n        \"onFocusOut\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onInput\": [{ type: core_1.Output },],\r\n        \"onKeyDown\": [{ type: core_1.Output },],\r\n        \"onKeyPress\": [{ type: core_1.Output },],\r\n        \"onKeyUp\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPaste\": [{ type: core_1.Output },],\r\n        \"onValueChanged\": [{ type: core_1.Output },],\r\n        \"accessKeyChange\": [{ type: core_1.Output },],\r\n        \"activeStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"autoResizeEnabledChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"focusStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"hintChange\": [{ type: core_1.Output },],\r\n        \"hoverStateEnabledChange\": [{ type: core_1.Output },],\r\n        \"inputAttrChange\": [{ type: core_1.Output },],\r\n        \"isValidChange\": [{ type: core_1.Output },],\r\n        \"maxHeightChange\": [{ type: core_1.Output },],\r\n        \"maxLengthChange\": [{ type: core_1.Output },],\r\n        \"minHeightChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"placeholderChange\": [{ type: core_1.Output },],\r\n        \"readOnlyChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"spellcheckChange\": [{ type: core_1.Output },],\r\n        \"stylingModeChange\": [{ type: core_1.Output },],\r\n        \"tabIndexChange\": [{ type: core_1.Output },],\r\n        \"textChange\": [{ type: core_1.Output },],\r\n        \"validationErrorChange\": [{ type: core_1.Output },],\r\n        \"validationMessageModeChange\": [{ type: core_1.Output },],\r\n        \"valueChange\": [{ type: core_1.Output },],\r\n        \"valueChangeEventChange\": [{ type: core_1.Output },],\r\n        \"visibleChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"onBlur\": [{ type: core_1.Output },],\r\n        \"change\": [{ type: core_1.HostListener, args: ['valueChange', ['$event'],] },],\r\n        \"touched\": [{ type: core_1.HostListener, args: ['onBlur', ['$event'],] },],\r\n    };\r\n    return DxTextAreaComponent;\r\n}(component_1.DxComponent));\r\nexports.DxTextAreaComponent = DxTextAreaComponent;\r\nvar DxTextAreaModule = (function () {\r\n    function DxTextAreaModule() {\r\n    }\r\n    DxTextAreaModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxTextAreaComponent\r\n                    ],\r\n                    exports: [\r\n                        DxTextAreaComponent,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxTextAreaModule;\r\n}());\r\nexports.DxTextAreaModule = DxTextAreaModule;\r\n//# sourceMappingURL=text-area.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar validator_1 = require(\"devextreme/ui/validator\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar adapter_1 = require(\"./nested/adapter\");\r\nvar validation_rule_dxi_1 = require(\"./nested/validation-rule-dxi\");\r\nvar validation_rule_dxi_2 = require(\"./nested/validation-rule-dxi\");\r\n/**\r\n * A widget that is used to validate the associated DevExtreme editors against the defined validation rules.\r\n */\r\nvar DxValidatorComponent = (function (_super) {\r\n    __extends(DxValidatorComponent, _super);\r\n    function DxValidatorComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'validated', emit: 'onValidated' },\r\n            { emit: 'adapterChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'validationGroupChange' },\r\n            { emit: 'validationRulesChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"adapter\", {\r\n        get: /**\r\n             * An object that specifies what and when to validate, and how to apply the validation result.\r\n             */\r\n        function () {\r\n            return this._getOption('adapter');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('adapter', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"height\", {\r\n        get: /**\r\n             * Specifies the widget's height.\r\n             */\r\n        function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"name\", {\r\n        get: /**\r\n             * Specifies the editor name to be used in the validation default messages.\r\n             */\r\n        function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"validationGroup\", {\r\n        get: /**\r\n             * Specifies the validation group the editor will be related to.\r\n             */\r\n        function () {\r\n            return this._getOption('validationGroup');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationGroup', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"validationRules\", {\r\n        get: /**\r\n             * An array of validation rules to be checked for the editor with which the dxValidator object is associated.\r\n             */\r\n        function () {\r\n            return this._getOption('validationRules');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationRules', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"width\", {\r\n        get: /**\r\n             * Specifies the widget's width.\r\n             */\r\n        function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxValidatorComponent.prototype, \"validationRulesChildren\", {\r\n        get: function () {\r\n            return this._getOption('validationRules');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('validationRules', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxValidatorComponent.prototype._createInstance = function (element, options) {\r\n        return new validator_1.default(element, options);\r\n    };\r\n    DxValidatorComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxValidatorComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('validationRules', changes);\r\n    };\r\n    DxValidatorComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxValidatorComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('validationRules');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxValidatorComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxValidatorComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-validator',\r\n                    template: '',\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxValidatorComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxValidatorComponent.propDecorators = {\r\n        \"adapter\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"height\": [{ type: core_1.Input },],\r\n        \"name\": [{ type: core_1.Input },],\r\n        \"validationGroup\": [{ type: core_1.Input },],\r\n        \"validationRules\": [{ type: core_1.Input },],\r\n        \"width\": [{ type: core_1.Input },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onValidated\": [{ type: core_1.Output },],\r\n        \"adapterChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"heightChange\": [{ type: core_1.Output },],\r\n        \"nameChange\": [{ type: core_1.Output },],\r\n        \"validationGroupChange\": [{ type: core_1.Output },],\r\n        \"validationRulesChange\": [{ type: core_1.Output },],\r\n        \"widthChange\": [{ type: core_1.Output },],\r\n        \"validationRulesChildren\": [{ type: core_1.ContentChildren, args: [validation_rule_dxi_2.DxiValidationRuleComponent,] },],\r\n    };\r\n    return DxValidatorComponent;\r\n}(component_1.DxComponentExtension));\r\nexports.DxValidatorComponent = DxValidatorComponent;\r\nvar DxValidatorModule = (function () {\r\n    function DxValidatorModule() {\r\n    }\r\n    DxValidatorModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        adapter_1.DxoAdapterModule,\r\n                        validation_rule_dxi_1.DxiValidationRuleModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxValidatorComponent\r\n                    ],\r\n                    exports: [\r\n                        DxValidatorComponent,\r\n                        adapter_1.DxoAdapterModule,\r\n                        validation_rule_dxi_1.DxiValidationRuleModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxValidatorModule;\r\n}());\r\nexports.DxValidatorModule = DxValidatorModule;\r\n//# sourceMappingURL=validator.js.map","/**\r\n * DevExtreme (ui/accordion.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    fx = require(\"../animation/fx\"),\r\n    clickEvent = require(\"../events/click\"),\r\n    devices = require(\"../core/devices\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    getPublicElement = require(\"../core/utils/dom\").getPublicElement,\r\n    iteratorUtils = require(\"../core/utils/iterator\"),\r\n    isPlainObject = require(\"../core/utils/type\").isPlainObject,\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    CollectionWidget = require(\"./collection/ui.collection_widget.live_update\").default,\r\n    deferredUtils = require(\"../core/utils/deferred\"),\r\n    when = deferredUtils.when,\r\n    Deferred = deferredUtils.Deferred,\r\n    BindableTemplate = require(\"./widget/bindable_template\"),\r\n    iconUtils = require(\"../core/utils/icon\"),\r\n    isDefined = require(\"../core/utils/type\").isDefined,\r\n    themes = require(\"./themes\");\r\nvar ACCORDION_CLASS = \"dx-accordion\",\r\n    ACCORDION_WRAPPER_CLASS = \"dx-accordion-wrapper\",\r\n    ACCORDION_ITEM_CLASS = \"dx-accordion-item\",\r\n    ACCORDION_ITEM_OPENED_CLASS = \"dx-accordion-item-opened\",\r\n    ACCORDION_ITEM_CLOSED_CLASS = \"dx-accordion-item-closed\",\r\n    ACCORDION_ITEM_TITLE_CLASS = \"dx-accordion-item-title\",\r\n    ACCORDION_ITEM_BODY_CLASS = \"dx-accordion-item-body\",\r\n    ACCORDION_ITEM_TITLE_CAPTION_CLASS = \"dx-accordion-item-title-caption\",\r\n    ACCORDION_ITEM_DATA_KEY = \"dxAccordionItemData\";\r\nvar Accordion = CollectionWidget.inherit({\r\n    _activeStateUnit: \".\" + ACCORDION_ITEM_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            height: void 0,\r\n            itemTitleTemplate: \"title\",\r\n            onItemTitleClick: null,\r\n            selectedIndex: 0,\r\n            collapsible: false,\r\n            multiple: false,\r\n            animationDuration: 300,\r\n            deferRendering: true,\r\n            selectionByClick: true,\r\n            activeStateEnabled: true,\r\n            _itemAttributes: {\r\n                role: \"tab\"\r\n            },\r\n            _animationEasing: \"ease\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial()\r\n            },\r\n            options: {\r\n                animationDuration: 200,\r\n                _animationEasing: \"cubic-bezier(0.4, 0, 0.2, 1)\"\r\n            }\r\n        }])\r\n    },\r\n    _itemElements: function() {\r\n        return this._itemContainer().children(this._itemSelector())\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.option(\"selectionRequired\", !this.option(\"collapsible\"));\r\n        this.option(\"selectionMode\", this.option(\"multiple\") ? \"multiple\" : \"single\");\r\n        var $element = this.$element();\r\n        $element.addClass(ACCORDION_CLASS);\r\n        this._$container = $(\"<div>\").addClass(ACCORDION_WRAPPER_CLASS);\r\n        $element.append(this._$container)\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.title = new BindableTemplate(function($container, data) {\r\n            var $templateContainer = $(\"<div>\").addClass(ACCORDION_ITEM_TITLE_CAPTION_CLASS).appendTo($container);\r\n            if (isPlainObject(data)) {\r\n                if (data.title) {\r\n                    $templateContainer.text(data.title)\r\n                }\r\n                $templateContainer.append(iconUtils.getImageContainer(data.icon))\r\n            } else {\r\n                $templateContainer.text(String(data))\r\n            }\r\n        }, [\"title\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n    },\r\n    _initMarkup: function() {\r\n        this._deferredItems = [];\r\n        this.callBase();\r\n        this.setAria({\r\n            role: \"tablist\",\r\n            multiselectable: this.option(\"multiple\")\r\n        })\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._updateItemHeightsWrapper(true);\r\n        this._attachItemTitleClickAction()\r\n    },\r\n    _itemDataKey: function() {\r\n        return ACCORDION_ITEM_DATA_KEY\r\n    },\r\n    _itemClass: function() {\r\n        return ACCORDION_ITEM_CLASS\r\n    },\r\n    _itemContainer: function() {\r\n        return this._$container\r\n    },\r\n    _itemTitles: function() {\r\n        return this._itemElements().find(\".\" + ACCORDION_ITEM_TITLE_CLASS)\r\n    },\r\n    _itemContents: function() {\r\n        return this._itemElements().find(\".\" + ACCORDION_ITEM_BODY_CLASS)\r\n    },\r\n    _getItemData: function(target) {\r\n        return $(target).parent().data(this._itemDataKey()) || this.callBase.apply(this, arguments)\r\n    },\r\n    _executeItemRenderAction: function(itemData) {\r\n        if (itemData.type) {\r\n            return\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _itemSelectHandler: function(e) {\r\n        if ($(e.target).closest(this._itemContents()).length) {\r\n            return\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _afterItemElementDeleted: function($item, deletedActionArgs) {\r\n        this._deferredItems.splice(deletedActionArgs.itemIndex, 1);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _renderItemContent: function(args) {\r\n        var itemTitle = this.callBase(extend({}, args, {\r\n            contentClass: ACCORDION_ITEM_TITLE_CLASS,\r\n            templateProperty: \"titleTemplate\",\r\n            defaultTemplateName: this.option(\"itemTitleTemplate\")\r\n        }));\r\n        var deferred = new Deferred;\r\n        if (isDefined(this._deferredItems[args.index])) {\r\n            this._deferredItems[args.index] = deferred\r\n        } else {\r\n            this._deferredItems.push(deferred)\r\n        }\r\n        if (!this.option(\"deferRendering\") || this._getSelectedItemIndices().indexOf(args.index) >= 0) {\r\n            deferred.resolve()\r\n        }\r\n        deferred.done(this.callBase.bind(this, extend({}, args, {\r\n            contentClass: ACCORDION_ITEM_BODY_CLASS,\r\n            container: getPublicElement($(\"<div>\").appendTo($(itemTitle).parent()))\r\n        })))\r\n    },\r\n    _attachItemTitleClickAction: function() {\r\n        var eventName = eventUtils.addNamespace(clickEvent.name, this.NAME),\r\n            titleContainers = this._itemContainer().find(\" > .\" + ACCORDION_ITEM_CLASS + \" > .\" + ACCORDION_ITEM_TITLE_CLASS);\r\n        eventsEngine.off(titleContainers, eventName);\r\n        eventsEngine.on(titleContainers, eventName, this._itemTitleClickHandler.bind(this))\r\n    },\r\n    _itemTitleClickHandler: function(e) {\r\n        this._itemDXEventHandler(e, \"onItemTitleClick\")\r\n    },\r\n    _renderSelection: function(addedSelection, removedSelection) {\r\n        this._itemElements().addClass(ACCORDION_ITEM_CLOSED_CLASS);\r\n        this.setAria(\"hidden\", true, this._itemContents());\r\n        this._updateItems(addedSelection, removedSelection)\r\n    },\r\n    _updateSelection: function(addedSelection, removedSelection) {\r\n        this._updateItems(addedSelection, removedSelection);\r\n        this._updateItemHeightsWrapper(false)\r\n    },\r\n    _updateItems: function(addedSelection, removedSelection) {\r\n        var $items = this._itemElements(),\r\n            that = this;\r\n        iteratorUtils.each(addedSelection, function(_, index) {\r\n            that._deferredItems[index].resolve();\r\n            var $item = $items.eq(index).addClass(ACCORDION_ITEM_OPENED_CLASS).removeClass(ACCORDION_ITEM_CLOSED_CLASS);\r\n            that.setAria(\"hidden\", false, $item.find(\".\" + ACCORDION_ITEM_BODY_CLASS))\r\n        });\r\n        iteratorUtils.each(removedSelection, function(_, index) {\r\n            var $item = $items.eq(index).removeClass(ACCORDION_ITEM_OPENED_CLASS);\r\n            that.setAria(\"hidden\", true, $item.find(\".\" + ACCORDION_ITEM_BODY_CLASS))\r\n        })\r\n    },\r\n    _updateItemHeightsWrapper: function(skipAnimation) {\r\n        if (this.option(\"templatesRenderAsynchronously\")) {\r\n            this._animationTimer = setTimeout(function() {\r\n                this._updateItemHeights(skipAnimation)\r\n            }.bind(this))\r\n        } else {\r\n            this._updateItemHeights(skipAnimation)\r\n        }\r\n    },\r\n    _updateItemHeights: function(skipAnimation) {\r\n        var that = this,\r\n            deferredAnimate = that._deferredAnimate,\r\n            itemHeight = this._splitFreeSpace(this._calculateFreeSpace());\r\n        clearTimeout(this._animationTimer);\r\n        return when.apply($, [].slice.call(this._itemElements()).map(function(item) {\r\n            return that._updateItemHeight($(item), itemHeight, skipAnimation)\r\n        })).done(function() {\r\n            if (deferredAnimate) {\r\n                deferredAnimate.resolveWith(that)\r\n            }\r\n        })\r\n    },\r\n    _updateItemHeight: function($item, itemHeight, skipAnimation) {\r\n        var $title = $item.children(\".\" + ACCORDION_ITEM_TITLE_CLASS);\r\n        if (fx.isAnimating($item)) {\r\n            fx.stop($item)\r\n        }\r\n        var startItemHeight = $item.outerHeight(),\r\n            finalItemHeight = $item.hasClass(ACCORDION_ITEM_OPENED_CLASS) ? itemHeight + $title.outerHeight() || $item.height(\"auto\").outerHeight() : $title.outerHeight();\r\n        return this._animateItem($item, startItemHeight, finalItemHeight, skipAnimation, !!itemHeight)\r\n    },\r\n    _animateItem: function($element, startHeight, endHeight, skipAnimation, fixedHeight) {\r\n        var d;\r\n        if (skipAnimation || startHeight === endHeight) {\r\n            $element.css(\"height\", endHeight);\r\n            d = (new Deferred).resolve()\r\n        } else {\r\n            d = fx.animate($element, {\r\n                type: \"custom\",\r\n                from: {\r\n                    height: startHeight\r\n                },\r\n                to: {\r\n                    height: endHeight\r\n                },\r\n                duration: this.option(\"animationDuration\"),\r\n                easing: this.option(\"_animationEasing\")\r\n            })\r\n        }\r\n        return d.done(function() {\r\n            if ($element.hasClass(ACCORDION_ITEM_OPENED_CLASS) && !fixedHeight) {\r\n                $element.css(\"height\", \"\")\r\n            }\r\n            $element.not(\".\" + ACCORDION_ITEM_OPENED_CLASS).addClass(ACCORDION_ITEM_CLOSED_CLASS)\r\n        })\r\n    },\r\n    _splitFreeSpace: function(freeSpace) {\r\n        if (!freeSpace) {\r\n            return freeSpace\r\n        }\r\n        return freeSpace / this.option(\"selectedItems\").length\r\n    },\r\n    _calculateFreeSpace: function() {\r\n        var height = this.option(\"height\");\r\n        if (void 0 === height || \"auto\" === height) {\r\n            return\r\n        }\r\n        var $titles = this._itemTitles(),\r\n            itemsHeight = 0;\r\n        iteratorUtils.each($titles, function(_, title) {\r\n            itemsHeight += $(title).outerHeight()\r\n        });\r\n        return this.$element().height() - itemsHeight\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this._updateItemHeights(true)\r\n    },\r\n    _clean: function() {\r\n        clearTimeout(this._animationTimer);\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"animationDuration\":\r\n            case \"onItemTitleClick\":\r\n            case \"_animationEasing\":\r\n                break;\r\n            case \"collapsible\":\r\n                this.option(\"selectionRequired\", !this.option(\"collapsible\"));\r\n                break;\r\n            case \"itemTitleTemplate\":\r\n            case \"height\":\r\n            case \"deferRendering\":\r\n                this._invalidate();\r\n                break;\r\n            case \"multiple\":\r\n                this.option(\"selectionMode\", args.value ? \"multiple\" : \"single\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    expandItem: function(index) {\r\n        this._deferredAnimate = new Deferred;\r\n        this.selectItem(index);\r\n        return this._deferredAnimate.promise()\r\n    },\r\n    collapseItem: function(index) {\r\n        this._deferredAnimate = new Deferred;\r\n        this.unselectItem(index);\r\n        return this._deferredAnimate.promise()\r\n    },\r\n    updateDimensions: function() {\r\n        return this._updateItemHeights(false)\r\n    }\r\n});\r\nregisterComponent(\"dxAccordion\", Accordion);\r\nmodule.exports = Accordion;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/autocomplete.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    noop = require(\"../core/utils/common\").noop,\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    DropDownList = require(\"./drop_down_editor/ui.drop_down_list\"),\r\n    themes = require(\"./themes\"),\r\n    Deferred = require(\"../core/utils/deferred\").Deferred;\r\nvar AUTOCOMPLETE_CLASS = \"dx-autocomplete\",\r\n    AUTOCOMPLETE_POPUP_WRAPPER_CLASS = \"dx-autocomplete-popup-wrapper\";\r\nvar Autocomplete = DropDownList.inherit({\r\n    _supportedKeys: function() {\r\n        var item = this._list ? this._list.option(\"focusedElement\") : null,\r\n            parent = this.callBase();\r\n        item = item && $(item);\r\n        return extend({}, parent, {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (item && !item.prev().length) {\r\n                    this._clearFocusedItem();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (item && !item.next().length) {\r\n                    this._clearFocusedItem();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function() {\r\n                if (!item) {\r\n                    this.close()\r\n                }\r\n                parent.enter.apply(this, arguments);\r\n                return this.option(\"opened\")\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            minSearchLength: 1,\r\n            maxItemCount: 10,\r\n            noDataText: \"\",\r\n            showDropDownButton: false,\r\n            searchEnabled: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        h: -16,\r\n                        v: -8\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(AUTOCOMPLETE_CLASS);\r\n        this.setAria(\"autocomplete\", \"inline\")\r\n    },\r\n    _loadValue: function() {\r\n        return (new Deferred).resolve(this.option(\"value\"))\r\n    },\r\n    _displayGetterExpr: function() {\r\n        return this.option(\"valueExpr\")\r\n    },\r\n    _setSelectedItem: function(item) {\r\n        this.callBase(item);\r\n        this.option(\"displayValue\", this.option(\"value\"))\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            closeOnOutsideClick: function(e) {\r\n                return !$(e.target).closest(this.$element()).length\r\n            }.bind(this)\r\n        })\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this._setPopupOption(\"width\")\r\n    },\r\n    _popupWrapperClass: function() {\r\n        return this.callBase() + \" \" + AUTOCOMPLETE_POPUP_WRAPPER_CLASS\r\n    },\r\n    _listConfig: function() {\r\n        return extend(this.callBase(), {\r\n            pageLoadMode: \"none\",\r\n            indicateLoading: false\r\n        })\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        var value = this._displayGetter(e.itemData);\r\n        this.option(\"value\", value);\r\n        this.close()\r\n    },\r\n    _setListDataSource: function() {\r\n        if (!this._list) {\r\n            return\r\n        }\r\n        this._list.option(\"selectedItems\", []);\r\n        this.callBase()\r\n    },\r\n    _refreshSelected: noop,\r\n    _searchCanceled: function() {\r\n        this.callBase();\r\n        this.close()\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return {\r\n            paginate: true\r\n        }\r\n    },\r\n    _searchDataSource: function() {\r\n        this._dataSource.pageSize(this.option(\"maxItemCount\"));\r\n        this.callBase();\r\n        this._clearFocusedItem()\r\n    },\r\n    _clearFocusedItem: function() {\r\n        if (this._list) {\r\n            this._list.option(\"focusedElement\", null);\r\n            this._list.option(\"selectedIndex\", -1)\r\n        }\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input keyup\"\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val() || null;\r\n        return this.callBase(e, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"maxItemCount\":\r\n                this._searchDataSource();\r\n                break;\r\n            case \"valueExpr\":\r\n                this._compileDisplayGetter();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this.close()\r\n    }\r\n});\r\nregisterComponent(\"dxAutocomplete\", Autocomplete);\r\nmodule.exports = Autocomplete;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/lookup.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    window = require(\"../core/utils/window\").getWindow(),\r\n    support = require(\"../core/utils/support\"),\r\n    commonUtils = require(\"../core/utils/common\"),\r\n    domUtils = require(\"../core/utils/dom\"),\r\n    each = require(\"../core/utils/iterator\").each,\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    inkRipple = require(\"./widget/utils.ink_ripple\"),\r\n    messageLocalization = require(\"../localization/message\"),\r\n    devices = require(\"../core/devices\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    DropDownList = require(\"./drop_down_editor/ui.drop_down_list\"),\r\n    themes = require(\"./themes\"),\r\n    clickEvent = require(\"../events/click\"),\r\n    Popover = require(\"./popover\"),\r\n    TextBox = require(\"./text_box\"),\r\n    ChildDefaultTemplate = require(\"./widget/child_default_template\"),\r\n    translator = require(\"../animation/translator\");\r\nvar LOOKUP_CLASS = \"dx-lookup\",\r\n    LOOKUP_SEARCH_CLASS = \"dx-lookup-search\",\r\n    LOOKUP_SEARCH_WRAPPER_CLASS = \"dx-lookup-search-wrapper\",\r\n    LOOKUP_FIELD_CLASS = \"dx-lookup-field\",\r\n    LOOKUP_ARROW_CLASS = \"dx-lookup-arrow\",\r\n    LOOKUP_FIELD_WRAPPER_CLASS = \"dx-lookup-field-wrapper\",\r\n    LOOKUP_POPUP_CLASS = \"dx-lookup-popup\",\r\n    LOOKUP_POPUP_WRAPPER_CLASS = \"dx-lookup-popup-wrapper\",\r\n    LOOKUP_POPUP_SEARCH_CLASS = \"dx-lookup-popup-search\",\r\n    LOOKUP_POPOVER_MODE = \"dx-lookup-popover-mode\",\r\n    LOOKUP_EMPTY_CLASS = \"dx-lookup-empty\",\r\n    LOOKUP_POPUP_VALIDATION_MESSAGE = \"dx-lookup-validation-message\",\r\n    LOOKUP_POPUP_INVALID_CLASS = \"dx-lookup-invalid\";\r\nvar POPUP_OPTION_MAP = {\r\n    popupWidth: \"width\",\r\n    popupHeight: \"height\"\r\n};\r\nvar LIST_ITEM_SELECTED_CLASS = \"dx-list-item-selected\";\r\nvar MATERIAL_LOOKUP_LIST_ITEMS_COUNT = 4;\r\nvar MATERIAL_LOOKUP_LIST_PADDING = 8;\r\nvar Lookup = DropDownList.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            space: function(e) {\r\n                e.preventDefault();\r\n                this._validatedOpening()\r\n            },\r\n            enter: function() {\r\n                this._validatedOpening()\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            title: \"\",\r\n            titleTemplate: \"title\",\r\n            onTitleRendered: null,\r\n            placeholder: messageLocalization.format(\"Select\"),\r\n            searchPlaceholder: messageLocalization.format(\"Search\"),\r\n            searchEnabled: true,\r\n            cleanSearchOnOpening: true,\r\n            fullScreen: false,\r\n            showCancelButton: true,\r\n            showClearButton: false,\r\n            clearButtonText: messageLocalization.format(\"Clear\"),\r\n            applyButtonText: messageLocalization.format(\"Done\"),\r\n            popupWidth: function() {\r\n                return .8 * $(window).width()\r\n            },\r\n            popupHeight: function() {\r\n                return .8 * $(window).height()\r\n            },\r\n            shading: true,\r\n            closeOnOutsideClick: false,\r\n            position: void 0,\r\n            animation: {},\r\n            pullRefreshEnabled: false,\r\n            useNativeScrolling: true,\r\n            pullingDownText: messageLocalization.format(\"dxList-pullingDownText\"),\r\n            pulledDownText: messageLocalization.format(\"dxList-pulledDownText\"),\r\n            refreshingText: messageLocalization.format(\"dxList-refreshingText\"),\r\n            pageLoadingText: messageLocalization.format(\"dxList-pageLoadingText\"),\r\n            onScroll: null,\r\n            onPullRefresh: null,\r\n            onPageLoading: null,\r\n            pageLoadMode: \"scrollBottom\",\r\n            nextButtonText: messageLocalization.format(\"dxList-nextButtonText\"),\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            usePopover: false,\r\n            showDropDownButton: false,\r\n            showPopupTitle: true,\r\n            focusStateEnabled: false,\r\n            _scrollToSelectedItemEnabled: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = themes.current();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return !support.nativeScrolling\r\n            },\r\n            options: {\r\n                useNativeScrolling: false\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return !devices.isSimulator() && \"generic\" === devices.real().platform && \"generic\" === _device.platform\r\n            },\r\n            options: {\r\n                usePopover: true,\r\n                popupHeight: \"auto\"\r\n            }\r\n        }, {\r\n            device: function(_device2) {\r\n                return \"win\" === _device2.platform && _device2.phone && _device2.version && 8 === _device2.version[0]\r\n            },\r\n            options: {\r\n                showCancelButton: false,\r\n                fullScreen: true\r\n            }\r\n        }, {\r\n            device: function(_device3) {\r\n                return \"win\" === _device3.platform && !_device3.phone && _device3.version && 8 === _device3.version[0]\r\n            },\r\n            options: {\r\n                popupWidth: function() {\r\n                    return $(window).width()\r\n                }\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"ios\",\r\n                phone: true\r\n            },\r\n            options: {\r\n                fullScreen: true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"ios\",\r\n                tablet: true\r\n            },\r\n            options: {\r\n                popupWidth: function() {\r\n                    return .4 * Math.min($(window).width(), $(window).height())\r\n                },\r\n                popupHeight: \"auto\",\r\n                usePopover: true,\r\n                useInkRipple: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isAndroid5(themeName)\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return themes.isMaterial(themeName)\r\n            },\r\n            options: {\r\n                usePopover: false,\r\n                closeOnOutsideClick: true,\r\n                popupWidth: function() {\r\n                    return $(this.element()).outerWidth()\r\n                }.bind(this),\r\n                popupHeight: function() {\r\n                    return this._getPopupHeight(MATERIAL_LOOKUP_LIST_ITEMS_COUNT)\r\n                }.bind(this),\r\n                searchEnabled: false,\r\n                showCancelButton: false,\r\n                showPopupTitle: false,\r\n                position: {\r\n                    my: \"left top\",\r\n                    at: \"left top\",\r\n                    of: this.element()\r\n                },\r\n                _scrollToSelectedItemEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.group = new ChildDefaultTemplate(\"group\", this);\r\n        this._defaultTemplates.title = new ChildDefaultTemplate(\"title\", this)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(LOOKUP_CLASS).toggleClass(LOOKUP_POPOVER_MODE, this.option(\"usePopover\"));\r\n        this._renderSubmitElement();\r\n        this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + LOOKUP_FIELD_WRAPPER_CLASS)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element())\r\n    },\r\n    _dataSourceOptions: function() {\r\n        return extend(this.callBase(), {\r\n            paginate: true\r\n        })\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _fireContentReadyAction: commonUtils.noop,\r\n    _popupWrapperClass: function() {\r\n        return \"\"\r\n    },\r\n    _renderInput: function() {\r\n        var fieldClickAction = this._createAction(function() {\r\n            this._toggleOpenState()\r\n        }.bind(this));\r\n        this._$field = $(\"<div>\").addClass(LOOKUP_FIELD_CLASS);\r\n        eventsEngine.on(this._$field, eventUtils.addNamespace(clickEvent.name, this.NAME), function(e) {\r\n            fieldClickAction({\r\n                event: e\r\n            })\r\n        });\r\n        var $arrow = $(\"<div>\").addClass(LOOKUP_ARROW_CLASS);\r\n        this._$fieldWrapper = $(\"<div>\").addClass(LOOKUP_FIELD_WRAPPER_CLASS).append(this._$field).append($arrow).appendTo(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleOpenState: function() {\r\n        this.callBase();\r\n        if (!this.option(\"fullScreen\") && this.option(\"_scrollToSelectedItemEnabled\")) {\r\n            this._setPopupPosition()\r\n        }\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: this._inputWrapper(),\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (fieldTemplate && this.option(\"fieldTemplate\")) {\r\n            this._renderFieldTemplate(fieldTemplate);\r\n            return\r\n        }\r\n        this._$field.text(this.option(\"displayValue\") || this.option(\"placeholder\"));\r\n        this.$element().toggleClass(LOOKUP_EMPTY_CLASS, !this.option(\"selectedItem\"))\r\n    },\r\n    _renderFieldTemplate: function(template) {\r\n        this._$field.empty();\r\n        var data = this._fieldRenderData();\r\n        template.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement(this._$field)\r\n        })\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"selectedItem\")\r\n    },\r\n    _popupShowingHandler: function() {\r\n        var validationError;\r\n        if (this._$popupValidationMessage) {\r\n            validationError = this.option(\"validationError\");\r\n            if (validationError && validationError.message) {\r\n                this._$popupValidationMessage.text(validationError.message);\r\n                this._popup.$content().addClass(LOOKUP_POPUP_INVALID_CLASS)\r\n            } else {\r\n                this._popup.$content().removeClass(LOOKUP_POPUP_INVALID_CLASS)\r\n            }\r\n        }\r\n        this.callBase.apply(this, arguments);\r\n        if (this.option(\"cleanSearchOnOpening\")) {\r\n            if (this.option(\"searchEnabled\") && this._searchBox.option(\"value\")) {\r\n                this._searchBox.option(\"value\", \"\");\r\n                this._searchCanceled()\r\n            }\r\n            this._list && this._list.option(\"focusedElement\", null)\r\n        }\r\n        if (this.option(\"fullScreen\") && this.option(\"_scrollToSelectedItemEnabled\")) {\r\n            this._popup.option(\"position\").of = $(window)\r\n        }\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        var selectedIndex = this._list.option(\"selectedIndex\"),\r\n            listItems = this._list.option(\"items\"),\r\n            itemsCount = listItems.length;\r\n        if (0 !== itemsCount) {\r\n            if (this._list.option(\"grouped\")) {\r\n                this._list.scrollToItem({\r\n                    group: itemsCount - 1,\r\n                    item: listItems[itemsCount - 1].items.length - 1\r\n                })\r\n            } else {\r\n                this._list.scrollToItem(itemsCount - 1)\r\n            }\r\n            this._list.scrollToItem(selectedIndex)\r\n        }\r\n    },\r\n    _setPopupPosition: function() {\r\n        var selectedIndex = this._list.option(\"selectedIndex\");\r\n        if (selectedIndex === -1) {\r\n            return\r\n        }\r\n        var selectedListItem = $(this._list.element()).find(\".\" + LIST_ITEM_SELECTED_CLASS),\r\n            differenceOfHeights = (selectedListItem.height() - $(this.element()).height()) / 2,\r\n            popupContentParent = $(this._popup.content()).parent(),\r\n            differenceOfOffsets = selectedListItem.offset().top - popupContentParent.offset().top,\r\n            lookupTop = $(this.element()).offset().top,\r\n            popupOffsetY = differenceOfHeights;\r\n        if (lookupTop > differenceOfOffsets) {\r\n            popupOffsetY += differenceOfOffsets\r\n        } else {\r\n            this._scrollToSelectedItem()\r\n        }\r\n        var position = translator.locate(popupContentParent);\r\n        translator.move(popupContentParent, {\r\n            left: 0,\r\n            top: position.top - popupOffsetY\r\n        })\r\n    },\r\n    _getPopupHeight: function(listItemsCount) {\r\n        return this._list && this._list.itemElements() ? this._list.itemElements().height() * listItemsCount + 2 * MATERIAL_LOOKUP_LIST_PADDING : \"auto\"\r\n    },\r\n    _renderPopup: function() {\r\n        if (this.option(\"usePopover\") && !this.option(\"fullScreen\")) {\r\n            this._renderPopover()\r\n        } else {\r\n            this.callBase()\r\n        }\r\n        this._$popup.addClass(LOOKUP_POPUP_CLASS);\r\n        this._popup._wrapper().addClass(LOOKUP_POPUP_WRAPPER_CLASS)\r\n    },\r\n    _popupOptionMap: function(optionName) {\r\n        return POPUP_OPTION_MAP[optionName] || optionName\r\n    },\r\n    _renderPopover: function() {\r\n        this._popup = this._createComponent(this._$popup, Popover, extend(this._popupConfig(), {\r\n            showEvent: null,\r\n            hideEvent: null,\r\n            target: this.$element(),\r\n            fullScreen: false,\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            width: this._isInitialOptionValue(\"popupWidth\") ? function() {\r\n                return this.$element().outerWidth()\r\n            }.bind(this) : this._popupConfig().width\r\n        }));\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler()\r\n    },\r\n    _popupHidingHandler: function() {\r\n        this.callBase();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        if (this.option(\"_scrollToSelectedItemEnabled\")) {\r\n            translator.resetPosition($(this._popup.content()).parent())\r\n        }\r\n    },\r\n    _preventFocusOnPopup: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        var result = extend(this.callBase(), {\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            title: this.option(\"title\"),\r\n            titleTemplate: this._getTemplateByOption(\"titleTemplate\"),\r\n            onTitleRendered: this.option(\"onTitleRendered\"),\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            fullScreen: this.option(\"fullScreen\"),\r\n            shading: this.option(\"shading\"),\r\n            closeOnTargetScroll: false,\r\n            closeOnOutsideClick: this.option(\"closeOnOutsideClick\"),\r\n            onPositioned: null\r\n        });\r\n        delete result.animation;\r\n        delete result.position;\r\n        result.maxHeight = function() {\r\n            return $(window).height()\r\n        };\r\n        each([\"position\", \"animation\", \"popupWidth\", \"popupHeight\"], function(_, optionName) {\r\n            if (void 0 !== this.option(optionName)) {\r\n                result[this._popupOptionMap(optionName)] = this.option(optionName)\r\n            }\r\n        }.bind(this));\r\n        return result\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var buttonsConfig = \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : [];\r\n        var cancelButton = this._getCancelButtonConfig();\r\n        if (cancelButton) {\r\n            buttonsConfig.push(cancelButton)\r\n        }\r\n        var clearButton = this._getClearButtonConfig();\r\n        if (clearButton) {\r\n            buttonsConfig.push(clearButton)\r\n        }\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        return [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\")\r\n            }\r\n        }]\r\n    },\r\n    _getCancelButtonConfig: function() {\r\n        return this.option(\"showCancelButton\") ? {\r\n            shortcut: \"cancel\",\r\n            onClick: this._cancelButtonHandler.bind(this),\r\n            options: {\r\n                text: this.option(\"cancelButtonText\")\r\n            }\r\n        } : null\r\n    },\r\n    _getClearButtonConfig: function() {\r\n        return this.option(\"showClearButton\") ? {\r\n            shortcut: \"clear\",\r\n            onClick: this._resetValue.bind(this),\r\n            options: {\r\n                text: this.option(\"clearButtonText\")\r\n            }\r\n        } : null\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.option(\"value\", this._valueGetter(this._currentSelectedItem()));\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._refreshSelected();\r\n        this.callBase()\r\n    },\r\n    _refreshPopupVisibility: function() {\r\n        if (this.option(\"opened\")) {\r\n            this._updatePopupHeight()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"usePopover\") && !this.option(\"popupWidth\")) {\r\n            this.option(\"popupWidth\", this.$element().width())\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updatePopupDimensions: function() {\r\n        this._updatePopupHeight()\r\n    },\r\n    _input: function() {\r\n        return this._$searchBox || this.callBase()\r\n    },\r\n    _renderPopupContent: function() {\r\n        if (\"dxPopup\" === this._popup.NAME) {\r\n            this._$popupValidationMessage = $(\"<div>\").addClass(LOOKUP_POPUP_VALIDATION_MESSAGE).appendTo(this._popup.$content())\r\n        }\r\n        this.callBase();\r\n        this._renderSearch();\r\n        this._attachSearchChildProcessor()\r\n    },\r\n    _attachSearchChildProcessor: function() {\r\n        if (this.option(\"searchEnabled\") && this._searchBox) {\r\n            this._listKeyboardProcessor = this._searchBox._keyboardProcessor.attachChildProcessor();\r\n            this._setListOption(\"_keyboardProcessor\", this._listKeyboardProcessor)\r\n        } else {\r\n            this._setListOption(\"_keyboardProcessor\", void 0)\r\n        }\r\n    },\r\n    _renderSearch: function() {\r\n        this._$searchWrapper && this._$searchWrapper.remove();\r\n        delete this._$searchWrapper;\r\n        this._$searchBox && this._$searchBox.remove();\r\n        delete this._$searchBox;\r\n        delete this._searchBox;\r\n        if (this.option(\"searchEnabled\")) {\r\n            var $searchWrapper = this._$searchWrapper = $(\"<div>\").addClass(LOOKUP_SEARCH_WRAPPER_CLASS);\r\n            var $searchBox = this._$searchBox = $(\"<div>\").addClass(LOOKUP_SEARCH_CLASS).appendTo($searchWrapper);\r\n            var currentDevice = devices.current(),\r\n                searchMode = currentDevice.android && currentDevice.version[0] >= 5 ? \"text\" : \"search\";\r\n            this._searchBox = this._createComponent($searchBox, TextBox, {\r\n                mode: searchMode,\r\n                showClearButton: true,\r\n                valueChangeEvent: this.option(\"valueChangeEvent\"),\r\n                onValueChanged: this._searchHandler.bind(this)\r\n            });\r\n            this._registerSearchKeyHandlers();\r\n            $searchWrapper.insertBefore(this._$list)\r\n        }\r\n        this._renderSearchVisibility();\r\n        this._setSearchPlaceholder()\r\n    },\r\n    _selectListItemHandler: function(e) {\r\n        var $itemElement = $(this._list.option(\"focusedElement\"));\r\n        if (!$itemElement.length) {\r\n            return\r\n        }\r\n        e.preventDefault();\r\n        this._selectListItem(e.itemData, $itemElement)\r\n    },\r\n    _registerSearchKeyHandlers: function() {\r\n        this._searchBox.registerKeyHandler(\"escape\", this.close.bind(this));\r\n        this._searchBox.registerKeyHandler(\"enter\", this._selectListItemHandler.bind(this));\r\n        this._searchBox.registerKeyHandler(\"space\", this._selectListItemHandler.bind(this));\r\n        this._searchBox.registerKeyHandler(\"end\", commonUtils.noop);\r\n        this._searchBox.registerKeyHandler(\"home\", commonUtils.noop)\r\n    },\r\n    _renderSearchVisibility: function() {\r\n        if (this._popup) {\r\n            this._popup._wrapper().toggleClass(LOOKUP_POPUP_SEARCH_CLASS, this.option(\"searchEnabled\"))\r\n        }\r\n    },\r\n    _setSearchPlaceholder: function() {\r\n        if (!this._$searchBox) {\r\n            return\r\n        }\r\n        var minSearchLength = this.option(\"minSearchLength\");\r\n        var placeholder = this.option(\"searchPlaceholder\");\r\n        if (minSearchLength && placeholder === messageLocalization.format(\"Search\")) {\r\n            placeholder = messageLocalization.getFormatter(\"dxLookup-searchPlaceholder\")(minSearchLength)\r\n        }\r\n        this._searchBox.option(\"placeholder\", placeholder)\r\n    },\r\n    _setAriaTargetForList: commonUtils.noop,\r\n    _renderList: function() {\r\n        this.callBase();\r\n        this._list.registerKeyHandler(\"escape\", function() {\r\n            this.close()\r\n        }.bind(this))\r\n    },\r\n    _listConfig: function() {\r\n        return extend(this.callBase(), {\r\n            tabIndex: 0,\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this._getTemplateByOption(\"groupTemplate\"),\r\n            pullRefreshEnabled: this.option(\"pullRefreshEnabled\"),\r\n            useNativeScrolling: this.option(\"useNativeScrolling\"),\r\n            pullingDownText: this.option(\"pullingDownText\"),\r\n            pulledDownText: this.option(\"pulledDownText\"),\r\n            refreshingText: this.option(\"refreshingText\"),\r\n            pageLoadingText: this.option(\"pageLoadingText\"),\r\n            onScroll: this.option(\"onScroll\"),\r\n            onPullRefresh: this.option(\"onPullRefresh\"),\r\n            onPageLoading: this.option(\"onPageLoading\"),\r\n            pageLoadMode: this.option(\"pageLoadMode\"),\r\n            nextButtonText: this.option(\"nextButtonText\"),\r\n            _keyboardProcessor: this._listKeyboardProcessor,\r\n            onFocusIn: this._onFocusInHandler.bind(this),\r\n            onSelectionChanged: this._getSelectionChangedHandler()\r\n        })\r\n    },\r\n    _getSelectionChangedHandler: function() {\r\n        return this.option(\"showSelectionControls\") ? this._selectionChangeHandler.bind(this) : commonUtils.noop\r\n    },\r\n    _onFocusInHandler: function() {\r\n        this._setListOption(\"_keyboardProcessor\", void 0)\r\n    },\r\n    _listContentReadyHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._refreshSelected()\r\n    },\r\n    _setFocusPolicy: function() {\r\n        if (!this.option(\"focusStateEnabled\")) {\r\n            return\r\n        }\r\n        if (this.option(\"searchEnabled\")) {\r\n            this._searchBox.focus()\r\n        } else {\r\n            eventsEngine.trigger(this._$list, \"focus\")\r\n        }\r\n    },\r\n    _attachChildKeyboardEvents: commonUtils.noop,\r\n    _focusTarget: function() {\r\n        return this._$field\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._$field\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        this._selectListItem(e.itemData, e.event.currentTarget)\r\n    },\r\n    _selectListItem: function(itemData, target) {\r\n        this._list.selectItem(target);\r\n        if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n            this._applyButtonHandler()\r\n        }\r\n    },\r\n    _currentSelectedItem: function() {\r\n        return this.option(\"grouped\") ? this._list.option(\"selectedItems[0]\").items[0] : this._list.option(\"selectedItems[0]\")\r\n    },\r\n    _resetValue: function(e) {\r\n        this._saveValueChangeEvent(e.event);\r\n        this.option(\"value\", null);\r\n        this.option(\"opened\", false)\r\n    },\r\n    _searchValue: function() {\r\n        return this.option(\"searchEnabled\") && this._searchBox ? this._searchBox.option(\"value\") : \"\"\r\n    },\r\n    _renderInputValue: function() {\r\n        return this.callBase().always(function() {\r\n            this._renderField();\r\n            this._refreshSelected();\r\n            this._setSubmitValue()\r\n        }.bind(this))\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.option(\"value\"),\r\n            submitValue = \"this\" === this.option(\"valueExpr\") ? this._displayGetter(value) : value;\r\n        this._$submitElement.val(submitValue)\r\n    },\r\n    _renderPlaceholder: function() {\r\n        if (0 === this.$element().find(\"input\").length) {\r\n            return\r\n        }\r\n        this.callBase()\r\n    },\r\n    _clean: function() {\r\n        this._$fieldWrapper.remove();\r\n        this._$searchBox = null;\r\n        delete this._inkRipple;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        var value = args.value;\r\n        switch (name) {\r\n            case \"searchEnabled\":\r\n                this._popup && this._renderSearch();\r\n                this._attachSearchChildProcessor();\r\n                break;\r\n            case \"searchPlaceholder\":\r\n                this._setSearchPlaceholder();\r\n                break;\r\n            case \"minSearchLength\":\r\n                this._setSearchPlaceholder();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"title\":\r\n            case \"titleTemplate\":\r\n            case \"onTitleRendered\":\r\n            case \"shading\":\r\n            case \"animation\":\r\n            case \"position\":\r\n            case \"closeOnOutsideClick\":\r\n                this._setPopupOption(name);\r\n                break;\r\n            case \"fullScreen\":\r\n            case \"usePopover\":\r\n            case \"placeholder\":\r\n                this._invalidate();\r\n                break;\r\n            case \"clearButtonText\":\r\n            case \"showClearButton\":\r\n            case \"showCancelButton\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"popupWidth\":\r\n                this._setPopupOption(\"popupWidth\", \"auto\" === value ? this.initialOption(\"popupWidth\") : value);\r\n                break;\r\n            case \"popupHeight\":\r\n                this._setPopupOption(\"popupHeight\", \"auto\" === value ? this.initialOption(\"popupHeight\") : value);\r\n                break;\r\n            case \"pullRefreshEnabled\":\r\n            case \"useNativeScrolling\":\r\n            case \"pullingDownText\":\r\n            case \"pulledDownText\":\r\n            case \"refreshingText\":\r\n            case \"pageLoadingText\":\r\n            case \"onScroll\":\r\n            case \"onPullRefresh\":\r\n            case \"onPageLoading\":\r\n            case \"nextButtonText\":\r\n            case \"grouped\":\r\n            case \"groupTemplate\":\r\n                this._setListOption(name);\r\n                break;\r\n            case \"pageLoadMode\":\r\n                this._setListOption(\"pageLoadMode\", this.option(\"pageLoadMode\"));\r\n                break;\r\n            case \"cleanSearchOnOpening\":\r\n            case \"_scrollToSelectedItemEnabled\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    focus: function() {\r\n        this.option(\"opened\") ? this._setFocusPolicy() : eventsEngine.trigger(this._focusTarget(), \"focus\")\r\n    },\r\n    field: function() {\r\n        return this._$field\r\n    }\r\n});\r\nregisterComponent(\"dxLookup\", Lookup);\r\nmodule.exports = Lookup;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/progress_bar.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    TrackBar = require(\"./track_bar\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    isFunction = require(\"../core/utils/type\").isFunction,\r\n    registerComponent = require(\"../core/component_registrator\");\r\nvar PROGRESSBAR_CLASS = \"dx-progressbar\",\r\n    PROGRESSBAR_CONTAINER_CLASS = \"dx-progressbar-container\",\r\n    PROGRESSBAR_RANGE_CONTAINER_CLASS = \"dx-progressbar-range-container\",\r\n    PROGRESSBAR_RANGE_CLASS = \"dx-progressbar-range\",\r\n    PROGRESSBAR_WRAPPER_CLASS = \"dx-progressbar-wrapper\",\r\n    PROGRESSBAR_STATUS_CLASS = \"dx-progressbar-status\",\r\n    PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER = \"dx-progressbar-animating-container\",\r\n    PROGRESSBAR_INDETERMINATE_SEGMENT = \"dx-progressbar-animating-segment\";\r\nvar ProgressBar = TrackBar.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            statusFormat: function(ratio) {\r\n                return \"Progress: \" + Math.round(100 * ratio) + \"%\"\r\n            },\r\n            showStatus: true,\r\n            onComplete: null,\r\n            activeStateEnabled: false,\r\n            statusPosition: \"bottom left\",\r\n            _animatingSegmentCount: 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"win\"\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 5\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"android\" === _device.platform\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 2\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderStatus();\r\n        this._createCompleteAction();\r\n        this.callBase();\r\n        this.$element().addClass(PROGRESSBAR_CLASS);\r\n        this._$wrapper.addClass(PROGRESSBAR_WRAPPER_CLASS);\r\n        this._$bar.addClass(PROGRESSBAR_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"progressbar\");\r\n        $(\"<div>\").addClass(PROGRESSBAR_RANGE_CONTAINER_CLASS).appendTo(this._$wrapper).append(this._$bar);\r\n        this._$range.addClass(PROGRESSBAR_RANGE_CLASS);\r\n        this._toggleStatus(this.option(\"showStatus\"))\r\n    },\r\n    _createCompleteAction: function() {\r\n        this._completeAction = this._createActionByOption(\"onComplete\")\r\n    },\r\n    _renderStatus: function() {\r\n        this._$status = $(\"<div>\").addClass(PROGRESSBAR_STATUS_CLASS)\r\n    },\r\n    _renderIndeterminateState: function() {\r\n        this._$segmentContainer = $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER);\r\n        var segments = this.option(\"_animatingSegmentCount\");\r\n        for (var i = 0; i < segments; i++) {\r\n            $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT).addClass(PROGRESSBAR_INDETERMINATE_SEGMENT + \"-\" + (i + 1)).appendTo(this._$segmentContainer)\r\n        }\r\n        this._$segmentContainer.appendTo(this._$wrapper)\r\n    },\r\n    _toggleStatus: function(value) {\r\n        var splitPosition = this.option(\"statusPosition\").split(\" \");\r\n        if (value) {\r\n            if (\"top\" === splitPosition[0] || \"left\" === splitPosition[0]) {\r\n                this._$status.prependTo(this._$wrapper)\r\n            } else {\r\n                this._$status.appendTo(this._$wrapper)\r\n            }\r\n        } else {\r\n            this._$status.detach()\r\n        }\r\n        this._togglePositionClass()\r\n    },\r\n    _togglePositionClass: function() {\r\n        var position = this.option(\"statusPosition\"),\r\n            splitPosition = position.split(\" \");\r\n        this._$wrapper.removeClass(\"dx-position-top-left dx-position-top-right dx-position-bottom-left dx-position-bottom-right dx-position-left dx-position-right\");\r\n        var positionClass = \"dx-position-\" + splitPosition[0];\r\n        if (splitPosition[1]) {\r\n            positionClass += \"-\" + splitPosition[1]\r\n        }\r\n        this._$wrapper.addClass(positionClass)\r\n    },\r\n    _toggleIndeterminateState: function(value) {\r\n        if (value) {\r\n            this._renderIndeterminateState();\r\n            this._$bar.toggle(false)\r\n        } else {\r\n            this._$bar.toggle(true);\r\n            this._$segmentContainer.remove();\r\n            delete this._$segmentContainer\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var val = this.option(\"value\"),\r\n            max = this.option(\"max\");\r\n        if (!val && 0 !== val) {\r\n            this._toggleIndeterminateState(true);\r\n            return\r\n        }\r\n        if (this._$segmentContainer) {\r\n            this._toggleIndeterminateState(false)\r\n        }\r\n        if (val === max) {\r\n            this._completeAction()\r\n        }\r\n        this.callBase();\r\n        this._setStatus()\r\n    },\r\n    _setStatus: function() {\r\n        var format = this.option(\"statusFormat\");\r\n        if (isFunction(format)) {\r\n            format = format.bind(this)\r\n        } else {\r\n            format = function(value) {\r\n                return value\r\n            }\r\n        }\r\n        var statusText = format(this._currentRatio, this.option(\"value\"));\r\n        this._$status.text(statusText)\r\n    },\r\n    _dispose: function() {\r\n        this._$status.remove();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"statusFormat\":\r\n                this._setStatus();\r\n                break;\r\n            case \"showStatus\":\r\n                this._toggleStatus(args.value);\r\n                break;\r\n            case \"statusPosition\":\r\n                this._toggleStatus(this.option(\"showStatus\"));\r\n                break;\r\n            case \"onComplete\":\r\n                this._createCompleteAction();\r\n                break;\r\n            case \"_animatingSegmentCount\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxProgressBar\", ProgressBar);\r\nmodule.exports = ProgressBar;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/text_area.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    noop = require(\"../core/utils/common\").noop,\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    eventUtils = require(\"../events/utils\"),\r\n    pointerEvents = require(\"../events/pointer\"),\r\n    TextBox = require(\"./text_box\");\r\nvar TEXTAREA_CLASS = \"dx-textarea\",\r\n    TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TextArea = TextBox.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            spellcheck: true,\r\n            minHeight: void 0,\r\n            maxHeight: void 0,\r\n            autoResizeEnabled: false\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTAREA_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"multiline\", \"true\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._updateInputHeight();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderScrollHandler()\r\n    },\r\n    _createInput: function() {\r\n        var $input = $(\"<textarea>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS)\r\n    },\r\n    _renderScrollHandler: function() {\r\n        var $input = this._input(),\r\n            eventY = 0;\r\n        eventsEngine.on($input, eventUtils.addNamespace(pointerEvents.down, this.NAME), function(e) {\r\n            eventY = eventUtils.eventData(e).y\r\n        });\r\n        eventsEngine.on($input, eventUtils.addNamespace(pointerEvents.move, this.NAME), function(e) {\r\n            var scrollTopPos = $input.scrollTop(),\r\n                scrollBottomPos = $input.prop(\"scrollHeight\") - $input.prop(\"clientHeight\") - scrollTopPos;\r\n            if (0 === scrollTopPos && 0 === scrollBottomPos) {\r\n                return\r\n            }\r\n            var currentEventY = eventUtils.eventData(e).y;\r\n            var isScrollFromTop = 0 === scrollTopPos && eventY >= currentEventY,\r\n                isScrollFromBottom = 0 === scrollBottomPos && eventY <= currentEventY,\r\n                isScrollFromMiddle = scrollTopPos > 0 && scrollBottomPos > 0;\r\n            if (isScrollFromTop || isScrollFromBottom || isScrollFromMiddle) {\r\n                e.isScrollingEvent = true;\r\n                e.stopPropagation()\r\n            }\r\n            eventY = currentEventY\r\n        })\r\n    },\r\n    _renderDimensions: function() {\r\n        var $element = this.$element();\r\n        var element = $element.get(0);\r\n        var width = this._getOptionValue(\"width\", element);\r\n        var height = this._getOptionValue(\"height\", element);\r\n        var minHeight = this.option(\"minHeight\");\r\n        var maxHeight = this.option(\"maxHeight\");\r\n        $element.css({\r\n            minHeight: void 0 !== minHeight ? minHeight : \"\",\r\n            maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _resetDimensions: function() {\r\n        this.$element().css({\r\n            height: \"\",\r\n            minHeight: \"\",\r\n            maxHeight: \"\"\r\n        })\r\n    },\r\n    _renderEvents: function() {\r\n        if (this.option(\"autoResizeEnabled\")) {\r\n            eventsEngine.on(this._input(), eventUtils.addNamespace(\"input paste\", this.NAME), this._updateInputHeight.bind(this))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _refreshEvents: function() {\r\n        eventsEngine.off(this._input(), eventUtils.addNamespace(\"input paste\", this.NAME));\r\n        this.callBase()\r\n    },\r\n    _updateInputHeight: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"autoResizeEnabled\") || void 0 !== this.option(\"height\")) {\r\n            $input.css(\"height\", \"\");\r\n            return\r\n        }\r\n        this._resetDimensions();\r\n        $input.css(\"height\", 0);\r\n        var heightDifference = this._$element.outerHeight() - $input.outerHeight();\r\n        this._renderDimensions();\r\n        var minHeight = this.option(\"minHeight\"),\r\n            maxHeight = this.option(\"maxHeight\"),\r\n            inputHeight = $input[0].scrollHeight;\r\n        if (void 0 !== minHeight) {\r\n            inputHeight = Math.max(inputHeight, minHeight - heightDifference)\r\n        }\r\n        if (void 0 !== maxHeight) {\r\n            inputHeight = Math.min(inputHeight, maxHeight - heightDifference)\r\n        }\r\n        $input.css(\"height\", inputHeight)\r\n    },\r\n    _renderInputType: noop,\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateInputHeight()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"autoResizeEnabled\":\r\n                this._refreshEvents();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"value\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                this._renderDimensions();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                args.value && this._updateInputHeight();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxTextArea\", TextArea);\r\nmodule.exports = TextArea;\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (ui/track_bar.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    Editor = require(\"./editor/editor\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    windowUtils = require(\"../core/utils/window\"),\r\n    fx = require(\"../animation/fx\");\r\nvar TRACKBAR_CLASS = \"dx-trackbar\",\r\n    TRACKBAR_CONTAINER_CLASS = \"dx-trackbar-container\",\r\n    TRACKBAR_RANGE_CLASS = \"dx-trackbar-range\",\r\n    TRACKBAR_WRAPPER_CLASS = \"dx-trackbar-wrapper\";\r\nvar TrackBar = Editor.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            min: 0,\r\n            max: 100,\r\n            value: 0\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TRACKBAR_CLASS);\r\n        this._renderWrapper();\r\n        this._renderContainer();\r\n        this._renderRange();\r\n        this._renderValue();\r\n        this._setRangeStyles();\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setRangeStyles(this._rangeStylesConfig())\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(TRACKBAR_WRAPPER_CLASS).appendTo(this.$element())\r\n    },\r\n    _renderContainer: function() {\r\n        this._$bar = $(\"<div>\").addClass(TRACKBAR_CONTAINER_CLASS).appendTo(this._$wrapper)\r\n    },\r\n    _renderRange: function() {\r\n        this._$range = $(\"<div>\").addClass(TRACKBAR_RANGE_CLASS).appendTo(this._$bar)\r\n    },\r\n    _renderValue: function() {\r\n        var val = this.option(\"value\"),\r\n            min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (min > max) {\r\n            return\r\n        }\r\n        if (val < min) {\r\n            this.option(\"value\", min);\r\n            this._currentRatio = 0;\r\n            return\r\n        }\r\n        if (val > max) {\r\n            this.option(\"value\", max);\r\n            this._currentRatio = 1;\r\n            return\r\n        }\r\n        var ratio = min === max ? 0 : (val - min) / (max - min);\r\n        !this._needPreventAnimation && this._setRangeStyles({\r\n            width: 100 * ratio + \"%\"\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\"),\r\n            valuemax: max,\r\n            valuenow: val\r\n        });\r\n        this._currentRatio = ratio\r\n    },\r\n    _rangeStylesConfig: function() {\r\n        return {\r\n            width: 100 * this._currentRatio + \"%\"\r\n        }\r\n    },\r\n    _setRangeStyles: function(options) {\r\n        fx.stop(this._$range);\r\n        if (!options) {\r\n            this._$range.css({\r\n                width: 0\r\n            });\r\n            return\r\n        }\r\n        if (this._needPreventAnimation || !windowUtils.hasWindow()) {\r\n            return\r\n        }\r\n        fx.animate(this._$range, {\r\n            type: \"custom\",\r\n            duration: 100,\r\n            to: options\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"max\":\r\n            case \"min\":\r\n                this._renderValue();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        fx.stop(this._$range);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxTrackBar\", TrackBar);\r\nmodule.exports = TrackBar;\r\n"],"sourceRoot":""}