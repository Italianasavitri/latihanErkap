{"version":3,"sources":["webpack:///./node_modules/devextreme-angular/ui/nested/small-values-grouping.js","webpack:///./node_modules/devextreme-angular/ui/pie-chart.js","webpack:///./node_modules/devextreme/viz/pie_chart.js","webpack:///./node_modules/devextreme/viz/translators/translator1d.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD,sBAAsB,mBAAO,CAAC,yFAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kEAAkE;AAClE,SAAS,uDAAuD,wBAAwB,GAAG,oBAAoB,IAAI;AACnH,SAAS,uDAAuD,oBAAoB,IAAI;AACxF,MAAM;AACN;AACA,uBAAuB,qBAAqB;AAC5C,kBAAkB,qBAAqB;AACvC,uBAAuB,qBAAqB;AAC5C,sBAAsB,qBAAqB;AAC3C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,iD;;;;;;;;;;;;ACxHa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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AAC5D,kCAAkC,sBAAsB;AACxD,2CAA2C,sBAAsB;AACjE,8BAA8B,sBAAsB;AACpD,qCAAqC,sBAAsB;AAC3D,0BAA0B,sBAAsB;AAChD,kCAAkC,sBAAsB;AACxD,wBAAwB,sBAAsB;AAC9C,6BAA6B,sBAAsB;AACnD,8BAA8B,sBAAsB;AACpD,yBAAyB,sBAAsB;AAC/C,yBAAyB,sBAAsB;AAC/C,2BAA2B,sBAAsB;AACjD,wBAAwB,sBAAsB;AAC9C,4BAA4B,yEAAyE;AACrG;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;ACvvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb,mBAAmB,mBAAO,CAAC,+EAAqB;AAChD,eAAe,mBAAO,CAAC,iEAAc;AACrC,aAAa,mBAAO,CAAC,4EAAsB;AAC3C,gBAAgB,mBAAO,CAAC,wEAAoB;AAC5C,WAAW,mBAAO,CAAC,gFAAwB;AAC3C,kBAAkB,mBAAO,CAAC,+EAAqB;AAC/C,wBAAwB,mBAAO,CAAC,8FAA+B;AAC/D,sBAAsB,mBAAO,CAAC,mGAA+B;AAC7D;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,6FAA4B;AAC7D;AACA;AACA;AACA,YAAY,mBAAO,CAAC,4EAAsB;AAC1C,yCAAyC,mBAAO,CAAC,iEAAc;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"default~views-administration-administration-module-ngfactory~views-asset-asset-module-ngfactory~view~247d65f7.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar nested_option_1 = require(\"../../core/nested-option\");\r\nvar nested_option_2 = require(\"../../core/nested-option\");\r\nvar DxoSmallValuesGroupingComponent = (function (_super) {\r\n    __extends(DxoSmallValuesGroupingComponent, _super);\r\n    function DxoSmallValuesGroupingComponent(parentOptionHost, optionHost) {\r\n        var _this = _super.call(this) || this;\r\n        parentOptionHost.setNestedOption(_this);\r\n        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, \"groupName\", {\r\n        get: function () {\r\n            return this._getOption('groupName');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('groupName', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, \"mode\", {\r\n        get: function () {\r\n            return this._getOption('mode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('mode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, \"threshold\", {\r\n        get: function () {\r\n            return this._getOption('threshold');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('threshold', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, \"topCount\", {\r\n        get: function () {\r\n            return this._getOption('topCount');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('topCount', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, \"_optionPath\", {\r\n        get: function () {\r\n            return 'smallValuesGrouping';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxoSmallValuesGroupingComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dxo-small-values-grouping',\r\n                    template: '',\r\n                    styles: [''],\r\n                    providers: [nested_option_1.NestedOptionHost]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxoSmallValuesGroupingComponent.ctorParameters = function () { return [\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },\r\n        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },\r\n    ]; };\r\n    DxoSmallValuesGroupingComponent.propDecorators = {\r\n        \"groupName\": [{ type: core_1.Input },],\r\n        \"mode\": [{ type: core_1.Input },],\r\n        \"threshold\": [{ type: core_1.Input },],\r\n        \"topCount\": [{ type: core_1.Input },],\r\n    };\r\n    return DxoSmallValuesGroupingComponent;\r\n}(nested_option_2.NestedOption));\r\nexports.DxoSmallValuesGroupingComponent = DxoSmallValuesGroupingComponent;\r\nvar DxoSmallValuesGroupingModule = (function () {\r\n    function DxoSmallValuesGroupingModule() {\r\n    }\r\n    DxoSmallValuesGroupingModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    declarations: [\r\n                        DxoSmallValuesGroupingComponent\r\n                    ],\r\n                    exports: [\r\n                        DxoSmallValuesGroupingComponent\r\n                    ],\r\n                },] },\r\n    ];\r\n    return DxoSmallValuesGroupingModule;\r\n}());\r\nexports.DxoSmallValuesGroupingModule = DxoSmallValuesGroupingModule;\r\n//# sourceMappingURL=small-values-grouping.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/*!\r\n * devextreme-angular\r\n * Version: 18.2.3\r\n * Build date: Thu Nov 08 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_1 = require(\"@angular/platform-browser\");\r\nvar platform_browser_2 = require(\"@angular/platform-browser\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar pie_chart_1 = require(\"devextreme/viz/pie_chart\");\r\nvar component_1 = require(\"../core/component\");\r\nvar template_host_1 = require(\"../core/template-host\");\r\nvar integration_1 = require(\"../core/integration\");\r\nvar template_1 = require(\"../core/template\");\r\nvar nested_option_1 = require(\"../core/nested-option\");\r\nvar watcher_helper_1 = require(\"../core/watcher-helper\");\r\nvar iterable_differ_helper_1 = require(\"../core/iterable-differ-helper\");\r\nvar adaptive_layout_1 = require(\"./nested/adaptive-layout\");\r\nvar animation_1 = require(\"./nested/animation\");\r\nvar common_series_settings_1 = require(\"./nested/common-series-settings\");\r\nvar border_1 = require(\"./nested/border\");\r\nvar hover_style_1 = require(\"./nested/hover-style\");\r\nvar hatching_1 = require(\"./nested/hatching\");\r\nvar label_1 = require(\"./nested/label\");\r\nvar argument_format_1 = require(\"./nested/argument-format\");\r\nvar connector_1 = require(\"./nested/connector\");\r\nvar font_1 = require(\"./nested/font\");\r\nvar format_1 = require(\"./nested/format\");\r\nvar selection_style_1 = require(\"./nested/selection-style\");\r\nvar small_values_grouping_1 = require(\"./nested/small-values-grouping\");\r\nvar export_1 = require(\"./nested/export\");\r\nvar legend_1 = require(\"./nested/legend\");\r\nvar margin_1 = require(\"./nested/margin\");\r\nvar loading_indicator_1 = require(\"./nested/loading-indicator\");\r\nvar series_dxi_1 = require(\"./nested/series-dxi\");\r\nvar series_template_1 = require(\"./nested/series-template\");\r\nvar size_1 = require(\"./nested/size\");\r\nvar title_1 = require(\"./nested/title\");\r\nvar subtitle_1 = require(\"./nested/subtitle\");\r\nvar tooltip_1 = require(\"./nested/tooltip\");\r\nvar shadow_1 = require(\"./nested/shadow\");\r\nvar series_dxi_2 = require(\"./nested/series-dxi\");\r\n/**\r\n * The PieChart is a widget that visualizes data as a circle divided into sectors that each represents a portion of the whole.\r\n */\r\nvar DxPieChartComponent = (function (_super) {\r\n    __extends(DxPieChartComponent, _super);\r\n    function DxPieChartComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'done', emit: 'onDone' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'legendClick', emit: 'onLegendClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pointClick', emit: 'onPointClick' },\r\n            { subscribe: 'pointHoverChanged', emit: 'onPointHoverChanged' },\r\n            { subscribe: 'pointSelectionChanged', emit: 'onPointSelectionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'commonSeriesSettingsChange' },\r\n            { emit: 'customizeLabelChange' },\r\n            { emit: 'customizePointChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'diameterChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'innerRadiusChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'minDiameterChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointSelectionModeChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'segmentsDirectionChange' },\r\n            { emit: 'seriesChange' },\r\n            { emit: 'seriesTemplateChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'sizeGroupChange' },\r\n            { emit: 'startAngleChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'typeChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"adaptiveLayout\", {\r\n        get: /**\r\n             * Specifies adaptive layout options.\r\n             */\r\n        function () {\r\n            return this._getOption('adaptiveLayout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('adaptiveLayout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"animation\", {\r\n        get: /**\r\n             * Specifies animation options.\r\n             */\r\n        function () {\r\n            return this._getOption('animation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"commonSeriesSettings\", {\r\n        get: /**\r\n             * An object defining the configuration options that are common for all series of the PieChart widget.\r\n             */\r\n        function () {\r\n            return this._getOption('commonSeriesSettings');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('commonSeriesSettings', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"customizeLabel\", {\r\n        get: /**\r\n             * Customizes the appearance of an individual point label.\r\n             */\r\n        function () {\r\n            return this._getOption('customizeLabel');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('customizeLabel', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"customizePoint\", {\r\n        get: /**\r\n             * Customizes the appearance of an individual series point.\r\n             */\r\n        function () {\r\n            return this._getOption('customizePoint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('customizePoint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"dataSource\", {\r\n        get: /**\r\n             * Specifies the widget's data origin.\r\n             */\r\n        function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"diameter\", {\r\n        get: /**\r\n             * Specifies the diameter of the pie.\r\n             */\r\n        function () {\r\n            return this._getOption('diameter');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('diameter', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"disabled\", {\r\n        get: /**\r\n             * Specifies whether the widget responds to the user interaction.\r\n             */\r\n        function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"elementAttr\", {\r\n        get: /**\r\n             * Specifies the attributes to be attached to the widget's root element.\r\n             */\r\n        function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"export\", {\r\n        get: /**\r\n             * Configures the exporting and printing features.\r\n             */\r\n        function () {\r\n            return this._getOption('export');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('export', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"innerRadius\", {\r\n        get: /**\r\n             * Specifies the fraction of the inner radius relative to the total radius in the series of the 'doughnut' type. The value should be between 0 and 1.\r\n             */\r\n        function () {\r\n            return this._getOption('innerRadius');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('innerRadius', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"legend\", {\r\n        get: /**\r\n             * Specifies PieChart legend options.\r\n             */\r\n        function () {\r\n            return this._getOption('legend');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('legend', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"loadingIndicator\", {\r\n        get: /**\r\n             * Configures the loading indicator.\r\n             */\r\n        function () {\r\n            return this._getOption('loadingIndicator');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('loadingIndicator', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"margin\", {\r\n        get: /**\r\n             * Generates space around the widget.\r\n             */\r\n        function () {\r\n            return this._getOption('margin');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('margin', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"minDiameter\", {\r\n        get: /**\r\n             * Specifies the minimum diameter of the pie.\r\n             */\r\n        function () {\r\n            return this._getOption('minDiameter');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minDiameter', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"palette\", {\r\n        get: /**\r\n             * Sets the palette to be used to colorize series and their elements.\r\n             */\r\n        function () {\r\n            return this._getOption('palette');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('palette', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"paletteExtensionMode\", {\r\n        get: /**\r\n             * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart widget) or points in a series (in the PieChart widget).\r\n             */\r\n        function () {\r\n            return this._getOption('paletteExtensionMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('paletteExtensionMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"pathModified\", {\r\n        get: /**\r\n             * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n             */\r\n        function () {\r\n            return this._getOption('pathModified');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pathModified', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"pointSelectionMode\", {\r\n        get: /**\r\n             * Specifies whether a single point or multiple points can be selected in the chart.\r\n             */\r\n        function () {\r\n            return this._getOption('pointSelectionMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pointSelectionMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"redrawOnResize\", {\r\n        get: /**\r\n             * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n             */\r\n        function () {\r\n            return this._getOption('redrawOnResize');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('redrawOnResize', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"resolveLabelOverlapping\", {\r\n        get: /**\r\n             * Specifies how a chart must behave when point labels overlap.\r\n             */\r\n        function () {\r\n            return this._getOption('resolveLabelOverlapping');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('resolveLabelOverlapping', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"rtlEnabled\", {\r\n        get: /**\r\n             * Switches the widget to a right-to-left representation.\r\n             */\r\n        function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"segmentsDirection\", {\r\n        get: /**\r\n             * Specifies the direction that the pie chart segments will occupy.\r\n             */\r\n        function () {\r\n            return this._getOption('segmentsDirection');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('segmentsDirection', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"series\", {\r\n        get: /**\r\n             * Specifies options for the series of the PieChart widget.\r\n             */\r\n        function () {\r\n            return this._getOption('series');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('series', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"seriesTemplate\", {\r\n        get: /**\r\n             * Defines options for the series template.\r\n             */\r\n        function () {\r\n            return this._getOption('seriesTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('seriesTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"size\", {\r\n        get: /**\r\n             * Specifies the widget's size in pixels.\r\n             */\r\n        function () {\r\n            return this._getOption('size');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('size', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"sizeGroup\", {\r\n        get: /**\r\n             * Allows you to display several adjoining pies in the same size.\r\n             */\r\n        function () {\r\n            return this._getOption('sizeGroup');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('sizeGroup', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"startAngle\", {\r\n        get: /**\r\n             * Specifies the angle in arc degrees from which the first segment of a pie chart should start.\r\n             */\r\n        function () {\r\n            return this._getOption('startAngle');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('startAngle', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"theme\", {\r\n        get: /**\r\n             * Sets the name of the theme the widget uses.\r\n             */\r\n        function () {\r\n            return this._getOption('theme');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('theme', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"title\", {\r\n        get: /**\r\n             * Configures the widget's title.\r\n             */\r\n        function () {\r\n            return this._getOption('title');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('title', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"tooltip\", {\r\n        get: /**\r\n             * Configures tooltips.\r\n             */\r\n        function () {\r\n            return this._getOption('tooltip');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tooltip', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"type\", {\r\n        get: /**\r\n             * Specifies the type of the pie chart series.\r\n             */\r\n        function () {\r\n            return this._getOption('type');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('type', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxPieChartComponent.prototype, \"seriesChildren\", {\r\n        get: function () {\r\n            return this._getOption('series');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('series', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxPieChartComponent.prototype._createInstance = function (element, options) {\r\n        return new pie_chart_1.default(element, options);\r\n    };\r\n    DxPieChartComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxPieChartComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('series', changes);\r\n    };\r\n    DxPieChartComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxPieChartComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('series');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxPieChartComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxPieChartComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'dx-pie-chart',\r\n                    template: '',\r\n                    styles: [' :host {  display: block; }'],\r\n                    providers: [\r\n                        template_host_1.DxTemplateHost,\r\n                        watcher_helper_1.WatcherHelper,\r\n                        nested_option_1.NestedOptionHost,\r\n                        iterable_differ_helper_1.IterableDifferHelper\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DxPieChartComponent.ctorParameters = function () { return [\r\n        { type: core_1.ElementRef, },\r\n        { type: core_1.NgZone, },\r\n        { type: template_host_1.DxTemplateHost, },\r\n        { type: watcher_helper_1.WatcherHelper, },\r\n        { type: iterable_differ_helper_1.IterableDifferHelper, },\r\n        { type: nested_option_1.NestedOptionHost, },\r\n        { type: platform_browser_2.TransferState, },\r\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\r\n    ]; };\r\n    DxPieChartComponent.propDecorators = {\r\n        \"adaptiveLayout\": [{ type: core_1.Input },],\r\n        \"animation\": [{ type: core_1.Input },],\r\n        \"commonSeriesSettings\": [{ type: core_1.Input },],\r\n        \"customizeLabel\": [{ type: core_1.Input },],\r\n        \"customizePoint\": [{ type: core_1.Input },],\r\n        \"dataSource\": [{ type: core_1.Input },],\r\n        \"diameter\": [{ type: core_1.Input },],\r\n        \"disabled\": [{ type: core_1.Input },],\r\n        \"elementAttr\": [{ type: core_1.Input },],\r\n        \"export\": [{ type: core_1.Input },],\r\n        \"innerRadius\": [{ type: core_1.Input },],\r\n        \"legend\": [{ type: core_1.Input },],\r\n        \"loadingIndicator\": [{ type: core_1.Input },],\r\n        \"margin\": [{ type: core_1.Input },],\r\n        \"minDiameter\": [{ type: core_1.Input },],\r\n        \"palette\": [{ type: core_1.Input },],\r\n        \"paletteExtensionMode\": [{ type: core_1.Input },],\r\n        \"pathModified\": [{ type: core_1.Input },],\r\n        \"pointSelectionMode\": [{ type: core_1.Input },],\r\n        \"redrawOnResize\": [{ type: core_1.Input },],\r\n        \"resolveLabelOverlapping\": [{ type: core_1.Input },],\r\n        \"rtlEnabled\": [{ type: core_1.Input },],\r\n        \"segmentsDirection\": [{ type: core_1.Input },],\r\n        \"series\": [{ type: core_1.Input },],\r\n        \"seriesTemplate\": [{ type: core_1.Input },],\r\n        \"size\": [{ type: core_1.Input },],\r\n        \"sizeGroup\": [{ type: core_1.Input },],\r\n        \"startAngle\": [{ type: core_1.Input },],\r\n        \"theme\": [{ type: core_1.Input },],\r\n        \"title\": [{ type: core_1.Input },],\r\n        \"tooltip\": [{ type: core_1.Input },],\r\n        \"type\": [{ type: core_1.Input },],\r\n        \"onDisposing\": [{ type: core_1.Output },],\r\n        \"onDone\": [{ type: core_1.Output },],\r\n        \"onDrawn\": [{ type: core_1.Output },],\r\n        \"onExported\": [{ type: core_1.Output },],\r\n        \"onExporting\": [{ type: core_1.Output },],\r\n        \"onFileSaving\": [{ type: core_1.Output },],\r\n        \"onIncidentOccurred\": [{ type: core_1.Output },],\r\n        \"onInitialized\": [{ type: core_1.Output },],\r\n        \"onLegendClick\": [{ type: core_1.Output },],\r\n        \"onOptionChanged\": [{ type: core_1.Output },],\r\n        \"onPointClick\": [{ type: core_1.Output },],\r\n        \"onPointHoverChanged\": [{ type: core_1.Output },],\r\n        \"onPointSelectionChanged\": [{ type: core_1.Output },],\r\n        \"onTooltipHidden\": [{ type: core_1.Output },],\r\n        \"onTooltipShown\": [{ type: core_1.Output },],\r\n        \"adaptiveLayoutChange\": [{ type: core_1.Output },],\r\n        \"animationChange\": [{ type: core_1.Output },],\r\n        \"commonSeriesSettingsChange\": [{ type: core_1.Output },],\r\n        \"customizeLabelChange\": [{ type: core_1.Output },],\r\n        \"customizePointChange\": [{ type: core_1.Output },],\r\n        \"dataSourceChange\": [{ type: core_1.Output },],\r\n        \"diameterChange\": [{ type: core_1.Output },],\r\n        \"disabledChange\": [{ type: core_1.Output },],\r\n        \"elementAttrChange\": [{ type: core_1.Output },],\r\n        \"exportChange\": [{ type: core_1.Output },],\r\n        \"innerRadiusChange\": [{ type: core_1.Output },],\r\n        \"legendChange\": [{ type: core_1.Output },],\r\n        \"loadingIndicatorChange\": [{ type: core_1.Output },],\r\n        \"marginChange\": [{ type: core_1.Output },],\r\n        \"minDiameterChange\": [{ type: core_1.Output },],\r\n        \"paletteChange\": [{ type: core_1.Output },],\r\n        \"paletteExtensionModeChange\": [{ type: core_1.Output },],\r\n        \"pathModifiedChange\": [{ type: core_1.Output },],\r\n        \"pointSelectionModeChange\": [{ type: core_1.Output },],\r\n        \"redrawOnResizeChange\": [{ type: core_1.Output },],\r\n        \"resolveLabelOverlappingChange\": [{ type: core_1.Output },],\r\n        \"rtlEnabledChange\": [{ type: core_1.Output },],\r\n        \"segmentsDirectionChange\": [{ type: core_1.Output },],\r\n        \"seriesChange\": [{ type: core_1.Output },],\r\n        \"seriesTemplateChange\": [{ type: core_1.Output },],\r\n        \"sizeChange\": [{ type: core_1.Output },],\r\n        \"sizeGroupChange\": [{ type: core_1.Output },],\r\n        \"startAngleChange\": [{ type: core_1.Output },],\r\n        \"themeChange\": [{ type: core_1.Output },],\r\n        \"titleChange\": [{ type: core_1.Output },],\r\n        \"tooltipChange\": [{ type: core_1.Output },],\r\n        \"typeChange\": [{ type: core_1.Output },],\r\n        \"seriesChildren\": [{ type: core_1.ContentChildren, args: [series_dxi_2.DxiSeriesComponent,] },],\r\n    };\r\n    return DxPieChartComponent;\r\n}(component_1.DxComponent));\r\nexports.DxPieChartComponent = DxPieChartComponent;\r\nvar DxPieChartModule = (function () {\r\n    function DxPieChartModule() {\r\n    }\r\n    DxPieChartModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [\r\n                        adaptive_layout_1.DxoAdaptiveLayoutModule,\r\n                        animation_1.DxoAnimationModule,\r\n                        common_series_settings_1.DxoCommonSeriesSettingsModule,\r\n                        border_1.DxoBorderModule,\r\n                        hover_style_1.DxoHoverStyleModule,\r\n                        hatching_1.DxoHatchingModule,\r\n                        label_1.DxoLabelModule,\r\n                        argument_format_1.DxoArgumentFormatModule,\r\n                        connector_1.DxoConnectorModule,\r\n                        font_1.DxoFontModule,\r\n                        format_1.DxoFormatModule,\r\n                        selection_style_1.DxoSelectionStyleModule,\r\n                        small_values_grouping_1.DxoSmallValuesGroupingModule,\r\n                        export_1.DxoExportModule,\r\n                        legend_1.DxoLegendModule,\r\n                        margin_1.DxoMarginModule,\r\n                        loading_indicator_1.DxoLoadingIndicatorModule,\r\n                        series_dxi_1.DxiSeriesModule,\r\n                        series_template_1.DxoSeriesTemplateModule,\r\n                        size_1.DxoSizeModule,\r\n                        title_1.DxoTitleModule,\r\n                        subtitle_1.DxoSubtitleModule,\r\n                        tooltip_1.DxoTooltipModule,\r\n                        shadow_1.DxoShadowModule,\r\n                        integration_1.DxIntegrationModule,\r\n                        template_1.DxTemplateModule,\r\n                        platform_browser_1.BrowserTransferStateModule\r\n                    ],\r\n                    declarations: [\r\n                        DxPieChartComponent\r\n                    ],\r\n                    exports: [\r\n                        DxPieChartComponent,\r\n                        adaptive_layout_1.DxoAdaptiveLayoutModule,\r\n                        animation_1.DxoAnimationModule,\r\n                        common_series_settings_1.DxoCommonSeriesSettingsModule,\r\n                        border_1.DxoBorderModule,\r\n                        hover_style_1.DxoHoverStyleModule,\r\n                        hatching_1.DxoHatchingModule,\r\n                        label_1.DxoLabelModule,\r\n                        argument_format_1.DxoArgumentFormatModule,\r\n                        connector_1.DxoConnectorModule,\r\n                        font_1.DxoFontModule,\r\n                        format_1.DxoFormatModule,\r\n                        selection_style_1.DxoSelectionStyleModule,\r\n                        small_values_grouping_1.DxoSmallValuesGroupingModule,\r\n                        export_1.DxoExportModule,\r\n                        legend_1.DxoLegendModule,\r\n                        margin_1.DxoMarginModule,\r\n                        loading_indicator_1.DxoLoadingIndicatorModule,\r\n                        series_dxi_1.DxiSeriesModule,\r\n                        series_template_1.DxoSeriesTemplateModule,\r\n                        size_1.DxoSizeModule,\r\n                        title_1.DxoTitleModule,\r\n                        subtitle_1.DxoSubtitleModule,\r\n                        tooltip_1.DxoTooltipModule,\r\n                        shadow_1.DxoShadowModule,\r\n                        template_1.DxTemplateModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return DxPieChartModule;\r\n}());\r\nexports.DxPieChartModule = DxPieChartModule;\r\n//# sourceMappingURL=pie-chart.js.map","/**\r\n * DevExtreme (viz/pie_chart.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar seriesConsts = require(\"./components/consts\"),\r\n    vizUtils = require(\"./core/utils\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    isNumeric = require(\"../core/utils/type\").isNumeric,\r\n    each = require(\"../core/utils/iterator\").each,\r\n    rangeModule = require(\"./translators/range\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    baseChartModule = require(\"./chart_components/base_chart\"),\r\n    BaseChart = baseChartModule.BaseChart,\r\n    overlapping = baseChartModule.overlapping,\r\n    seriesSpacing = seriesConsts.pieSeriesSpacing,\r\n    translator1DModule = require(\"./translators/translator1d\"),\r\n    OPTIONS_FOR_REFRESH_SERIES = [\"startAngle\", \"innerRadius\", \"segmentsDirection\", \"type\"],\r\n    _extend = extend,\r\n    _each = each,\r\n    _noop = require(\"../core/utils/common\").noop,\r\n    _getVerticallyShiftedAngularCoords = require(\"./core/utils\").getVerticallyShiftedAngularCoords,\r\n    states = seriesConsts.states,\r\n    NORMAL_STATE = states.normalMark,\r\n    LEGEND_ACTIONS = [states.resetItem, states.applyHover, states.applySelected, states.applySelected];\r\n\r\nfunction getLegendItemAction(points) {\r\n    var state = NORMAL_STATE;\r\n    points.forEach(function(point) {\r\n        state |= point.fullState\r\n    });\r\n    return LEGEND_ACTIONS[state]\r\n}\r\n\r\nfunction correctPercentValue(value) {\r\n    if (isNumeric(value)) {\r\n        if (value > 1) {\r\n            value = 1\r\n        } else {\r\n            if (value < 0) {\r\n                value = 0\r\n            }\r\n        }\r\n    } else {\r\n        value = void 0\r\n    }\r\n    return value\r\n}\r\nvar dxPieChart = BaseChart.inherit({\r\n    _chartType: \"pie\",\r\n    _layoutManagerOptions: function() {\r\n        return _extend(true, {}, this.callBase(), {\r\n            piePercentage: correctPercentValue(this._themeManager.getOptions(\"diameter\")),\r\n            minPiePercentage: correctPercentValue(this._themeManager.getOptions(\"minDiameter\"))\r\n        })\r\n    },\r\n    _optionChangesMap: {\r\n        diameter: \"REINIT\",\r\n        minDiameter: \"REINIT\",\r\n        sizeGroup: \"REINIT\"\r\n    },\r\n    _disposeCore: function() {\r\n        pieSizeEqualizer.remove(this);\r\n        this.callBase()\r\n    },\r\n    _groupSeries: function() {\r\n        var series = this.series;\r\n        this._groupsData = {\r\n            groups: [{\r\n                series: series,\r\n                valueOptions: {\r\n                    valueType: \"numeric\"\r\n                }\r\n            }],\r\n            argumentOptions: series[0] && series[0].getOptions()\r\n        }\r\n    },\r\n    getArgumentAxis: function() {\r\n        return null\r\n    },\r\n    _getValueAxis: function() {\r\n        var translator = (new translator1DModule.Translator1D).setCodomain(360, 0);\r\n        return {\r\n            getTranslator: function() {\r\n                return translator\r\n            },\r\n            setBusinessRange: function(range) {\r\n                translator.setDomain(range.min, range.max)\r\n            }\r\n        }\r\n    },\r\n    _populateBusinessRange: function() {\r\n        this.series.map(function(series) {\r\n            var range = new rangeModule.Range;\r\n            range.addRange(series.getRangeData().val);\r\n            if (!range.isDefined()) {\r\n                range.setStubData()\r\n            }\r\n            series.getValueAxis().setBusinessRange(range);\r\n            return range\r\n        })\r\n    },\r\n    _specialProcessSeries: function() {\r\n        _each(this.series, function(_, singleSeries) {\r\n            singleSeries.arrangePoints()\r\n        })\r\n    },\r\n    _checkPaneName: function() {\r\n        return true\r\n    },\r\n    _processSingleSeries: function(singleSeries) {\r\n        this.callBase(singleSeries);\r\n        singleSeries.arrangePoints()\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var maxPointCount = 0;\r\n        this.series.forEach(function(s) {\r\n            maxPointCount = Math.max(s.getPointsCount(), maxPointCount)\r\n        });\r\n        this.series.forEach(function(s) {\r\n            s.setMaxPointsCount(maxPointCount)\r\n        });\r\n        this.callBase()\r\n    },\r\n    _getLegendTargets: function() {\r\n        var that = this,\r\n            itemsByArgument = {},\r\n            items = [];\r\n        that.series.forEach(function(series) {\r\n            series.getPoints().forEach(function(point) {\r\n                var argument = point.argument.valueOf();\r\n                var index = series.getPointsByArg(argument).indexOf(point);\r\n                var key = argument.valueOf().toString() + index;\r\n                itemsByArgument[key] = itemsByArgument[key] || [];\r\n                var argumentCount = itemsByArgument[key].push(point);\r\n                point.index = itemsByArgument[key][argumentCount - 2] ? itemsByArgument[key][argumentCount - 2].index : Object.keys(itemsByArgument).length - 1;\r\n                point.argumentIndex = index\r\n            })\r\n        });\r\n        _each(itemsByArgument, function(_, points) {\r\n            points.forEach(function(point, index) {\r\n                if (0 === index) {\r\n                    items.push(that._getLegendOptions(point))\r\n                } else {\r\n                    if (!items[items.length - 1].visible) {\r\n                        items[items.length - 1].visible = point.isVisible()\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        return items\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return [{\r\n            canvas: this._canvas\r\n        }]\r\n    },\r\n    _getLayoutSeries: function(series, drawOptions) {\r\n        var layout, that = this,\r\n            canvas = that._canvas,\r\n            drawnLabels = false;\r\n        layout = that.layoutManager.applyPieChartSeriesLayout(canvas, series, true);\r\n        series.forEach(function(singleSeries) {\r\n            singleSeries.correctPosition(layout, canvas);\r\n            drawnLabels = singleSeries.drawLabelsWOPoints() || drawnLabels\r\n        });\r\n        if (drawnLabels) {\r\n            layout = that.layoutManager.applyPieChartSeriesLayout(canvas, series, drawOptions.hideLayoutLabels)\r\n        }\r\n        series.forEach(function(singleSeries) {\r\n            singleSeries.hideLabels()\r\n        });\r\n        that._sizeGroupLayout = {\r\n            x: layout.centerX,\r\n            y: layout.centerY,\r\n            radius: layout.radiusOuter,\r\n            drawOptions: drawOptions\r\n        };\r\n        return layout\r\n    },\r\n    _getLayoutSeriesForEqualPies: function(series, sizeGroupLayout) {\r\n        var canvas = this._canvas,\r\n            layout = this.layoutManager.applyEqualPieChartLayout(series, sizeGroupLayout);\r\n        series.forEach(function(s) {\r\n            s.correctPosition(layout, canvas);\r\n            s.drawLabelsWOPoints()\r\n        });\r\n        this.layoutManager.correctPieLabelRadius(series, layout, canvas);\r\n        return layout\r\n    },\r\n    _updateSeriesDimensions: function(drawOptions) {\r\n        var innerRad, delta, layout, that = this,\r\n            visibleSeries = that._getVisibleSeries(),\r\n            lengthVisibleSeries = visibleSeries.length,\r\n            sizeGroupLayout = drawOptions.sizeGroupLayout;\r\n        if (lengthVisibleSeries) {\r\n            layout = sizeGroupLayout ? that._getLayoutSeriesForEqualPies(visibleSeries, sizeGroupLayout) : that._getLayoutSeries(visibleSeries, drawOptions);\r\n            delta = (layout.radiusOuter - layout.radiusInner - seriesSpacing * (lengthVisibleSeries - 1)) / lengthVisibleSeries;\r\n            innerRad = layout.radiusInner;\r\n            that._setCenter({\r\n                x: layout.centerX,\r\n                y: layout.centerY\r\n            });\r\n            visibleSeries.forEach(function(singleSeries) {\r\n                singleSeries.correctRadius({\r\n                    radiusInner: innerRad,\r\n                    radiusOuter: innerRad + delta\r\n                });\r\n                innerRad += delta + seriesSpacing\r\n            })\r\n        }\r\n    },\r\n    _renderSeries: function(drawOptions, isRotated, isLegendInside) {\r\n        this._calculateSeriesLayout(drawOptions, isRotated);\r\n        if (!drawOptions.sizeGroupLayout && this.getSizeGroup()) {\r\n            pieSizeEqualizer.queue(this);\r\n            this._clearCanvas();\r\n            return\r\n        }\r\n        this._renderSeriesElements(drawOptions, isRotated, isLegendInside)\r\n    },\r\n    _getLegendCallBack: function() {\r\n        var that = this,\r\n            legend = this._legend,\r\n            items = this._getLegendTargets().map(function(i) {\r\n                return i.legendData\r\n            });\r\n        return function(target) {\r\n            items.forEach(function(data) {\r\n                var points = [],\r\n                    callback = legend.getActionCallback({\r\n                        index: data.id\r\n                    });\r\n                that.series.forEach(function(series) {\r\n                    var seriesPoints = series.getPointsByKeys(data.argument, data.argumentIndex);\r\n                    points.push.apply(points, seriesPoints)\r\n                });\r\n                if (target && target.argument === data.argument && target.argumentIndex === data.argumentIndex) {\r\n                    points.push(target)\r\n                }\r\n                callback(getLegendItemAction(points))\r\n            })\r\n        }\r\n    },\r\n    _adjustSeriesLabels: function(moveLabelsFromCenter) {\r\n        this.series.forEach(function(series) {\r\n            series.adjustLabels(moveLabelsFromCenter)\r\n        })\r\n    },\r\n    _prepareStackPoints: _noop,\r\n    _resetStackPoints: _noop,\r\n    _applyExtraSettings: _noop,\r\n    _resolveLabelOverlappingShift: function() {\r\n        var that = this,\r\n            inverseDirection = \"anticlockwise\" === that.option(\"segmentsDirection\"),\r\n            seriesByPosition = that.series.reduce(function(r, s) {\r\n                (r[s.getOptions().label.position] || r.outside).push(s);\r\n                return r\r\n            }, {\r\n                inside: [],\r\n                columns: [],\r\n                outside: []\r\n            });\r\n        if (seriesByPosition.inside.length > 0) {\r\n            resolve(seriesByPosition.inside.reduce(function(r, singleSeries) {\r\n                return singleSeries.getVisiblePoints().reduce(function(r, point) {\r\n                    r.left.push(point);\r\n                    return r\r\n                }, r)\r\n            }, {\r\n                left: [],\r\n                right: []\r\n            }), shiftInColumnFunction)\r\n        }\r\n        seriesByPosition.columns.forEach(function(singleSeries) {\r\n            resolve(dividePoints(singleSeries), shiftInColumnFunction)\r\n        });\r\n        if (seriesByPosition.outside.length > 0) {\r\n            resolve(seriesByPosition.outside.reduce(function(r, singleSeries) {\r\n                return dividePoints(singleSeries, r)\r\n            }, null), shiftFunction);\r\n            that._adjustSeriesLabels(true)\r\n        }\r\n\r\n        function dividePoints(series, points) {\r\n            return series.getVisiblePoints().reduce(function(r, point) {\r\n                var angle = vizUtils.normalizeAngle(point.middleAngle);\r\n                (angle <= 90 || angle >= 270 ? r.right : r.left).push(point);\r\n                return r\r\n            }, points || {\r\n                left: [],\r\n                right: []\r\n            })\r\n        }\r\n\r\n        function resolve(points, shiftCallback) {\r\n            if (inverseDirection) {\r\n                points.left.reverse();\r\n                points.right.reverse()\r\n            }\r\n            overlapping.resolveLabelOverlappingInOneDirection(points.left, that._canvas, false, shiftCallback);\r\n            overlapping.resolveLabelOverlappingInOneDirection(points.right, that._canvas, false, shiftCallback)\r\n        }\r\n\r\n        function shiftFunction(box, length) {\r\n            return _getVerticallyShiftedAngularCoords(box, -length, that._center)\r\n        }\r\n\r\n        function shiftInColumnFunction(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        }\r\n    },\r\n    _setCenter: function(center) {\r\n        this._center = center\r\n    },\r\n    _disposeSeries: function(seriesIndex) {\r\n        this.callBase.apply(this, arguments);\r\n        this._abstractSeries = null\r\n    },\r\n    _legendDataField: \"point\",\r\n    _legendItemTextField: \"argument\",\r\n    _updateLegendPosition: _noop,\r\n    _renderTrackers: _noop,\r\n    _trackerType: \"PieTracker\",\r\n    _createScrollBar: _noop,\r\n    _updateAxesLayout: _noop,\r\n    _applyClipRects: _noop,\r\n    _appendAdditionalSeriesGroups: _noop,\r\n    _prepareToRender: _noop,\r\n    _isLegendInside: _noop,\r\n    _renderAxes: _noop,\r\n    _shrinkAxes: _noop,\r\n    _isRotated: _noop,\r\n    _seriesPopulatedHandlerCore: _noop,\r\n    _reinitAxes: _noop,\r\n    _correctAxes: _noop,\r\n    _getExtraOptions: function() {\r\n        var that = this;\r\n        return {\r\n            startAngle: that.option(\"startAngle\"),\r\n            innerRadius: that.option(\"innerRadius\"),\r\n            segmentsDirection: that.option(\"segmentsDirection\"),\r\n            type: that.option(\"type\")\r\n        }\r\n    },\r\n    getSizeGroup: function() {\r\n        return this._themeManager.getOptions(\"sizeGroup\")\r\n    },\r\n    getSizeGroupLayout: function() {\r\n        return this._sizeGroupLayout || {}\r\n    }\r\n});\r\n_each(OPTIONS_FOR_REFRESH_SERIES, function(_, name) {\r\n    dxPieChart.prototype._optionChangesMap[name] = \"REFRESH_SERIES_DATA_INIT\"\r\n});\r\nregisterComponent(\"dxPieChart\", dxPieChart);\r\nmodule.exports = dxPieChart;\r\nvar pieSizeEqualizer = function() {\r\n    function equalize(group, allPies) {\r\n        var pies = allPies.filter(function(p) {\r\n                return p.getSizeGroup() === group\r\n            }),\r\n            minRadius = Math.min.apply(null, pies.map(function(p) {\r\n                return p.getSizeGroupLayout().radius\r\n            })),\r\n            minPie = pies.filter(function(p) {\r\n                return p.getSizeGroupLayout().radius === minRadius\r\n            });\r\n        pies.forEach(function(p) {\r\n            p.render({\r\n                force: true,\r\n                sizeGroupLayout: minPie.length ? minPie[0].getSizeGroupLayout() : {}\r\n            })\r\n        })\r\n    }\r\n\r\n    function removeFromList(list, item) {\r\n        return list.filter(function(li) {\r\n            return li !== item\r\n        })\r\n    }\r\n\r\n    function addToList(list, item) {\r\n        return removeFromList(list, item).concat(item)\r\n    }\r\n    var pies = [],\r\n        timers = {};\r\n    return {\r\n        queue: function(pie) {\r\n            var group = pie.getSizeGroup();\r\n            pies = addToList(pies, pie);\r\n            clearTimeout(timers[group]);\r\n            timers[group] = setTimeout(function() {\r\n                equalize(group, pies)\r\n            })\r\n        },\r\n        remove: function(pie) {\r\n            pies = removeFromList(pies, pie);\r\n            if (!pies.length) {\r\n                timers = {}\r\n            }\r\n        }\r\n    }\r\n}();\r\nmodule.exports.default = module.exports;\r\n","/**\r\n * DevExtreme (viz/translators/translator1d.js)\r\n * Version: 18.2.3\r\n * Build date: Wed Nov 07 2018\r\n *\r\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _Number = Number;\r\n\r\nfunction Translator1D() {\r\n    this.setDomain(arguments[0], arguments[1]).setCodomain(arguments[2], arguments[3])\r\n}\r\nTranslator1D.prototype = {\r\n    constructor: Translator1D,\r\n    setDomain: function(domain1, domain2) {\r\n        var that = this;\r\n        that._domain1 = _Number(domain1);\r\n        that._domain2 = _Number(domain2);\r\n        that._domainDelta = that._domain2 - that._domain1;\r\n        return that\r\n    },\r\n    setCodomain: function(codomain1, codomain2) {\r\n        var that = this;\r\n        that._codomain1 = _Number(codomain1);\r\n        that._codomain2 = _Number(codomain2);\r\n        that._codomainDelta = that._codomain2 - that._codomain1;\r\n        return that\r\n    },\r\n    getDomain: function() {\r\n        return [this._domain1, this._domain2]\r\n    },\r\n    getCodomain: function() {\r\n        return [this._codomain1, this._codomain2]\r\n    },\r\n    getDomainStart: function() {\r\n        return this._domain1\r\n    },\r\n    getDomainEnd: function() {\r\n        return this._domain2\r\n    },\r\n    getCodomainStart: function() {\r\n        return this._codomain1\r\n    },\r\n    getCodomainEnd: function() {\r\n        return this._codomain2\r\n    },\r\n    getDomainRange: function() {\r\n        return this._domainDelta\r\n    },\r\n    getCodomainRange: function() {\r\n        return this._codomainDelta\r\n    },\r\n    translate: function(value) {\r\n        var ratio = (_Number(value) - this._domain1) / this._domainDelta;\r\n        return 0 <= ratio && ratio <= 1 ? this._codomain1 + ratio * this._codomainDelta : NaN\r\n    },\r\n    adjust: function(value) {\r\n        var ratio = (_Number(value) - this._domain1) / this._domainDelta,\r\n            result = NaN;\r\n        if (ratio < 0) {\r\n            result = this._domain1\r\n        } else {\r\n            if (ratio > 1) {\r\n                result = this._domain2\r\n            } else {\r\n                if (0 <= ratio && ratio <= 1) {\r\n                    result = _Number(value)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n};\r\nexports.Translator1D = Translator1D;\r\n"],"sourceRoot":""}